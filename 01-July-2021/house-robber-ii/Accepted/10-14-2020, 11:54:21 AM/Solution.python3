// https://leetcode.com/problems/house-robber-ii

class Solution:
    def rob(self, nums: List[int]) -> int:
        # O(n) time | O(1) space
        n = len(nums)
        if (n <= 3): return max(nums)
        
        # pick first item
        a, b = nums[0], 0
        for i in range(2, n - 1):
            best = max(b, a + nums[i])
            a, b = max(a, b), best
        ans = b
        
        # skip first item
        a, b = 0, nums[1]
        for i in range(2, n):
            best = max(b, a + nums[i])
            a, b = max(a, b), best
        ans = max(ans, b)
        return ans