{"id":327212075,"lang":"python3","time":"1 year, 2 months","timestamp":1587312151,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/327212075/","is_pending":"Not Pending","title":"Min Stack","memory":"17.5 MB","code":"class MinStack:\n\n    def __init__(self):\n        \"\"\"\n        initialize your data structure here.\n        \"\"\"\n        self.stack = []\n        self.minStack = []\n\n    def push(self, x: int) -> None:\n        minVal = x\n        if self.stack:\n            minVal = min(self.minStack[-1], x)\n        self.stack.append(x)\n        self.minStack.append(minVal)\n\n    def pop(self) -> None:\n        if self.stack:\n            self.minStack.pop()\n            return self.stack.pop()\n\n    def top(self) -> int:\n        if self.stack:\n            return self.stack[-1]\n\n    def getMin(self) -> int:\n        if self.stack:\n            return self.minStack[-1]\n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(x)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"111111111111111111","title_slug":"min-stack"}