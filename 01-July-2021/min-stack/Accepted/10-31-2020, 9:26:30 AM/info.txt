{"id":415159829,"lang":"python3","time":"8Â months","timestamp":1604132790,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/415159829/","is_pending":"Not Pending","title":"Min Stack","memory":"18.3 MB","code":"class MinStack:\n\n    def __init__(self):\n        \"\"\"\n        initialize your data structure here.\n        \"\"\"\n        self.stack = []\n        \n\n    def push(self, x: int) -> None:\n        minNum = x if not self.stack else min(x, self.stack[-1][1])\n        self.stack.append((x, minNum))\n\n    def pop(self) -> None:\n        if self.stack:\n            self.stack.pop()\n\n    def top(self) -> int:\n        if self.stack:\n            return self.stack[-1][0]\n\n    def getMin(self) -> int:\n        if self.stack:\n            return self.stack[-1][1]\n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(x)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"111111111111111111","title_slug":"min-stack"}