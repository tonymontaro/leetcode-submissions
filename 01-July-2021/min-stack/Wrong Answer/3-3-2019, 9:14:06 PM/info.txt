{"id":212065160,"lang":"python3","time":"2 years, 3 months","timestamp":1551644046,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/212065160/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack:\n    def __init__(self):\n        self.stack = []\n        self.min = float('inf')\n        self.getMin = lambda: self.min\n    def push(self, val):\n        self.min = min(self.min, val)\n        self.stack.append(val)\n    def pop(self):\n        if self.stack:\n            last = self.stack.pop()\n            if last == self.min and self.stack:\n                self.min = min(self.stack)\n            return last\n    def top(self):\n        if self.stack:\n            return self.stack[-1]","compare_result":"111111111011111111","title_slug":"min-stack"}