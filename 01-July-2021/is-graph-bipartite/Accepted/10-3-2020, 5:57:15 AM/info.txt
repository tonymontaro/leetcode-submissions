{"id":403776143,"lang":"java","time":"9Â months","timestamp":1601701035,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/403776143/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"51.2 MB","code":"class Solution {\n    int[][] aj;\n    int[] colors;\n    boolean valid;\n    public boolean isBipartite(int[][] graph) {\n        aj = graph;\n        int n = graph.length;\n        if (n < 1) return true;\n        colors = new int[n];\n        valid = true;\n        for (int i = 0; i < n; i++) if (colors[i] == 0) dfs(i, 0);\n        return valid;\n    }\n\n    void dfs(int node, int color) {\n        if (colors[node] > 0) {\n            if (colors[node] != color) valid = false;\n            return;\n        }\n        colors[node] = color;\n        int nextColor = color == 1 ? 2 : 1;\n        for (int child: aj[node])\n            dfs(child, nextColor);\n    }\n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite"}