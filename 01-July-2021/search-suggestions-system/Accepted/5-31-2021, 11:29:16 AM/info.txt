{"id":500791907,"lang":"cpp","time":"1Â month","timestamp":1622456956,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/500791907/","is_pending":"Not Pending","title":"Search Suggestions System","memory":"95.5 MB","code":"class Trie {\npublic:\n    struct Trie* c[26];\n    vector<string> suggestions;\n    Trie() {\n        for (auto & i : c) i = nullptr;\n    }\n};\n\n\nclass Solution {\npublic:\n    Trie* root;\n    vector<vector<string>> suggestedProducts(vector<string>& products, string searchWord) {\n        sort(products.begin(), products.end());\n        root = new Trie();\n\n        for (auto &word: products) {\n            Trie* node = root;\n            for (char c: word) {\n                if (!node->c[c - 'a']) node->c[c - 'a'] = new Trie();\n                node = node->c[c - 'a'];\n                if (node->suggestions.size() < 3) node->suggestions.push_back(word);\n            }\n        }\n\n        vector<vector<string>> ans;\n        Trie* node = root;\n        bool done = false;\n        for (char c: searchWord) {\n            if (done || !node->c[c - 'a']) {\n                done = true;\n                ans.emplace_back(vector<string>());\n                continue;\n            }\n            node = node->c[c - 'a'];\n            ans.push_back(node->suggestions);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"search-suggestions-system"}