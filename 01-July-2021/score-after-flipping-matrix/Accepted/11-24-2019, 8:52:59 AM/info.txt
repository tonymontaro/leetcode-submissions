{"id":281269740,"lang":"python3","time":"1 year, 7 months","timestamp":1574581979,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/281269740/","is_pending":"Not Pending","title":"Score After Flipping Matrix","memory":"12.9 MB","code":"class Solution(object):\n    def matrixScore(self, A):\n        \"\"\"O(n^2) time | O(1) space | for nxn matrix\"\"\"\n        rows, cols = len(A), len(A[0])\n        res = (1 << cols - 1) * rows # (1 << cols - 1) is the same as (2**(cols - 1))\n        for c in range(1, cols):\n            col_sum = sum([A[r][c] == A[r][0] for r in range(len(A))])\n            res += (2**(cols-c-1)) * max(col_sum, (rows - col_sum))\n        return res","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"score-after-flipping-matrix"}