{"id":475807933,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1617434583,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/475807933/","is_pending":"Not Pending","title":"Score After Flipping Matrix","memory":"8.1 MB","code":"#define v vector\n\n\n\nint colCount[20];\nclass Solution {\npublic:\n    int rlen, clen;\n    int matrixScore(vector<vector<int>>& grid) {\n        rlen = grid.size(), clen = grid[0].size();\n\n        memset(colCount, 0, sizeof(colCount));\n        for (int r = 0; r < rlen; r++) {\n            if (grid[r][0] == 0)\n                toggleRow(grid, r);\n            for (int c = 0; c < clen; c++) {\n                colCount[c] += grid[r][c];\n            }\n        }\n        int half = (rlen + 1) / 2;\n        for (int c = 0; c < clen; c++)\n            if (colCount[c] < half)\n                toggleCol(grid, c);\n        int ans = 0;\n        for (int r = 0; r < rlen; r++) {\n            int num = 0;\n            for (int c = 0; c < clen; c++) {\n                num = (num << 1) | grid[r][c];\n            }\n            ans += num;\n        }\n        return ans;\n    }\n    void toggleRow(v<v<int>> &grid, int r) {\n        for (int c = 0; c < clen; c++) {\n            grid[r][c] = (grid[r][c] == 1) ? 0 : 1;\n        }\n    }\n    void toggleCol(v<v<int>> &grid, int c) {\n        for (int r = 0; r < rlen; r++) {\n            grid[r][c] = (grid[r][c] == 1) ? 0 : 1;\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"score-after-flipping-matrix"}