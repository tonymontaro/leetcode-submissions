{"id":404391022,"lang":"java","time":"8 months, 4 weeks","timestamp":1601821065,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/404391022/","is_pending":"Not Pending","title":"Remove Covered Intervals","memory":"39.4 MB","code":"class Solution {\n    public int removeCoveredIntervals(int[][] intervals) {\n        // O(nlogn) time | O(n) space\n        TreeSet<Tuple> starts = new TreeSet<>();\n        TreeSet<Tuple> ends = new TreeSet<>();\n        for (int[] interval : intervals) {\n            int a = interval[0], b = interval[1];\n            starts.add(new Tuple(a, b));\n            ends.add(new Tuple(b, a));\n        }\n        int count = 0;\n        for (Tuple end : ends) {\n            Tuple start = new Tuple(end.b, end.a);\n            if (start.equals(starts.first())) count++;\n            starts.remove(start);\n        }\n\n        return count;\n    }\n    static class Tuple implements Comparable<Tuple> {\n        int a;\n        int b;\n        int c;\n        public Tuple(int a, int b) {\n            this.a = a;\n            this.b = b;\n            this.c = 0;\n        }\n        public Tuple(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n        }\n        public int getA() { return a; }\n        public int getB() { return b; }\n        public int getC() { return c; }\n        public int compareTo(Tuple other) {\n            if (this.a == other.a) {\n                return Long.compare(other.b, this.b);\n            }\n            return Long.compare(this.a, other.a);\n        }\n        @Override\n        public int hashCode() { return Arrays.deepHashCode(new Integer[]{a, b, c}); }\n        @Override\n        public boolean equals(Object o) {\n            if (!(o instanceof Tuple)) return false;\n            Tuple pairo = (Tuple) o;\n            return (this.a == pairo.a && this.b == pairo.b && this.c == pairo.c);\n        }\n        @Override\n        public String toString() { return String.format(\"(%d %d %d)  \", this.a, this.b, this.c); }\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"remove-covered-intervals"}