{"id":450960345,"lang":"python3","time":"4 months, 4 weeks","timestamp":1612253292,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/450960345/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"18.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def trimBST(self, root: TreeNode, low: int, high: int) -> TreeNode:\n        # O(n) time | O(h) space\n        \n        def solve(node):\n            if not node:\n                return node\n            if low <= node.val <= high:\n                node.left = solve(node.left)\n                node.right = solve(node.right)\n                return node\n            if node.val < low:\n                return solve(node.right)\n            return solve(node.left)\n    \n        return solve(root)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree"}