{"id":412201931,"lang":"python3","time":"8 months, 1 week","timestamp":1603442563,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/412201931/","is_pending":"Not Pending","title":"132 Pattern","memory":"15.1 MB","code":"class Solution:\n    def find132pattern(self, nums: List[int]) -> bool:\n        # O(n) time and space\n        n = len(nums)\n        minLeft = [nums[0]]\n        for i in range(1, n):\n            minLeft.append(min(minLeft[i - 1], nums[i]))\n        \n        right = [nums[n - 1]]\n        for i in range(n - 2, 0, -1):\n            if minLeft[i] == nums[i]:\n                continue\n            \n            while right and right[-1] <= minLeft[i]:\n                right.pop()\n            if right and nums[i] > right[-1]:\n                return True\n            right.append(nums[i])\n        return False\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"132-pattern"}