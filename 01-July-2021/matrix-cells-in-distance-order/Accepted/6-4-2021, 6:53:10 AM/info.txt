{"id":502781116,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1622785990,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/502781116/","is_pending":"Not Pending","title":"Matrix Cells in Distance Order","memory":"14.1 MB","code":"#define v vector\n\nclass Solution {\npublic:\n    vector<vector<int>> allCellsDistOrder(int rows, int cols, int rCenter, int cCenter) {\n        ios::sync_with_stdio(false);\n        cin.tie(nullptr);\n\n        vector<vector<int>> ans;\n        ans.reserve(rows * cols);\n        for (int r = 0; r < rows; r++)\n            for (int c = 0; c < cols; c++) ans.push_back({r, c});\n        sort(ans.begin(), ans.end(), [rCenter, cCenter](v<int>& a, v<int>& b){\n            int ad = abs(a[0] - rCenter) + abs(a[1] - cCenter);\n            int bd = abs(b[0] - rCenter) + abs(b[1] - cCenter);\n            if (bd < ad) return false;\n            return ad < bd;\n        });\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matrix-cells-in-distance-order"}