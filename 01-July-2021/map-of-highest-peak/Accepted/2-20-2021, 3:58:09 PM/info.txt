{"id":458378139,"lang":"python3","time":"4 months, 1 week","timestamp":1613833089,"status_display":"Accepted","runtime":"5784 ms","url":"/submissions/detail/458378139/","is_pending":"Not Pending","title":"Map of Highest Peak","memory":"233 MB","code":"from collections import deque\n\nclass Solution:\n    def highestPeak(self, grid: List[List[int]]) -> List[List[int]]:\n        rlen, clen = len(grid), len(grid[0])\n        dq = deque()\n        seen = {}\n        for r in range(rlen):\n            for c in range(clen):\n                if grid[r][c] == 1:\n                    seen[(r, c)] = 1\n                    dq.append((r, c, 0))\n        dirs = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n        while dq:\n            row, col, h = dq.popleft()\n            grid[row][col] = h\n            for rAdd, cAdd in dirs:\n                r, c = row + rAdd, col + cAdd\n                if 0 <= r < rlen and 0 <= c < clen and (r, c) not in seen:\n                    seen[(r, c)] = 1\n                    dq.append((r, c, h + 1))\n        return grid\n            \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"map-of-highest-peak"}