{"id":513797024,"lang":"cpp","time":"4Â days","timestamp":1624774411,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/513797024/","is_pending":"Not Pending","title":"Word Pattern","memory":"6.5 MB","code":"vector<string> splitWord(string &text) {\n    istringstream iss(text);\n    vector<string> results((istream_iterator<string>(iss)), istream_iterator<string>());\n    return results;\n}\n\n#define umap unordered_map\n#define uset unordered_set\n\n#define pi pair<ll, ll>\n#define pii pair<ll, pi>\n#define v vector\n#define ll long long\n\n\nclass Solution {\npublic:\n    bool wordPattern(string pattern, string s) {\n        v<string> words = splitWord(s);\n        if (words.size() != pattern.size()) return false;\n        umap<char, string> seen;\n        umap<string, char> rseen;\n        for (int i = 0; i < pattern.size(); i++) {\n            char c = pattern[i];\n            string w = words[i];\n            if (seen.find(c) != seen.end() && seen[c] != w) return false;\n            if (rseen.find(w) != rseen.end() && rseen[w] != c) return false;\n            seen[c] = w;\n            rseen[w] = c;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"word-pattern"}