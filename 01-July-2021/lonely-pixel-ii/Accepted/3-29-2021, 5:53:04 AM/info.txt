{"id":473731949,"lang":"cpp","time":"3Â months","timestamp":1616993584,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/473731949/","is_pending":"Not Pending","title":"Lonely Pixel II","memory":"20.2 MB","code":"class Solution {\npublic:\n    int findBlackPixel(vector<vector<char>>& grid, int k) {\n        int rlen = grid.size(), clen = grid[0].size();\n        map<string, int> row;\n        map<int, int> col;\n        for (int r = 0; r < rlen; r++) {\n            int cnt = 0;\n            string rs = \"\";\n            for (int c = 0; c < clen; c++) {\n                rs += grid[r][c];\n                if (grid[r][c] == 'W') continue;\n                cnt++;\n                col[c]++;\n            }\n            if (cnt == k) row[rs]++;\n        }\n        int ans = 0;\n        for (auto [line, cnt]: row) {\n            if (cnt != k) continue;\n            for (int c = 0; c < clen; c++) \n                if (line[c] == 'B' && col[c] == k) ans += k;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lonely-pixel-ii"}