{"id":473496703,"lang":"cpp","time":"3Â months","timestamp":1616948950,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/473496703/","is_pending":"Not Pending","title":"Lonely Pixel II","memory":"N/A","code":"class Solution {\npublic:\n    int findBlackPixel(vector<vector<char>>& grid, int k) {\n        int rlen = grid.size(), clen = grid[0].size();\n        map<string, int> rowCount;\n        map<int, int> colCount;\n        for (int r = 0; r < rlen; r++) {\n            string s = \"\";\n            for (int c = 0; c < clen; c++) {\n                s += grid[r][c];\n                if (grid[r][c] == 'B') colCount[c]++;\n            }\n            rowCount[s]++;\n        }\n        int ans = 0;\n        for (auto[s, cnt]: rowCount) {\n            if (cnt != k) continue;\n            for (int c = 0; c < clen; c++) {\n                if (s[c] == 'B' && colCount[c] == k) ans += k;\n            }\n        }\n        return ans;\n    }\n};\n","compare_result":"1111111100111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lonely-pixel-ii"}