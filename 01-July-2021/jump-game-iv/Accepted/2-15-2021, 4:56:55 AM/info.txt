{"id":456190700,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613361415,"status_display":"Accepted","runtime":"624 ms","url":"/submissions/detail/456190700/","is_pending":"Not Pending","title":"Jump Game IV","memory":"40.1 MB","code":"from collections import defaultdict, deque\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -> int:\n        adj = defaultdict(list)\n        for i, num in enumerate(arr):\n            adj[num].append(i)\n        n = len(arr)\n        deq = deque()\n        deq.append((n-1, 0))\n        seen = {}\n        seen[n-1] = 1\n        while deq:\n            i, dist = deq.popleft()\n            if i == 0:\n                return dist\n            if (arr[i], 0) not in seen:\n                for j in adj[arr[i]]:\n                    if j in seen:\n                        continue\n                    seen[j] = 1\n                    deq.append((j, dist + 1))\n                seen[(arr[i], 0)] = 1\n            for j in [i-1, i+1]:\n                if 0 <= j < n and j not in seen:\n                    seen[j] = 1\n                    deq.append((j, dist + 1))\n            ","compare_result":"1111111111111111111111111111111","title_slug":"jump-game-iv"}