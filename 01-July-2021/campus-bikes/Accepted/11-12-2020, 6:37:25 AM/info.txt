{"id":419451090,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605159445,"status_display":"Accepted","runtime":"1096 ms","url":"/submissions/detail/419451090/","is_pending":"Not Pending","title":"Campus Bikes","memory":"141.1 MB","code":"class Solution:\n    def assignBikes(self, workers: List[List[int]], bikes: List[List[int]]) -> List[int]:\n        # O(m * n log (m * n)) time | O(m * n) space\n        arr = []\n        for wi, worker in enumerate(workers):\n            for bi, bike in enumerate(bikes):\n                wx, wy = worker\n                bx, by = bike\n                dist = abs(wx - bx) + abs(wy - by)\n                arr.append((dist, wi, bi))\n\n        arr.sort()\n\n        result = [None] * len(workers)\n        seenBikes = {}\n        for node in arr:\n            dist, wi, bi = node\n            if result[wi] is not None or bi in seenBikes:\n                continue\n            result[wi] = bi\n            seenBikes[bi] = True\n        return result\n        ","compare_result":"1111111111111111111111111111","title_slug":"campus-bikes"}