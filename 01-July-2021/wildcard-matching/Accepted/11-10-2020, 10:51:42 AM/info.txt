{"id":418786911,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605001902,"status_display":"Accepted","runtime":"568 ms","url":"/submissions/detail/418786911/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"14.2 MB","code":"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        slen = len(s)\n        plen = len(p)\n        prev = [False] * (plen + 1)\n        prev[0] = True\n        for i, cha in enumerate(p):\n            if cha != \"*\":\n                break\n            prev[i + 1] = True\n        # print(prev)\n        for i in range(1, slen + 1):\n            s_cha = s[i - 1]\n            dp = [False] * (plen + 1)\n            \n            for j in range(1, plen + 1):\n                p_cha = p[j - 1]\n                if p_cha == \"*\":\n                    dp[j] = dp[j - 1] or prev[j] or prev[j - 1]\n                elif p_cha == \"?\" or p_cha == s_cha:\n                    dp[j] = prev[j - 1]\n            # print(dp)\n            prev = dp\n        return prev[-1]","compare_resulttitle_slug":"wildcard-matching"}