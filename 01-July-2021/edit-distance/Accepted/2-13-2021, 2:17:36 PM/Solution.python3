// https://leetcode.com/problems/edit-distance

class Solution:
    def minDistance(self, s1: str, s2: str) -> int:
        n, m = len(s1), len(s2)
        if n == 0 or m == 0:
            return max(n, m)

        dp = [[0] * (1 + n) for _ in range(1 + m)]
        dp[0] = [i for i in range(1 + n)]
        
        for r in range(1, m + 1):
            dp[r][0] = dp[r-1][0] + 1
            for c in range(1, n + 1):
                if s1[c-1] == s2[r-1]:
                    dp[r][c] = dp[r-1][c-1]
                else:
                    dp[r][c] = 1 + min(dp[r][c-1], dp[r-1][c], dp[r-1][c-1])
        return dp[-1][-1]
                