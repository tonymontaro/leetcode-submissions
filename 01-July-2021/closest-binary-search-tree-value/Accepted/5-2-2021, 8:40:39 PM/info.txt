{"id":488000949,"lang":"cpp","time":"1Â month, 4Â weeks","timestamp":1619984439,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/488000949/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"20.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int closestValue(TreeNode* root, double target) {\n        if (root->left && target < root->val) {\n            int rs = closestValue(root->left, target);\n            return (abs(rs - target) < abs(root->val - target)) ? rs : root->val;\n        }\n        if (root->right && target > root->val) {\n            int rs = closestValue(root->right, target);\n            return (abs(rs - target) < abs(root->val - target)) ? rs : root->val;\n        }\n        return root->val;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value"}