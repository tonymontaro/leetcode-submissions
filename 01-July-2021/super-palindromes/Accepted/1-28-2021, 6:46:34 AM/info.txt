{"id":448823305,"lang":"python3","time":"5Â months","timestamp":1611812794,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/448823305/","is_pending":"Not Pending","title":"Super Palindromes","memory":"18.6 MB","code":"class Solution:\n    arrr = []\n    \n    def initSuperPalindromes(self):\n        self.arr = []\n        def generate(idx, n, arr, num):\n            if idx >= n:\n                self.arr.append(num)\n                return\n            if idx > n // 2 or (n % 2 == 0 and idx >= n // 2):\n                d = arr[n - idx - 1]\n                arr.append(d)\n                generate(idx + 1, n, arr, num*10 + d)\n                arr.pop()\n                return\n            for i in range(10):\n                arr.append(i)\n                generate(idx + 1, n, arr, num*10 + i)\n                arr.pop()\n        for j in range(1, 10):\n            for i in range(1, 10):\n                generate(1, j, [i], i)\n                \n        def isSuper(num):\n            num = str(num)\n            l, r = 0, len(num) - 1\n            while l <= r:\n                if num[l] != num[r]:\n                    return False\n                l += 1\n                r -= 1\n            return True\n        arr = []\n        for a in self.arr:\n            num = a * a\n            if isSuper(num):\n                arr.append(num)\n        self.arrr[:] = arr\n\n    def superpalindromesInRange(self, left: str, right: str) -> int:\n        if not self.arrr:\n            self.initSuperPalindromes()\n        left, right = int(left), int(right)\n        ans = 0\n        for num in self.arrr:\n            if left <= num <= right:\n                ans += 1\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"super-palindromes"}