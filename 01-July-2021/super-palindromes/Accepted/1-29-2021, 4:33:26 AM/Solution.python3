// https://leetcode.com/problems/super-palindromes

class Solution:
    arr = []
    
    def initSuperPalindromes(self):
        def isSuper(num):
            num = str(num)
            l, r = 0, len(num) - 1
            while l <= r:
                if num[l] != num[r]:
                    return False
                l += 1
                r -= 1
            return True

        arr = []
        for i in range(1, 100001):
            n = str(i)
            num = int(n + n[::-1])
            p = num * num
            if isSuper(p):
                arr.append(p)
            
            num = int(n + n[:-1][::-1])
            p = num * num
            if isSuper(p):
                arr.append(p)
        
        self.arr[:] = arr

    def superpalindromesInRange(self, left: str, right: str) -> int:
        if not self.arr:
            self.initSuperPalindromes()
        left, right = int(left), int(right)
        ans = 0
        for num in self.arr:
            if left <= num <= right:
                ans += 1
        return ans