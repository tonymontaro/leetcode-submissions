{"id":465857774,"lang":"java","time":"3 months, 3 weeks","timestamp":1615350331,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/465857774/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"44.4 MB","code":"class Solution {\n    public int oddEvenJumps(int[] arr) {\n        TreeMap<Integer, int[]> mp = new TreeMap<>();\n        int n = arr.length;\n        int ans = 1;\n        mp.put(arr[n - 1], new int[]{1, 1});\n        for (int i = n - 2; i >= 0; i--) {\n            int num = arr[i];\n            Integer higher = mp.ceilingKey(num);\n            int h = (higher != null && mp.get(higher)[1] == 1) ? 1 : 0;\n            Integer lower = mp.floorKey(num);\n            int l = (lower != null && mp.get(lower)[0] == 1) ? 1 : 0;\n\n            ans += h == 1 ? 1 : 0;\n            mp.put(num, new int[]{h, l});\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-jump"}