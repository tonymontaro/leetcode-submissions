{"id":412519962,"lang":"java","time":"8 months, 1 week","timestamp":1603525248,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/412519962/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"43.2 MB","code":"class Solution {\n    // O(nlogn) time | O(n) space\n    public int oddEvenJumps(int[] arr) {\n        int n = arr.length;\n        int[][] dp = new int[n][2];\n        dp[n - 1] = new int[]{1, 1};\n        int ans = 1;\n        TreeMap<Integer, Integer> seen = new TreeMap<>();\n        seen.put(arr[n - 1], n - 1);\n\n        for (int i = n - 2; i >= 0; i--) {\n            int num = arr[i];\n            Integer higher = seen.ceilingKey(num);\n            Integer lower = seen.floorKey(num);\n//            out.pp(i, num, higher, lower);\n            int high = higher == null ? 0 : dp[seen.get(higher)][1];\n            int low = lower == null ? 0 : dp[seen.get(lower)][0];\n            ans += high;\n            dp[i] = new int[]{high, low};\n            seen.put(num, i);\n        }\n\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-jump"}