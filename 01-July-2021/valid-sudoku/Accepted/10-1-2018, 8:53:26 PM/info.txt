{"id":179774817,"lang":"python3","time":"2 years, 9 months","timestamp":1538423606,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/179774817/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"N/A","code":"from itertools import permutations\n\nclass Solution:\n    def isValidSudoku(self, board):\n        for i in range(9):\n            rows = {str(num): 1 for num in range(1,10)}\n            cols = dict(rows)\n            for j in range(9):\n                row = board[i][j]\n                col = board[j][i]\n                if row in rows:\n                    if rows[row] < 1:\n                        return False\n                    rows[row] -= 1\n                if col in cols:\n                    if cols[col] < 1:\n                        return False\n                    cols[col] -= 1\n        for i, j in list(permutations([1,4,7], 2)) + [(1,1), (4,4), (7,7)]:\n            vals = {str(num): 1 for num in range(1,10)}\n            for x in [i+1, i, i-1]:\n                for y in [j+1, j, j-1]:\n                    val = board[x][y]\n                    if val in vals:\n                        if vals[val] < 1:\n                            return False\n                        vals[val] -= 1\n        return True\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku"}