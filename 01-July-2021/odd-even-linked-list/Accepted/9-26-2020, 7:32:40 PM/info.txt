{"id":401040072,"lang":"java","time":"9 months, 1 week","timestamp":1601145160,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/401040072/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"39 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode oddEvenList(ListNode head) {\n        if (head == null || head.next == null) return head;\n        ListNode odd = head;\n        ListNode even = head.next;\n        ListNode firstEven = even;\n        ListNode node = even.next;\n        int parity = 1;\n        while (node != null) {\n            if (parity == 1) {\n                odd.next = node;\n                odd = node;\n            } else {\n                even.next = node;\n                even = node;\n            }\n            node = node.next;\n            parity = (parity + 1) % 2;\n        }\n        odd.next = firstEven;\n        even.next = null;\n        return head;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list"}