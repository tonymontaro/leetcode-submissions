{"id":455249586,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613152611,"status_display":"Accepted","runtime":"5932 ms","url":"/submissions/detail/455249586/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"478.7 MB","code":"class Solution:\n    def longestPalindromeSubseq(self, s: str) -> int:\n\n        cache = {}\n        def solve(idx, hi):\n            if idx > hi:\n                return 0\n            \n            if (idx, hi) in cache:\n                return cache[(idx, hi)]\n\n            skip = solve(idx + 1, hi)\n            i = hi\n            while s[i] != s[idx]:\n                i -= 1\n            include = 1 if idx == i else 2 + solve(idx + 1, i - 1)\n            ans = max(skip, include)\n            cache[(idx, hi)] = ans\n            return ans\n        \n        return solve(0, len(s)-1)\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence"}