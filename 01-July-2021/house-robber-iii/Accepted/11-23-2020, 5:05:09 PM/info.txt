{"id":423332304,"lang":"python3","time":"7 months, 1 week","timestamp":1606147509,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/423332304/","is_pending":"Not Pending","title":"House Robber III","memory":"16.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rob(self, root: TreeNode) -> int:\n        \n        def dfs(node):\n            if not node:\n                return [0, 0]\n            left = dfs(node.left)\n            right = dfs(node.right)\n            notSelected = left[0] + right[0]\n            selected = node.val + left[1] + right[1]\n            selected = max(selected, notSelected)\n            return [selected, notSelected]\n        return max(dfs(root))","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii"}