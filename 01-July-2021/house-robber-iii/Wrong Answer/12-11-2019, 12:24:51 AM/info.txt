{"id":285115904,"lang":"python3","time":"1 year, 6 months","timestamp":1576020291,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/285115904/","is_pending":"Not Pending","title":"House Robber III","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def rob(self, root) -> int:\n        \"\"\"O(n) time | O(d) space | d -> depth of tree\"\"\"\n        def helper(node):\n            if node is None:\n                return [0, 0]\n            left = helper(node.left)\n            right = helper(node.right)\n            left_val = node.left.val if node.left else 0\n            right_val = node.right.val if node.right else 0\n            \n            res_second = left[0] + right[0]\n            left_max = max(left[0] - left_val, left[1])\n            right_max = max(right[0] - right_val, right[1])\n            return [node.val + left_max + right_max, res_second]\n        return max(helper(root))","compare_result":"1111111111111111111011111111111110111011111111111111111011011111111100101000000000000000000000000000000000000000000000000000","title_slug":"house-robber-iii"}