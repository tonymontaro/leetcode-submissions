{"id":409740848,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602920880,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/409740848/","is_pending":"Not Pending","title":"Repeated DNA Sequences","memory":"25 MB","code":"class Solution:\n    def findRepeatedDnaSequences(self, s: str) -> List[str]:\n        # O(n) time and space\n        if (len(s) <= 10): return []\n        MAX = 10**9\n        mp = {\"A\": 1, \"C\": 2, \"G\": 3, \"T\": 4}\n        mpInv = {a: b for b, a in mp.items()}\n\n        num = 0\n        for i in range(10):\n            num = num * 10 + mp[s[i]]\n\n        seen = set()\n        seen.add(num)\n        ans = set()\n        for i in range(10, len(s)):\n            num = (num % MAX) * 10 + mp[s[i]]\n            if num in seen:\n                ans.add(num)\n            seen.add(num)\n\n        return [toWord(num, mpInv) for num in ans]\n\ndef toWord(num, mpInv):\n    arr = []\n    while num:\n        arr.append(mpInv[num % 10])\n        num //= 10\n    return \"\".join(arr[::-1])","compare_result":"11111111111111111111111111111111","title_slug":"repeated-dna-sequences"}