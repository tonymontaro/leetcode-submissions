{"id":407337282,"lang":"java","time":"8 months, 3 weeks","timestamp":1602418799,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/407337282/","is_pending":"Not Pending","title":"Remove Duplicate Letters","memory":"N/A","code":"class Solution {\n    public String removeDuplicateLetters(String s) {\n        HashMap<Character, Integer> cnt = counts(s);\n        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n            while (!stack.isEmpty() && ch < stack.peek() && cnt.get(stack.peek()) > 1) stack.pop();\n            stack.add(ch);\n        }\n//        out.println(stack);\n        StringBuilder rs = new StringBuilder();\n        HashSet<Character> selected = new HashSet<>();\n        for (char ch : stack) {\n            if (selected.contains(ch)) continue;\n            selected.add(ch);\n            rs.append(ch);\n        }\n        return rs.toString();\n    }\n    static HashMap<Character, Integer> counts(String word) {\n        HashMap<Character, Integer> counts = new HashMap<>();\n        for (int i = 0; i < word.length(); i++) counts.merge(word.charAt(i), 1, Integer::sum);\n        return counts;\n    }\n}","compare_result":"1101011111100001011100100101111111111110111111111110011110111010100111111111110011111110011110110010010010011110111110100111111110110010100110100100111111101110011111110011101110010010010011111110011110110010010010011110110010100110010010010010010010010010010010010010010000000000000100000","title_slug":"remove-duplicate-letters"}