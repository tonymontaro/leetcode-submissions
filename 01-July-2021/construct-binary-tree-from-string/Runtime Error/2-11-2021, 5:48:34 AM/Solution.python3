// https://leetcode.com/problems/construct-binary-tree-from-string

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def str2tree(self, s: str) -> TreeNode:
        mp = {}
        stack = []
        for i, c in enumerate(s):
            if c == '(':
                stack.append(i)
            elif c == ')':
                mp[stack.pop()] = i
        # print(mp)
        def solve(lo, hi):
            i = lo
            sign = 1
            if s[i] == '-':
                sign = -1
                i += 1
                lo += 1
            while i <= hi and s[i].isdigit():
                i += 1
            node = TreeNode(sign * int(s[lo:i]))
            if i > hi:
                return node
            right = mp[i]
            node.left = solve(i + 1, right-1)
            if right + 1 > hi:
                return node
            a, b = right + 1, mp[right + 1]
            node.right = solve(a+1, b-1)
            return node
        return solve(0, len(s)-1)