{"id":454692432,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613018914,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/454692432/","is_pending":"Not Pending","title":"Construct Binary Tree from String","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def str2tree(self, s: str) -> TreeNode:\n        mp = {}\n        stack = []\n        for i, c in enumerate(s):\n            if c == '(':\n                stack.append(i)\n            elif c == ')':\n                mp[stack.pop()] = i\n        # print(mp)\n        def solve(lo, hi):\n            i = lo\n            sign = 1\n            if s[i] == '-':\n                sign = -1\n                i += 1\n                lo += 1\n            while i <= hi and s[i].isdigit():\n                i += 1\n            node = TreeNode(sign * int(s[lo:i]))\n            if i > hi:\n                return node\n            right = mp[i]\n            node.left = solve(i + 1, right-1)\n            if right + 1 > hi:\n                return node\n            a, b = right + 1, mp[right + 1]\n            node.right = solve(a+1, b-1)\n            return node\n        return solve(0, len(s)-1)","compare_result":"11110000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"construct-binary-tree-from-string"}