{"id":402997836,"lang":"java","time":"9Â months","timestamp":1601532515,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/402997836/","is_pending":"Not Pending","title":"Filling Bookcase Shelves","memory":"38.5 MB","code":"class Solution {\n    int[][] books;\n    int width;\n    int n;\n    Integer[] dp;\n    public int minHeightShelves(int[][] books, int shelf_width) {\n        this.books = books;\n        width = shelf_width;\n        n = books.length;\n        dp = new Integer[n + 1];\n        return solve(0);\n    }\n\n    int solve(int idx) {\n        if (idx >= n) return 0;\n        if (dp[idx] == null) {\n            int w = books[idx][0];\n            int h = books[idx][1];\n            int best = h + solve(idx + 1);\n            for (int i = idx + 1; i < n; i++) {\n                w += books[i][0];\n                if (w > width) break;\n                h = Math.max(h, books[i][1]);\n                best = Math.min(best, h + solve(i + 1));\n            }\n            dp[idx] = best;\n        }\n        return dp[idx];\n    }\n}","compare_result":"11111111111111111111","title_slug":"filling-bookcase-shelves"}