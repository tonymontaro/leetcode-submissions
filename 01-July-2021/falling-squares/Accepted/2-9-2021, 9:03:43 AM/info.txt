{"id":453961127,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612857823,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/453961127/","is_pending":"Not Pending","title":"Falling Squares","memory":"15.3 MB","code":"import bisect\n#Input: [[1, 2], [2, 3], [6, 1]]\n# Output: [2, 5, 5]\nclass Solution:\n    def fallingSquares(self, arr: List[List[int]]) -> List[int]:\n        unique = set()\n        for a, b in arr:\n            unique.add(a)\n            unique.add(a + b - 1)\n        mp = {x: i for i, x in enumerate(sorted(unique))}\n\n        maxs = [0] * len(mp)\n        \n        def setmax(l, r, h):\n            for i in range(l, r + 1):\n                maxs[i] = h\n        \n        ans = []\n        mx = 0\n        for x, side in arr:\n            l, r = mp[x], mp[x + side - 1]\n            h = max(maxs[l:r+1]) + side\n            mx = max(mx, h)\n            ans.append(mx)\n            setmax(l, r, h)\n        return ans\n        \n\n        \n","compare_result":"11111111111111111111111111111111111111111111","title_slug":"falling-squares"}