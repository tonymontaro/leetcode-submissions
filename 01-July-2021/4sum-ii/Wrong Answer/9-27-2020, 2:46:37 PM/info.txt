{"id":401393148,"lang":"java","time":"9Â months","timestamp":1601214397,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/401393148/","is_pending":"Not Pending","title":"4Sum II","memory":"N/A","code":"class Solution {\n    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {\n        HashMap<Integer, Integer> count = new HashMap<>();\n        for (int a : A) {\n            for (int b : B)\n                count.merge(a + b, 1, Integer::sum);\n        }\n\n        int ans = 0;\n        for (int c : C) {\n            for (int d : D) {\n                int num = c + d;\n                if (count.getOrDefault(-num, 0) > 0) {\n                    ans++;\n                    count.merge(-num, -1, Integer::sum);\n                }\n            }\n        }\n        return ans;\n    }\n\n}","compare_result":"111100000000000000000000000000000000000000000010","title_slug":"4sum-ii"}