{"id":401391257,"lang":"java","time":"9Â months","timestamp":1601213932,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/401391257/","is_pending":"Not Pending","title":"4Sum II","memory":"N/A","code":"class Solution {\n    int[] ar;\n    int[] br;\n    int[] cr;\n    int[] dr;\n    int n;\n    Integer[][][] dp;\n    int rs;\n    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {\n        ar = A; br = B; cr = C; dr = D;\n        Arrays.sort(ar);\n        Arrays.sort(br);\n        Arrays.sort(cr);\n        Arrays.sort(dr);\n        n = ar.length;\n        if (n == 0) return 0;\n        rs = 0;\n        dp = new Integer[n + 1][n + 1][n + 1];\n        solve(0, 0, 0);\n        return rs;\n    }\n\n    int solve(int a, int b, int c) {\n        if (dp[a][b][c] == null) {\n            int sum = ar[a] + br[b] + cr[c];\n            if (sum + dr[0] > 0) {\n                dp[a][b][c] = 0;\n            } else {\n                int ans = 0;\n                for (int i = 0; i < n; i++) {\n                    if (sum + dr[i] == 0) ans++;\n                    else if (sum + dr[i] > 0)\n                        break;\n                }\n                if (a < n - 1) solve(a + 1, b, c);\n                if (b < n - 1) solve(a, b + 1, c);\n                if (c < n - 1) solve(a, b, c + 1);\n                rs += ans;\n                dp[a][b][c] = ans;\n            }\n        }\n        return dp[a][b][c];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111100","title_slug":"4sum-ii"}