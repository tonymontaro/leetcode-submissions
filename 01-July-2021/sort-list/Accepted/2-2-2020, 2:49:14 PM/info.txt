{"id":299569734,"lang":"python3","time":"1 year, 4 months","timestamp":1580651354,"status_display":"Accepted","runtime":"328 ms","url":"/submissions/detail/299569734/","is_pending":"Not Pending","title":"Sort List","memory":"51.5 MB","code":"class Solution:\n    def sortList(self, node: ListNode) -> ListNode:\n        \"\"\"O(nlogn) time\"\"\"\n        if not node or node.next is None: return node\n        \n        slow = node\n        fast = node.next\n        \n        while fast is not None:\n            if fast.next is None: break\n            slow = slow.next\n            fast = fast.next.next\n        \n        right = self.sortList(slow.next)\n        slow.next = None\n        left = self.sortList(node)\n        return self.mergeTwoLists(left, right)\n    \n    def mergeTwoLists(self, l1, l2):\n        def merge(root, l1, l2):\n            if not l1 and not l2:\n                return\n            if (not l1 and l2) or (l1 and l2 and l1.val > l2.val):\n                l1, l2 = l2, l1\n            if root:\n                root.next = l1\n            merge(l1, l2, l1.next)\n            return l1\n        \n        return merge(None, l1, l2)","compare_result":"1111111111111111","title_slug":"sort-list"}