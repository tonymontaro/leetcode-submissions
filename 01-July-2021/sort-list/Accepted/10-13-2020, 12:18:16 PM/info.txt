{"id":408202201,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602587896,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/408202201/","is_pending":"Not Pending","title":"Sort List","memory":"23.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def sortList(self, node: ListNode) -> ListNode:\n        if (not node or not node.next):\n            return node\n        first = node\n        prev, second = self.divide(node)\n        prev.next = None\n        first = self.sortList(first)\n        second = self.sortList(second)\n        return self.merge(first, second)\n\n    def merge(self, first, second):\n        head = node = ListNode()\n        while (first and second):\n            if (first.val < second.val):\n                node.next = first\n                first = first.next\n            else:\n                node.next = second\n                second = second.next\n            node = node.next\n        node.next = first or second\n        return head.next\n    \n    def divide(self, node):\n        slow = node\n        fast = node\n        prev = None\n        while (fast and fast.next):\n            prev = slow\n            slow = slow.next\n            fast = fast.next.next\n        return prev, slow\n    \n        ","compare_result":"1111111111111111","title_slug":"sort-list"}