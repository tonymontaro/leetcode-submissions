{"id":457895965,"lang":"python3","time":"4 months, 1 week","timestamp":1613718390,"status_display":"Accepted","runtime":"972 ms","url":"/submissions/detail/457895965/","is_pending":"Not Pending","title":"K Empty Slots","memory":"16.8 MB","code":"class Solution:\n    def kEmptySlots(self, bulbs: List[int], k: int) -> int:\n        n = len(bulbs)\n        days = [0] * (n + 1)\n        for d in range(n):\n            days[bulbs[d]] = d + 1\n        # print(days)\n        days[0] = math.inf\n        ans = math.inf\n        lo = 0\n        hi = lo + k + 1\n        for bulb in range(1, n + 1):\n            d = days[bulb]\n            if d > days[lo] and d > days[hi]:\n                continue\n            if bulb == hi:\n                ans = min(ans, max(days[lo], days[hi]))\n            lo = bulb\n            hi = lo + k + 1\n            if hi >= n + 1:\n                break\n        return ans if ans != math.inf else -1","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"k-empty-slots"}