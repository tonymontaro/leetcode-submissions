{"id":475105629,"lang":"cpp","time":"3Â months","timestamp":1617284021,"status_display":"Accepted","runtime":"168 ms","url":"/submissions/detail/475105629/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"110.3 MB","code":"string delim = \" \";\n#define print(x) cout << x << endl;\n#define print2(x, y) cout << x << delim << y << endl;\n#define print3(x, y, z) cout << x << delim << y << delim << z << endl;\n\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        int n = 0;\n        ListNode* node = head;\n        while (node) {\n            n++;\n            node = node->next;\n        }\n        if (n == 1) return true;\n        node = head;\n        ListNode* prev = nullptr;\n        for (int i = 1; i < n / 2; i++) {\n            ListNode *tmp = node->next;\n            node->next = prev;\n            prev = node;\n            node = tmp;\n        }\n        ListNode *other = node->next;\n        node->next = prev;\n\n        if (n % 2 == 1) other = other->next;\n        while (node) {\n            if (node->val != other->val) return false;\n            node = node->next;\n            other = other->next;\n            \n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}