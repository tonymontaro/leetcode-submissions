{"id":448045955,"lang":"python3","time":"5Â months","timestamp":1611661982,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/448045955/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"24.4 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def isPalindrome(self, head: ListNode) -> bool:\n        # O(n) time | O(1) space\n        if not head:\n            return True\n        node = head\n        prev = None\n        while node.next:\n            node.prev = prev\n            prev = node\n            node = node.next\n        node.prev = prev\n        \n        while head:\n            if head.val != node.val:\n                return False\n            head = head.next\n            if head == node:\n                return True\n            node = node.prev\n            if head == node:\n                return True ","compare_result":"11111111111111111111111111","title_slug":"palindrome-linked-list"}