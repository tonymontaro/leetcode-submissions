{"id":295664521,"lang":"python3","time":"1 year, 5 months","timestamp":1579470826,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/295664521/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"13 MB","code":"import bisect\n\nclass Solution:\n    def lengthOfLIS(self, nums) -> int:\n        \"\"\"O(nlogn) time | O(n) space\"\"\"\n        lens = []\n        for num in nums:\n            idx = bisect.bisect_left(lens, num)\n            if len(lens) == idx:\n                lens.append(num)\n            elif lens[idx] > num:\n                lens[idx] = num\n        return len(lens)","compare_result":"111111111111111111111111","title_slug":"longest-increasing-subsequence"}