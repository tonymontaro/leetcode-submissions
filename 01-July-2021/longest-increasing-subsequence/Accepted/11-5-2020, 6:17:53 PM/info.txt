{"id":417126128,"lang":"python3","time":"7Â months, 3Â weeks","timestamp":1604596673,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/417126128/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"14.2 MB","code":"import bisect\n\nclass Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        # O(nlogn) time | O(L) space where L -> lengthOfLis\n        lis = []\n        for num in nums:\n            idx = bisect.bisect_left(lis, num)\n            if idx >= len(lis):\n                lis.append(num)\n            else:\n                lis[idx] = num\n        return len(lis)\n        ","compare_result":"111111111111111111111111","title_slug":"longest-increasing-subsequence"}