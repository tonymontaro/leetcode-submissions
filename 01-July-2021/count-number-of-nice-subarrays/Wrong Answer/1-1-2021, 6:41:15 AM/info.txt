{"id":437035308,"lang":"python3","time":"6Â months","timestamp":1609479675,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/437035308/","is_pending":"Not Pending","title":"Count Number of Nice Subarrays","memory":"N/A","code":"from collections import deque\n\nclass Solution:\n    def numberOfSubarrays(self, nums: List[int], k: int) -> int:\n        odds = deque()\n        for i, num in enumerate(nums):\n            if num % 2 == 1:\n                odds.append(i)\n                k -= 1\n            if k == 0:\n                break\n        \n        n = len(nums)\n        left = -1\n        ans = 0\n        while odds and odds[-1] < n:\n            nextOdd = odds[-1] + 1\n            while nextOdd < n and nums[nextOdd] % 2 == 0:\n                nextOdd += 1\n            # print(odds, nextOdd)\n            ans += (odds[0] - left) * (nextOdd - odds[-1])\n            left = odds.popleft()\n            odds.append(nextOdd)\n        return ans\n\n            ","compare_result":"11111111111111111110111111111111111111","title_slug":"count-number-of-nice-subarrays"}