{"id":476197957,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1617508504,"status_display":"Accepted","runtime":"1492 ms","url":"/submissions/detail/476197957/","is_pending":"Not Pending","title":"Number of Different Subsequences GCDs","memory":"271.6 MB","code":"#define v vector\n\n\nint inarr[200001];\nclass Solution {\npublic:\n    int countDifferentSubsequenceGCDs(vector<int>& nums) {\n        memset(inarr, 0, sizeof(inarr));\n        set<int> seen;\n        int mx = 0;\n        for (auto x: nums) {\n            inarr[x] = 1;\n            seen.insert(x);\n            mx = max(mx, x);\n        }\n        v<int> arr;\n        arr.reserve(seen.size());\n        map<int, int> mpIdx;\n        int idx = 0;\n        for (auto x: seen) {\n            arr.push_back(x);\n            mpIdx[x] = idx++;\n        }\n\n        int ans = seen.size();\n        for (int x = mx - 1; x >= 1; x--) {\n            if (inarr[x] == 1) continue;\n            int num = x;\n            v<int> valid;\n            while (num <= mx) {\n                if (inarr[num] == 1) valid.push_back(num);\n                num += x;\n            }\n\n            if (valid.size() <= 1) continue;\n            int gd = valid[0];\n            for (int i = 1; i < valid.size(); i++) {\n                gd = gcd(gd, valid[i]);\n            }\n\n            if (inarr[x] == 0 && gd == x) ans++;\n        }\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111","title_slug":"number-of-different-subsequences-gcds"}