{"id":454702355,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613020678,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/454702355/","is_pending":"Not Pending","title":"Word Abbreviation","memory":"25 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def wordsAbbreviation(self, words: List[str]) -> List[str]:\n        groups = defaultdict(list)\n        for word in words:\n            abbr = word[0] + str(len(word)-2) + word[-1]\n            groups[abbr].append(word)\n        ans = {}\n        def abbreviate(prefix, word):\n            return prefix + str(len(word) - len(prefix) - 1) + word[-1]\n        for k, group in groups.items():\n            if len(group) == 1:\n                w = group[0]\n                ans[w] = k if len(k) < len(w) else w\n                continue\n                \n            trie = {}\n            for word in group:\n                node = trie\n                for c in word:\n                    if c not in node:\n                        node[c] = {'cnt': 0}\n                    node[c]['cnt'] += 1\n                    node = node[c]\n            for word in group:\n                abbr = word\n                node = trie\n                for i, c in enumerate(word):\n                    if node[c]['cnt'] == 1:\n                        abbr = abbreviate(word[:i+1], word)\n                        break\n                    node = node[c]\n                ans[word] = abbr if len(abbr) < len(word) else word\n        \n        return [ans[w] for w in words]\n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-abbreviation"}