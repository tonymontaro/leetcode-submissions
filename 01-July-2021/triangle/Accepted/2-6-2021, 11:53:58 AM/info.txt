{"id":452692203,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612608838,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/452692203/","is_pending":"Not Pending","title":"Triangle","memory":"15.2 MB","code":"class Solution:\n    def minimumTotal(self, triangle: List[List[int]]) -> int:\n        n = len(triangle)\n        rowLen = 2\n        prev = triangle[0]\n        for r in range(n - 1):\n            dp = [math.inf] * (len(prev) + 1)\n            for c, num in enumerate(prev):\n                dp[c] = min(dp[c], num + triangle[r+1][c])\n                dp[c + 1] = min(dp[c + 1], num + triangle[r+1][c + 1])\n            prev = dp\n        return min(prev)","compare_result":"1111111111111111111111111111111111111111111","title_slug":"triangle"}