{"id":403800656,"lang":"java","time":"9Â months","timestamp":1601706284,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/403800656/","is_pending":"Not Pending","title":"Divide Two Integers","memory":"37.9 MB","code":"class Solution {\n    public int divide(int dividend, int divisor) {\n        return (int)div(dividend, divisor);\n    }\n\n    long div(long dividend, long divisor) {\n        long signa = dividend < 0 ? 0 : 1;\n        long signb = divisor < 0 ? 0 : 1;\n        long sign = signa ^ signb;\n        dividend = Math.abs(dividend);\n        divisor = Math.abs(divisor);\n\n        long tmp = 0;\n        long quo = 0;\n        for (int i = 31; i >= 0; i--) {\n            if (tmp + (divisor << i) <= dividend) {\n                tmp += (divisor << i);\n                quo = quo | (1l << i);\n            }\n        }\n        long res = quo * (sign == 1 ? -1 : 1);\n        return Math.min(res, Integer.MAX_VALUE);\n    }\n}","compare_resulttitle_slug":"divide-two-integers"}