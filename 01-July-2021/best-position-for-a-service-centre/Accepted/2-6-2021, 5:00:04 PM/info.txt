{"id":452784668,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612627204,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/452784668/","is_pending":"Not Pending","title":"Best Position for a Service Centre","memory":"14.4 MB","code":"from math import inf, sqrt\n\nclass Solution:\n    def getMinDistSum(self, positions: List[List[int]]) -> float:\n        limit = 10**(-6)\n        \n        def calc(x, y):\n            return sum([sqrt((x - a)**2 + (y - b)**2) for a, b in positions])\n\n        dirs = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n        x = y = 0\n        ans = calc(x, y)\n        delta = 100\n        while delta > limit:\n            noChange = True\n            for xAdd, yAdd in dirs:\n                xx, yy = x + (xAdd*delta), y + (yAdd*delta)\n                res = calc(xx, yy)\n                if res < ans:\n                    ans = res\n                    x, y = xx, yy\n                    noChange = False\n            if noChange:\n                delta /= 2\n\n        return ans\n","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"best-position-for-a-service-centre"}