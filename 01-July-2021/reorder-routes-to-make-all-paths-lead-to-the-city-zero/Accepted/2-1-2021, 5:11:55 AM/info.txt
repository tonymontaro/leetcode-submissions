{"id":450427891,"lang":"python3","time":"5Â months","timestamp":1612152715,"status_display":"Accepted","runtime":"1368 ms","url":"/submissions/detail/450427891/","is_pending":"Not Pending","title":"Reorder Routes to Make All Paths Lead to the City Zero","memory":"39.2 MB","code":"class Solution:\n    def minReorder(self, n: int, connections: List[List[int]]) -> int:\n        adj = [[] for _ in range(n)]\n        for a, b in connections:\n            adj[a].append((b, 0))\n            adj[b].append((a, 1))\n        \n        self.ans = 0\n        def dfs(node, seen):\n            seen[node] = 1\n            for child, direction in adj[node]:\n                if child in seen:\n                    continue\n                if direction == 0:\n                    self.ans += 1\n                dfs(child, seen)\n        \n        dfs(0, {})\n        return self.ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorder-routes-to-make-all-paths-lead-to-the-city-zero"}