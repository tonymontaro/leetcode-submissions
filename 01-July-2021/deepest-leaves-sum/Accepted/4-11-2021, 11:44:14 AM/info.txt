{"id":479260125,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1618137854,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/479260125/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"39.1 MB","code":"class Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        stack<pair<int, TreeNode*>> st;\n        st.push({0, root});\n        vector<pair<int, TreeNode*>> leaves;\n        int mx = 0;\n        while (!st.empty()) {\n            auto a = st.top();\n            auto node = a.second;\n            int depth = a.first;\n            st.pop();\n            if (!node->left && !node->right) {\n                mx = max(mx, depth);\n                leaves.push_back(a);\n            }\n            if (node->right)\n                st.push({depth + 1, node->right});\n            if (node->left)\n                st.push({depth + 1, node->left});\n        }\n        int ans = 0;\n        for (auto [d, node]: leaves) if (d == mx) ans += node->val;\n        return ans;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}