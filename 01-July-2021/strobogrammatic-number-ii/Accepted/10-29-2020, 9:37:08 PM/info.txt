{"id":414657520,"lang":"python3","time":"8Â months","timestamp":1604003828,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/414657520/","is_pending":"Not Pending","title":"Strobogrammatic Number II","memory":"21 MB","code":"class Solution:\n    def findStrobogrammatic(self, n: int) -> List[str]:\n        # O(5^n) time and space\n        if n <= 0:\n            return [\"\"]\n        grid = []\n        grid.append([\"0\", \"1\", \"8\"])\n        if n == 1:\n            return grid[-1]\n        grid.append([\"00\", \"11\", \"69\", \"88\", \"96\"])\n        pairs = grid[-1]\n        prev = 1\n        for i in range(2, n):\n            prev = len(grid[-2])\n            rs = []\n            for pair in pairs:\n                for num in grid[i - 2]:\n                    rs.append(pair[0] + num + pair[1])\n            grid.append(rs)\n\n        return grid[n - 1][prev:]\n        ","compare_result":"1111111111111","title_slug":"strobogrammatic-number-ii"}