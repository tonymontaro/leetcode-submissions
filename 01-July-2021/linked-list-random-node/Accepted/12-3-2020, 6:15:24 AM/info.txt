{"id":426670418,"lang":"python3","time":"7Â months","timestamp":1606972524,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/426670418/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"17.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nimport random\n\nclass Solution:\n\n    def __init__(self, head: ListNode):\n        \"\"\"\n        @param head The linked list's head.\n        Note that the head is guaranteed to be not null, so it contains at least one node.\n        \"\"\"\n        self.head = head\n        \n\n    def getRandom(self) -> int:\n        \"\"\"\n        O(n) time \n        \"\"\"\n        curr = self.head\n        selected = None\n        size = 0\n        \n        while curr:\n            size += 1\n            if random.random() <= (1 / size):\n                selected = curr\n            curr = curr.next\n\n        return selected.val\n\n\n# Your Solution object will be instantiated and called as such:\n# obj = Solution(head)\n# param_1 = obj.getRandom()","compare_result":"1111111","title_slug":"linked-list-random-node"}