{"id":464076500,"lang":"python3","time":"3Â months, 3Â weeks","timestamp":1615000766,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/464076500/","is_pending":"Not Pending","title":"Campus Bikes II","memory":"15.2 MB","code":"from math import inf\nfrom functools import lru_cache\n\nclass Solution:\n    def assignBikes(self, workers: List[List[int]], bikes: List[List[int]]) -> int:\n        n, m = len(workers), len(bikes)\n        self.ans = inf\n        \n        @lru_cache(None)\n        def solve(idx, seen):\n            if idx >= n:\n                return 0\n            best = inf\n            for i in range(m):\n                if ((1 << i) & seen) != 0:\n                    continue\n                nseen = seen | (1 << i)\n                x1, y1 = workers[idx]\n                x2, y2 = bikes[i]\n                dist = abs(x1 - x2) + abs(y1 - y2)\n                best = min(best, dist + solve(idx + 1, nseen))\n            return best\n        return solve(0, 0)","compare_result":"11111111111111111111111111111111111111111111","title_slug":"campus-bikes-ii"}