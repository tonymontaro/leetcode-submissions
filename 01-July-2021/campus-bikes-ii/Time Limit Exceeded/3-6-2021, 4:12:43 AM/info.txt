{"id":464074989,"lang":"python3","time":"3 months, 3 weeks","timestamp":1615000363,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/464074989/","is_pending":"Not Pending","title":"Campus Bikes II","memory":"N/A","code":"from math import inf\n\nclass Solution:\n    def assignBikes(self, workers: List[List[int]], bikes: List[List[int]]) -> int:\n        n, m = len(workers), len(bikes)\n        self.ans = inf\n        \n        def solve(idx, seen, total):\n            if idx >= n:\n                self.ans = min(self.ans, total)\n                return\n            for i in range(m):\n                if i in seen:\n                    continue\n                seen.add(i)\n                x1, y1 = workers[idx]\n                x2, y2 = bikes[i]\n                dist = abs(x1 - x2) + abs(y1 - y2)\n                solve(idx + 1, seen, total + dist)\n                seen.remove(i)\n        solve(0, set(), 0)\n        return self.ans","compare_result":"11111111111111111111110000000000000000000000","title_slug":"campus-bikes-ii"}