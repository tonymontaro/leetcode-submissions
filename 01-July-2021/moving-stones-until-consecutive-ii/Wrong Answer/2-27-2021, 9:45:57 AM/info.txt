{"id":461214098,"lang":"python3","time":"4Â months","timestamp":1614415557,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/461214098/","is_pending":"Not Pending","title":"Moving Stones Until Consecutive II","memory":"N/A","code":"class Solution:\n    def numMovesStonesII(self, stones: List[int]) -> List[int]:\n        n = len(stones)\n        stones.sort()\n        mx = -min(stones[1] - stones[0]-1, stones[-1] - stones[-2]-1)\n        for i in range(1, n):\n            mx += stones[i] - stones[i-1] - 1\n        \n        \n        mn = n\n        empty = 0\n        left = 0\n        for i in range(1, n):\n            empty += stones[i] - stones[i-1] - 1\n            occupied = i - left + 1\n            total = empty + occupied\n            \n            while total >= n:\n                if total == n:\n                    mn = min(mn, empty)\n                else:\n                    extra = min(2, total - n)\n                    mn = min(mn, n - (i - left + 1) + extra)\n                \n                left += 1\n                diff = stones[left] - stones[left-1] - 1\n                total -= diff + 1\n                empty -= diff\n                \n        return [mn, mx]","compare_result":"1111111000000000000000000","title_slug":"moving-stones-until-consecutive-ii"}