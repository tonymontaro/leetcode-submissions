{"id":411827679,"lang":"python3","time":"8 months, 1 week","timestamp":1603359681,"status_display":"Accepted","runtime":"472 ms","url":"/submissions/detail/411827679/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"49.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\nfrom math import inf\n\nclass Solution:\n    def minDepth(self, root: TreeNode) -> int:\n        if not root: return 0\n        \n        deq = deque()\n        deq.append((root, 1))\n        \n        while deq:\n            node, dist = deq.popleft()\n            if not node.left and not node.right:\n                return dist\n            if node.left:\n                deq.append((node.left, dist + 1))\n            if node.right:\n                deq.append((node.right, dist + 1))","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}