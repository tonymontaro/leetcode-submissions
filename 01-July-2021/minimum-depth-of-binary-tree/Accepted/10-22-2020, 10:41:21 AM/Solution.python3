// https://leetcode.com/problems/minimum-depth-of-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import deque
from math import inf

class Solution:
    def minDepth(self, root: TreeNode) -> int:
        if not root: return 0
        
        deq = deque()
        deq.append((root, 1))
        
        while deq:
            node, dist = deq.popleft()
            if not node.left and not node.right:
                return dist
            if node.left:
                deq.append((node.left, dist + 1))
            if node.right:
                deq.append((node.right, dist + 1))