{"id":411826847,"lang":"python3","time":"8 months, 1 week","timestamp":1603359461,"status_display":"Accepted","runtime":"596 ms","url":"/submissions/detail/411826847/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"53.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom math import inf\n\nclass Solution:\n    def minDepth(self, node: TreeNode) -> int:\n        if not node: return 0\n        return self.dfs(node, 0)\n\n    def dfs(self, node, depth):\n        if not node.left and not node.right:\n            return depth + 1\n        elif node.right and node.left:\n            return min(self.dfs(node.left, depth + 1), self.dfs(node.right, depth + 1))\n        elif not node.right:\n            return self.dfs(node.left, depth + 1)\n        else:\n            return self.dfs(node.right, depth + 1)","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}