{"id":283134505,"lang":"python3","time":"1 year, 7 months","timestamp":1575266456,"status_display":"Accepted","runtime":"300 ms","url":"/submissions/detail/283134505/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"13.8 MB","code":"class Solution:\n    def findUnsortedSubarray(self, arr) -> int:\n        \"\"\"O(n) time | O(1) space\"\"\"\n        INF = float('inf')\n        min_ = INF\n        max_ = 0\n        for i in range(1, len(arr)):\n            if arr[i] < arr[i-1]:\n                min_ = min(min_, i-1)\n                max_ = max(max_, i)\n        if min_ == INF:\n            return 0\n\n        max_num, min_num = -INF, INF\n        for i in range(min_, max_+1):\n            max_num = max(arr[i], max_num)\n            min_num = min(arr[i], min_num)\n\n        for i in range(0, len(arr)):\n            if min_num < arr[i]:\n                min_ = min(min_, i)\n            if max_num > arr[i]:\n                max_ = max(max_, i)\n                \n        return max_ - min_ + 1","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray"}