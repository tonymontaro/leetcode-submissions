{"id":460562654,"lang":"python3","time":"4Â months","timestamp":1614266526,"status_display":"Accepted","runtime":"240 ms","url":"/submissions/detail/460562654/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"15.7 MB","code":"from math import inf\n\nclass Solution:\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n        left = inf\n        right = None\n        mx = -inf\n        stack = []\n        for i, num in enumerate(nums):\n            if num < mx:\n                right = i\n            mx = max(mx, num)\n            idx = i\n            while stack and stack[-1][0] > num:\n                a, idx = stack.pop()\n                left = min(left, idx)\n            stack.append((num, idx))\n        return 0 if left == inf else right - left + 1\n                \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray"}