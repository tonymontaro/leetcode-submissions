{"id":434395539,"lang":"python3","time":"6 months, 1 week","timestamp":1608902716,"status_display":"Accepted","runtime":"196 ms","url":"/submissions/detail/434395539/","is_pending":"Not Pending","title":"Diagonal Traverse","memory":"17.3 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def findDiagonalOrder(self, matrix: List[List[int]]) -> List[int]:\n        # O(n) time and space\n        if not matrix or not matrix[0]:\n            return []\n        diagonals = defaultdict(list)\n        rlen, clen = len(matrix), len(matrix[0])\n        for r in range(rlen):\n            for c in range(clen):\n                diagonals[r + c].append(matrix[r][c])\n        \n        res = []\n        for i in range(rlen + clen - 1):\n            if i % 2 == 1:\n                res.extend(diagonals[i])\n            else:\n                res.extend(diagonals[i][::-1])\n        return res","compare_result":"11111111111111111111111111111111","title_slug":"diagonal-traverse"}