{"id":445749825,"lang":"python3","time":"5 months, 1 week","timestamp":1611203225,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/445749825/","is_pending":"Not Pending","title":"RLE Iterator","memory":"15 MB","code":"class RLEIterator:\n\n    def __init__(self, A: List[int]):\n        self.arr = A\n        self.idx = 0\n\n    def next(self, n: int) -> int:\n        while self.idx < len(self.arr):\n            idx = self.idx\n\n            val = self.arr[idx + 1]\n            rm = min(n, self.arr[idx])\n            n -= rm\n            self.arr[idx] -= rm\n            if self.arr[idx] == 0:\n                idx += 2\n            self.idx = idx\n            if n == 0:\n                return val\n        return -1\n        \n\n\n# Your RLEIterator object will be instantiated and called as such:\n# obj = RLEIterator(A)\n# param_1 = obj.next(n)","compare_result":"111111111","title_slug":"rle-iterator"}