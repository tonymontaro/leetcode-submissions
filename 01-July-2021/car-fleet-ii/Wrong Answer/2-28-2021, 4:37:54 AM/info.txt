{"id":461536651,"lang":"python3","time":"4Â months","timestamp":1614483474,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/461536651/","is_pending":"Not Pending","title":"Car Fleet II","memory":"N/A","code":"class Solution:\n    def getCollisionTimes(self, cars: List[List[int]]) -> List[float]:\n        diff = 10**(-6)\n        \n        def solve(d1, s1, d2, s2):\n            if s2 >= s1:\n                return -1\n            lo = 0\n            hi = 10**9\n            valid = hi\n            while (hi - lo) > diff:\n                midTime = (hi + lo) / 2\n                a = d1 + (s1 * midTime)\n                b = d2 + (s2 * midTime)\n                if a >= b:\n                    hi = midTime\n                    valid = midTime\n                else:\n                    lo = midTime\n            return valid\n        \n        n = len(cars)\n        ans = [-1] * n\n        stack = []\n        for i, (d2, s2) in enumerate(cars):\n            dd = d2\n            while stack and s2 < stack[-1][1]:\n                d1, s1, idx = stack.pop()\n                ans[idx] = solve(d1, s1, dd, s2)\n                dd = d1\n            stack.append((d2, s2, i))\n        return ans\n            ","compare_result":"11100000101001010100010101000100100100010011001110010001100010000000000000000111001","title_slug":"car-fleet-ii"}