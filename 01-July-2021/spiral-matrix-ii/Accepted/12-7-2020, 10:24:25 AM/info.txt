{"id":428145720,"lang":"python3","time":"6 months, 3 weeks","timestamp":1607333065,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/428145720/","is_pending":"Not Pending","title":"Spiral Matrix II","memory":"14.4 MB","code":"class Solution:\n    def generateMatrix(self, n: int) -> List[List[int]]:\n        grid = [[0] * n for _ in range(n)]\n        rows = cols = n\n        num = 1\n        direction = 1\n        directions = [1, 1]\n        lengths = [n - 1, n]\n        r, c = 0, -1\n        while num <= n * n:\n            rAdd, cAdd = 0, 0\n            if direction == 0:\n                rAdd = directions[0]\n                directions[0] = -1 if rAdd == 1 else 1\n                ln = lengths[0]\n                lengths[0] -= 1\n            else:\n                cAdd = directions[1]\n                directions[1] = -1 if cAdd == 1 else 1\n                ln = lengths[1]\n                lengths[1] -= 1\n            direction = (direction + 1) % 2\n                \n            for _ in range(ln):\n                r, c = r + rAdd, c + cAdd\n                grid[r][c] = num\n                num += 1\n        return grid\n        ","compare_result":"11111111111111111111","title_slug":"spiral-matrix-ii"}