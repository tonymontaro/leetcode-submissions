// https://leetcode.com/problems/spiral-matrix-ii

class Solution:
    def generateMatrix(self, n: int) -> List[List[int]]:
        grid = [[0] * n for _ in range(n)]
        rows = cols = n
        num = 1
        direction = 1
        directions = [1, 1]
        lengths = [n - 1, n]
        r, c = 0, -1
        while num <= n * n:
            rAdd, cAdd = 0, 0
            if direction == 0:
                rAdd = directions[0]
                directions[0] = -1 if rAdd == 1 else 1
                ln = lengths[0]
                lengths[0] -= 1
            else:
                cAdd = directions[1]
                directions[1] = -1 if cAdd == 1 else 1
                ln = lengths[1]
                lengths[1] -= 1
            direction = (direction + 1) % 2
                
            for _ in range(ln):
                r, c = r + rAdd, c + cAdd
                grid[r][c] = num
                num += 1
        return grid
        