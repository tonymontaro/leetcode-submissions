// https://leetcode.com/problems/binary-tree-inorder-traversal

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import deque

class Solution:
    def inorderTraversal(self, root: TreeNode) -> List[int]:
        if not root:
            return root

        def add(node, queue):
            queue.appendleft(node)
            while queue[0].left:
                queue.appendleft(queue[0].left)

        queue = deque()
        add(root, queue)
        result = []
        while (queue):
            node = queue.popleft()
            result.append(node.val)
            if node.right:
                add(node.right, queue)
        return result