{"id":416539027,"lang":"python3","time":"7 months, 4 weeks","timestamp":1604449494,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/416539027/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"14.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\n\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -> List[int]:\n        if not root:\n            return root\n\n        def add(node, queue):\n            queue.appendleft(node)\n            while queue[0].left:\n                queue.appendleft(queue[0].left)\n\n        queue = deque()\n        add(root, queue)\n        result = []\n        while (queue):\n            node = queue.popleft()\n            result.append(node.val)\n            if node.right:\n                add(node.right, queue)\n        return result","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}