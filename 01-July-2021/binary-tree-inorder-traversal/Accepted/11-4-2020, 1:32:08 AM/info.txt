{"id":416540681,"lang":"python3","time":"7 months, 4 weeks","timestamp":1604449928,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/416540681/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def inorderTraversal(self, root: TreeNode) -> List[int]:\n        result = []\n        stack = []\n        node = root\n        while stack or node:\n            if node:\n                stack.append(node)\n                node = node.left\n            else:\n                last = stack.pop()\n                result.append(last.val)\n                node = last.right\n        return result","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}