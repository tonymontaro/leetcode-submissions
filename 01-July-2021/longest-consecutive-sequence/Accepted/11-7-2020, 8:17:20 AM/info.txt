{"id":417655713,"lang":"python3","time":"7Â months, 3Â weeks","timestamp":1604733440,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/417655713/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"29 MB","code":"class Solution:\n    def longestConsecutive(self, nums: List[int]) -> int:\n        # O(n) time and space\n        adj = {}\n        nums = set(nums)\n        \n        for num in nums:\n            adj[num] = {}\n            if num - 1 in adj:\n                adj[num][num - 1] = True\n                adj[num - 1][num] = True\n            if num + 1 in adj:\n                adj[num][num + 1] = True\n                adj[num + 1][num] = True\n        \n        def dfs(num, seen):\n            seen[num] = True\n            count = 1\n            for child in adj[num]:\n                if child not in seen:\n                    count += dfs(child, seen)\n            return count\n        \n        best = 0\n        visited = {}\n        for num in nums:\n            if num not in visited:\n                best = max(best, dfs(num, visited))\n        return best","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence"}