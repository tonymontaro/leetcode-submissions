{"id":477549735,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1617773655,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/477549735/","is_pending":"Not Pending","title":"Transform to Chessboard","memory":"N/A","code":"#define v vector\n\nclass Solution {\npublic:\n    \n    int n;\n    int movesToChessboard(vector<vector<int>>& board) {\n        n = board.size();\n        map<string, int> mp;\n        for (int r = 0; r < n; r++) {\n            string s = \"\";\n            for (int c = 0; c < n; c++) {\n                s += (board[r][c] + '0');\n            }\n            mp[s]++;\n        }\n        if (mp.size() != 2) return -1;\n        for (auto x: mp) {\n            if (x.second != n / 2) return -1;\n            int zeros = 0;\n            string s = x.first;\n            for (int i = 0; i < s.size(); i++) if (s[i] == '0') zeros++;\n            if (zeros != n / 2) return -1;\n        }\n        return min(count(0, board), count(1, board));\n    }\n    int count(int val, v<v<int>> &board) {\n        int other = (val + 1) % 2;\n        int cnt = 0;\n        for (int c = 0; c < n; c++) {\n            if (c % 2 == 0 && board[0][c] != val) cnt++;\n            if (c % 2 == 1 && board[0][c] != other) cnt++;\n        }\n        for (int r = 0; r < n; r++) {\n            if (r % 2 == 0 && board[r][0] != val) cnt++;\n            if (r % 2 == 1 && board[r][0] != other) cnt++;\n        }\n        return cnt / 2;\n    }\n};","compare_result":"1111000011100001111000011111100110101000101000011110000011000101110000001000000111100000010000000110000100100011101000011101","title_slug":"transform-to-chessboard"}