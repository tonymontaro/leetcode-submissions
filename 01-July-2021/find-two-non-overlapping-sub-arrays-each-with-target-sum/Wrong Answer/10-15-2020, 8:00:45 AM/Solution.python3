// https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum

class Solution:
    def minSumOfLengths(self, arr: List[int], target: int) -> int:
        seen = {0: -1}
        a = b = -1
        total = 0
        for (i, num) in enumerate(arr):
            total += num
            diff = total - target
            if (diff in seen):
                ln = i - seen[diff]
                if (a == -1):
                    a = ln
                elif (b == -1):
                    b = ln
                elif (ln < a or ln < b):
                    a, b = sorted([a, b, ln])[:2]
                seen = {0: i}
                total = 0
            else:
                seen[total] = i

        return sum([a, b]) if (a != -1 and b != -1) else -1