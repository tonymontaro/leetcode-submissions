{"id":408963950,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602744816,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/408963950/","is_pending":"Not Pending","title":"Find Two Non-overlapping Sub-arrays Each With Target Sum","memory":"N/A","code":"class Solution:\n    def minSumOfLengths(self, arr: List[int], target: int) -> int:\n        seen = {0: -1}\n        a = b = -1\n        total = 0\n        for (i, num) in enumerate(arr):\n            total += num\n            diff = total - target\n            if (diff in seen):\n                ln = i - seen[diff]\n                if (a == -1 or ln < a):\n                    a = ln\n                elif (b == -1 or ln < b):\n                    b = ln\n                seen = {0: i}\n                total = 0\n            else:\n                seen[total] = i\n\n        return sum([a, b]) if (a != -1 and b != -1) else -1","compare_result":"111111110111010110110111111111100111011111011111111111110111","title_slug":"find-two-non-overlapping-sub-arrays-each-with-target-sum"}