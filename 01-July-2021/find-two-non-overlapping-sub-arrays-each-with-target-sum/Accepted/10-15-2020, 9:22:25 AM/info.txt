{"id":408989668,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602750145,"status_display":"Accepted","runtime":"912 ms","url":"/submissions/detail/408989668/","is_pending":"Not Pending","title":"Find Two Non-overlapping Sub-arrays Each With Target Sum","memory":"37 MB","code":"from itertools import accumulate\nfrom math import inf\n\nclass Solution:\n    def minSumOfLengths(self, arr: List[int], target: int) -> int:\n        seen = {0: -1}\n        n = len(arr)\n        bestArr = [inf for _ in range(n)]\n        best = inf\n        ans = inf\n        for i, total in enumerate(accumulate(arr)):\n            diff = total - target\n            if diff in seen:\n                end = seen[diff]\n                ln = i - end\n                if (end >= 0):\n                    ans = min(ans, ln + bestArr[end])\n                best = min(ln, best)\n            bestArr[i] = best\n            seen[total] = i\n        return -1 if ans == inf else ans","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"find-two-non-overlapping-sub-arrays-each-with-target-sum"}