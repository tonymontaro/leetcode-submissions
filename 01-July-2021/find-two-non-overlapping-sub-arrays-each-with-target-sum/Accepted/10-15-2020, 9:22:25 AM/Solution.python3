// https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum

from itertools import accumulate
from math import inf

class Solution:
    def minSumOfLengths(self, arr: List[int], target: int) -> int:
        seen = {0: -1}
        n = len(arr)
        bestArr = [inf for _ in range(n)]
        best = inf
        ans = inf
        for i, total in enumerate(accumulate(arr)):
            diff = total - target
            if diff in seen:
                end = seen[diff]
                ln = i - end
                if (end >= 0):
                    ans = min(ans, ln + bestArr[end])
                best = min(ln, best)
            bestArr[i] = best
            seen[total] = i
        return -1 if ans == inf else ans