{"id":453237480,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612712719,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/453237480/","is_pending":"Not Pending","title":"Dungeon Game","memory":"N/A","code":"from heapq import heappush, heappop\n\nclass Solution:\n    def calculateMinimumHP(self, grid: List[List[int]]) -> int:\n        if not grid or not grid[0]:\n            return 0\n        rlen, clen = len(grid), len(grid[0])\n        grid = [[-x for x in row] for row in grid]\n        # print(grid)\n        first = grid[0][0]\n        seen = {(0, 0): first}\n        heap = [(first, first, 0, 0)]\n\n        while heap:\n            mx, prev, row, col = heappop(heap)\n            if (row, col) == (rlen-1, clen-1):\n                return max(0, mx) + 1\n            \n            for rAdd, cAdd in [(0, 1), (1, 0)]:\n                r, c = rAdd + row, cAdd + col\n                if 0 <= r < rlen and 0 <= c < clen:\n                    val = prev + grid[r][c]\n                    mxx = max(mx, val)\n                    if (r, c) not in seen or mxx < seen[(r, c)]:\n                        seen[(r, c)] = mxx\n                        heappush(heap, (mxx, val, r, c))\n            ","compare_result":"111111111111111111111100011111111111111110001","title_slug":"dungeon-game"}