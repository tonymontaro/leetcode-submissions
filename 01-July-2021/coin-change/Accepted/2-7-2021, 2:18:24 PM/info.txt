{"id":453200524,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612703904,"status_display":"Accepted","runtime":"1244 ms","url":"/submissions/detail/453200524/","is_pending":"Not Pending","title":"Coin Change","memory":"14.4 MB","code":"from math import inf\n\nclass Solution:\n    def coinChange(self, coins: List[int], amount: int) -> int:\n        # dp[i] fewest coin to make i\n        coins.sort()\n        dp = [inf] * (amount + 1)\n        dp[0] = 0\n        \n        for i in range(amount + 1):\n            for coin in coins:\n                if coin > i:\n                    break\n                dp[i] = min(dp[i], 1 + dp[i - coin])\n        return dp[amount] if dp[amount] != inf else -1","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change"}