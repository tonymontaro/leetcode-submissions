{"id":435928665,"lang":"python3","time":"6Â months","timestamp":1609234124,"status_display":"Accepted","runtime":"348 ms","url":"/submissions/detail/435928665/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"50 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def pseudoPalindromicPaths (self, root: TreeNode) -> int:\n        self.res = 0\n        \n        def dfs(node, mask):\n            if not node:\n                return\n            \n            mask = mask ^ (1 << node.val)\n            if node.left is None and node.right is None:\n                if mask & (mask - 1) == 0:\n                    self.res += 1\n            \n            dfs(node.left, mask)\n            dfs(node.right, mask)\n        \n        dfs(root, 0)\n        return self.res","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree"}