// https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pseudoPalindromicPaths (self, root: TreeNode) -> int:
        self.res = 0
        
        def dfs(node, mask):
            if not node:
                return
            
            mask = mask ^ (1 << node.val)
            if node.left is None and node.right is None:
                if mask & (mask - 1) == 0:
                    self.res += 1
            
            dfs(node.left, mask)
            dfs(node.right, mask)
        
        dfs(root, 0)
        return self.res