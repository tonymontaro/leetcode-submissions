{"id":435916086,"lang":"python3","time":"6Â months","timestamp":1609231192,"status_display":"Accepted","runtime":"440 ms","url":"/submissions/detail/435916086/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"50.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import defaultdict\n\nclass Solution:\n    def pseudoPalindromicPaths (self, root: TreeNode) -> int:\n        self.res = 0\n        \n        def dfs(node, seen):\n            if node is None:\n                return\n            \n            seen[node.val] += 1\n            if node.left is None and node.right is None:\n                ones = 0\n                for v in seen.values():\n                    ones += v % 2 == 1\n                if ones <= 1:\n                    self.res += 1\n            \n            dfs(node.right, seen)\n            dfs(node.left, seen)\n            seen[node.val] -= 1\n        \n        dfs(root, defaultdict(int))\n        return self.res\n        ","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree"}