{"id":433636074,"lang":"python3","time":"6 months, 1 week","timestamp":1608708691,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/433636074/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"18.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: TreeNode) -> bool:\n        self.valid = True\n        \n        def dfs(node):\n            if not node:\n                return 0\n            left = dfs(node.left)\n            right = dfs(node.right)\n            if abs(left - right) > 1:\n                self.valid = False\n            return max(left, right) + 1\n\n        dfs(root)\n        return self.valid","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}