{"id":418135013,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604854507,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/418135013/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"25.5 MB","code":"from heapq import heappushpop, heappush\n\nclass MedianFinder:\n\n    def __init__(self):\n        self.left = []\n        self.right = []\n\n    def addNum(self, num: int) -> None:\n        if len(self.right) == len(self.left):\n            heappush(self.right, -heappushpop(self.left, -num))\n        else:\n            heappush(self.left, -heappushpop(self.right, num))\n        \n        \n    def findMedian(self) -> float:\n        # print(self.left, self.right)\n        if not self.left and not self.right:\n            return 0\n        \n        if len(self.left) == len(self.right):\n            return (-self.left[0] + self.right[0]) / 2\n        return self.right[0]\n\n\n# Your MedianFinder object will be instantiated and called as such:\n# obj = MedianFinder()\n# obj.addNum(num)\n# param_2 = obj.findMedian()","compare_result":"111111111111111111","title_slug":"find-median-from-data-stream"}