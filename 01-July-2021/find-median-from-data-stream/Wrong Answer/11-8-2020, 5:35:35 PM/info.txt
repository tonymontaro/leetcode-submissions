{"id":418130022,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604853335,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/418130022/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"import heapq\n\nclass MedianFinder:\n\n    def __init__(self):\n        self.left = []\n        self.right = []\n\n    def addNum(self, num: int) -> None:\n        heapq.heappush(self.right, num)\n        if len(self.right) - len(self.left) > 1:\n            low = heapq.heappop(self.right)\n            heapq.heappush(self.left, -low)\n        \n    def findMedian(self) -> float:\n        if not self.left and not self.right:\n            return 0\n        \n        if len(self.left) == len(self.right):\n            return (-self.left[0] + self.right[0]) / 2\n        return self.right[0]\n\n\n# Your MedianFinder object will be instantiated and called as such:\n# obj = MedianFinder()\n# obj.addNum(num)\n# param_2 = obj.findMedian()","compare_result":"111101000000000000","title_slug":"find-median-from-data-stream"}