{"id":453495342,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612761163,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/453495342/","is_pending":"Not Pending","title":"Print Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def printTree(self, root: TreeNode) -> List[List[str]]:\n\n        def getH(node):\n            if not node:\n                return 0\n            return 1 + max(getH(node.left), getH(node.right))\n        h = getH(root)\n        w = 0\n        for i in range(h - 1):\n            w += pow(2, i)\n        w = w*2 + 1\n        grid = [[\"\"] * w for _ in range(h)]\n        \n        def solve(node, l, r, d):\n            if not node:\n                return\n            mid = (r - l) // 2\n            grid[d][mid] = str(node.val)\n            solve(node.left, l, mid-1, d+1)\n            solve(node.right, mid+1, r, d+1)\n        solve(root, 0, w-1, 0)\n        return grid\n        ","compare_result":"1001000001011101010100001000010000000000000100000000000000010000000000000","title_slug":"print-binary-tree"}