// https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv

class Solution:
    def maxProfit(self, k: int, prices: List[int]) -> int:
        n = len(prices)
        if (n < 1): return 0
        prev = [0 for _ in range(n + 1)]
        for j in range(k):
            cur = [0 for _ in range(n + 1)]
            deal = -prices[0]
            for i in range(2, n + 1):
                price = prices[i - 1]
                cur[i] = max(prev[i], price + deal, cur[i - 1])
                deal = max(deal, prev[i - 1] - price)

            if cur[-1] == prev[-1]:
                return prev[-1]
            prev = cur
        return prev[-1]
                