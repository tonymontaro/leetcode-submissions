{"id":462832309,"lang":"python3","time":"4Â months","timestamp":1614740504,"status_display":"Accepted","runtime":"604 ms","url":"/submissions/detail/462832309/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"66.4 MB","code":"from collections import defaultdict\nimport bisect\n\nclass TimeMap:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.mp = defaultdict(list)\n        self.vals = defaultdict(list)\n        \n\n    def set(self, key: str, value: str, timestamp: int) -> None:\n        self.mp[key].append(timestamp)\n        self.vals[key].append(value)\n        \n\n    def get(self, key: str, timestamp: int) -> str:\n        idx = bisect.bisect_right(self.mp[key], timestamp)\n        if idx == 0:\n            return \"\"\n        if idx >= len(self.mp[key]) or self.mp[key][idx] > timestamp:\n            idx -= 1\n        return self.vals[key][idx]\n\n\n# Your TimeMap object will be instantiated and called as such:\n# obj = TimeMap()\n# obj.set(key,value,timestamp)\n# param_2 = obj.get(key,timestamp)","compare_result":"111111111111111111111111111111111111111111111","title_slug":"time-based-key-value-store"}