{"id":422905722,"lang":"python3","time":"7 months, 1 week","timestamp":1606034833,"status_display":"Accepted","runtime":"780 ms","url":"/submissions/detail/422905722/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"70.1 MB","code":"from collections import defaultdict\n\nclass TimeMap:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.timeMap = defaultdict(list)\n        \n\n    def set(self, key: str, value: str, timestamp: int) -> None:\n        self.timeMap[key].append((value, timestamp))\n        \n\n    def get(self, key: str, timestamp: int) -> str:\n        stamps = self.timeMap[key]\n        lo = 0\n        hi = len(stamps) - 1\n        ans = \"\"\n        while lo <= hi:\n            mid = (lo + hi) // 2\n            value, time = stamps[mid]\n            if time <= timestamp:\n                ans = value\n                lo = mid + 1\n            else:\n                hi = mid - 1\n        return ans\n        \n\n\n# Your TimeMap object will be instantiated and called as such:\n# obj = TimeMap()\n# obj.set(key,value,timestamp)\n# param_2 = obj.get(key,timestamp)","compare_result":"111111111111111111111111111111111111111111111","title_slug":"time-based-key-value-store"}