{"id":307668364,"lang":"python3","time":"1 year, 4 months","timestamp":1582886931,"status_display":"Accepted","runtime":"1500 ms","url":"/submissions/detail/307668364/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"13.8 MB","code":"def get_total(arr):\n    total = 0\n    max_total = 0\n    for num in arr:\n        if num > 0:\n            total += num\n            max_total = max(total, max_total)\n        else:\n            total = 0\n    return max_total\n\nclass Solution:\n    def maximalRectangle(self, grid) -> int:\n        \"\"\"O(col^2 * row) time | O(row) space\"\"\"\n        if not grid: return 0\n        grid = [[int(i) for i in row] for row in grid]\n        row_ln = len(grid)\n        col_ln = len(grid[0])\n        total = 0\n        for col in range(col_ln):\n            prev = [grid[row][col] for row in range(row_ln)]\n            total = max(total, get_total(prev))\n            \n            for c in range(col+1, col_ln):\n                current = [0] * row_ln\n                for r in range(row_ln):\n                    if grid[r][c] == 1 and prev[r] > 0:\n                        current[r] = prev[r] + 1\n                total = max(total, get_total(current))\n                prev = current\n        return total","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle"}