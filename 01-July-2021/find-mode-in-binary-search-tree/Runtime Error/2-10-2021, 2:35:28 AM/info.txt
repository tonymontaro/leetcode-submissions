{"id":454238444,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612920928,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/454238444/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import defaultdict\n\nclass Solution:\n    def findMode(self, root: TreeNode) -> List[int]:\n        seen = defaultdict(int)\n        stack = [root]\n        mx = 0\n        while stack:\n            node = stack.pop()\n            seen[node.val] += 1\n            mx = max(mx, seen[node.val])\n            if node.left:\n                stack.append(node.left)\n            if node.right:\n                stack.append(node.right)\n        return [x for x in seen.keys() if seen[x] == mx]","compare_result":"1111110000000000000000000","title_slug":"find-mode-in-binary-search-tree"}