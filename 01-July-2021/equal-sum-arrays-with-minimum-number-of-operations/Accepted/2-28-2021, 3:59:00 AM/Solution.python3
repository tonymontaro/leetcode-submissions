// https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations

from collections import Counter

class Solution:
    def minOperations(self, a: List[int], b: List[int]) -> int:
        sa = sum(a)
        sb = sum(b)
        if sa > sb:
            a, b = b, a
            sa, sb = sb, sa
        a = Counter(a)
        b = Counter(b)
        ans = 0
        while sa < sb:
            ans += 1
            aa = 6
            for i in range(1, 7):
                if a[i] > 0:
                    aa = i
                    break
            bb = 1
            for i in range(6, 0, -1):
                if b[i] > 0:
                    bb = i
                    break
            if aa == 6 and bb == 1:
                return -1
            if 6 - aa > bb - 1:
                diff = 6 - aa
                a[aa] -= 1
                sa += diff
            else:
                diff = bb - 1
                b[bb] -= 1
                sb -= diff
        return ans