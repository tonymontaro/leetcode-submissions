{"id":458616601,"lang":"python3","time":"4 months, 1 week","timestamp":1613875988,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/458616601/","is_pending":"Not Pending","title":"Maximize Palindrome Length From Subsequences","memory":"N/A","code":"from functools import lru_cache\n\nclass Solution:\n    def longestPalindrome(self, w1: str, w2: str) -> int:\n        \n        @lru_cache\n        def solve(x, y):\n            if x >= len(w1) and y < 0:\n                return 0\n            elif x >= len(w1) or y < 0:\n                return 1\n\n            skip = solve(x + 1, y)\n            if w1[x] == w2[y]:\n                include = 2 + solve(x + 1, y - 1)\n            else:\n                include = solve(x, y - 1)\n            return max(skip, include)\n        \n        ans =  solve(0, len(w2)-1)\n        return ans if ans > 1 else 0","compare_result":"111111111111111100000111000100001001000100001000000000000000000000000100001000000000000000000000000000000000","title_slug":"maximize-palindrome-length-from-subsequences"}