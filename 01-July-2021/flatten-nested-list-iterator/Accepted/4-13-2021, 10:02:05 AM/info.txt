{"id":480068765,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1618304525,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/480068765/","is_pending":"Not Pending","title":"Flatten Nested List Iterator","memory":"14.4 MB","code":"class NestedIterator {\npublic:\n    stack<NestedInteger> vec;\n    NestedIterator(vector<NestedInteger> &nestedList) {\n        add(nestedList);\n    }\n    void add(vector<NestedInteger> &nestedList) {\n        if (nestedList.empty()) return;\n        for (int i = nestedList.size() - 1; i >= 0; i--) vec.push(nestedList[i]);\n    }\n\n    int next() {\n        if (vec.empty()) return -1;\n        int ans = vec.top().getInteger();\n        vec.pop();\n        return ans;\n    }\n\n    bool hasNext() {\n        while (!vec.empty() && !vec.top().isInteger()) {\n            auto ls = vec.top().getList();\n            vec.pop();\n            add(ls);\n        }\n        return !vec.empty();\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"flatten-nested-list-iterator"}