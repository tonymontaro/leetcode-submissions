{"id":441950284,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610436218,"status_display":"Accepted","runtime":"272 ms","url":"/submissions/detail/441950284/","is_pending":"Not Pending","title":"Push Dominoes","memory":"27.9 MB","code":"from collections import deque\n\nclass Solution:\n    def pushDominoes(self, dominoes: str) -> str:\n        result = {i: ch for i, ch in enumerate(dominoes) if ch != '.'}\n        fall = {}\n        deq = deque()\n        def add(idx, ch, stack):\n            if idx < 0 or idx >= len(dominoes) or idx in result:\n                return\n            if idx not in fall:\n                fall[idx] = ch\n                stack.append(idx)\n            elif fall[idx] != ch:\n                fall[idx] = '.'\n\n        for i, ch in enumerate(dominoes):\n            if ch != '.':\n                if ch == 'R':\n                    add(i + 1, ch, deq)\n                else:\n                    add(i - 1, ch, deq)\n\n        while deq:\n            for i in deq:\n                result[i] = fall[i]\n            newDeq = deque()\n            for i in deq:\n                ch = fall[i]\n                if ch == 'R':\n                    add(i + 1, ch, newDeq)\n                elif ch == 'L':\n                    add(i - 1, ch, newDeq)\n            deq = newDeq\n\n        n = len(dominoes)\n        return \"\".join(result[i] if i in result else dominoes[i] for i in range(n))","compare_result":"111111111111111111111111111111111111","title_slug":"push-dominoes"}