{"id":449196560,"lang":"python3","time":"5Â months","timestamp":1611891932,"status_display":"Accepted","runtime":"568 ms","url":"/submissions/detail/449196560/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"18.4 MB","code":"from math import inf\n\nclass Solution:\n    def sumSubarrayMins(self, arr: List[int]) -> int:\n        mod = 10**9 + 7\n        n = len(arr)\n        ans = 0\n        \n        stack = []\n        dp = []\n        for i, num in enumerate(arr):\n            idx = i\n            while stack and stack[-1][0] > num:\n                _, idx = stack.pop()\n            dp.append(idx)\n            stack.append((num, idx))\n        \n        stack = []\n        for i in range(n - 1, -1, -1):\n            idx = i\n            num = arr[i]\n            while stack and stack[-1][0] >= num:\n                _, idx = stack.pop()\n            stack.append((num, idx))\n            left = i - dp[i]\n            right = idx - i\n            # print(arr[i], left, right, stack)\n            res = 1 + (left + right) + (left * right)\n            ans = (ans + res * num) % mod\n        return ans\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-minimums"}