{"id":448802506,"lang":"python3","time":"5Â months","timestamp":1611809648,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/448802506/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"N/A","code":"class Solution:\n    def sumSubarrayMins(self, arr: List[int]) -> int:\n        mod = 10**9 + 7\n        ans = 0\n        l = r = 0\n        prev = None\n        n = len(arr)\n        for i, num in enumerate(arr):\n            if prev is not None and num == prev:\n                l = i - 1\n            elif prev is not None and num < prev:\n                r = i + 1\n            else:\n                l = i - 1\n                r = i + 1\n            while l >= 0 and num < arr[l]:\n                l -= 1\n            \n            while r < n and num <= arr[r]:\n                r += 1\n            \n            # print(num, l, r)\n            res = 1\n            left = i - l - 1\n            right = r - i - 1\n            res += (left + right)\n            res += left * right\n            ans = (ans + res * num) % mod\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111100000","title_slug":"sum-of-subarray-minimums"}