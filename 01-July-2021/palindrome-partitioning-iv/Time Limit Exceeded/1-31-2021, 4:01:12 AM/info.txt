{"id":449941323,"lang":"python3","time":"5Â months","timestamp":1612062072,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/449941323/","is_pending":"Not Pending","title":"Palindrome Partitioning IV","memory":"N/A","code":"class Solution:\n    def checkPartitioning(self, s: str) -> bool:\n        n = len(s)\n\n        def isPalindrome(l, r):\n            while l <= r:\n                if s[l] != s[r]:\n                    return False\n                l += 1\n                r -= 1\n            return True\n        \n        left = []\n        for i in range(n - 2):\n            if isPalindrome(0, i):\n                left.append((0, i))\n        \n        right = []\n        for i in range(2, n):\n            if isPalindrome(i, n-1):\n                right.append((i, n-1))\n        \n        r = 0\n        for a, b in left:\n            for x, y in right:\n                if b + 1 >= x:\n                    continue\n                if isPalindrome(b + 1, x -1):\n                    return True\n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111000000","title_slug":"palindrome-partitioning-iv"}