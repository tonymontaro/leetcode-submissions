// https://leetcode.com/problems/palindrome-partitioning-iv

class Solution:
    def checkPartitioning(self, s: str) -> bool:
        n = len(s)

        def isPalindrome(l, r):
            while l <= r:
                if s[l] != s[r]:
                    return False
                l += 1
                r -= 1
            return True
        
        left = []
        for i in range(n - 2):
            if isPalindrome(0, i):
                left.append((0, i))
        
        right = []
        for i in range(2, n):
            if isPalindrome(i, n-1):
                right.append((i, n-1))
        
        r = 0
        for a, b in left:
            for x, y in right:
                if b + 1 >= x:
                    continue
                if isPalindrome(b + 1, x -1):
                    return True
        return False