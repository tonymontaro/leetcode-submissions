{"id":449943640,"lang":"python3","time":"5Â months","timestamp":1612062344,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/449943640/","is_pending":"Not Pending","title":"Palindrome Partitioning IV","memory":"N/A","code":"class Solution:\n    def checkPartitioning(self, s: str) -> bool:\n        n = len(s)\n\n        def isPalindrome(l, r):\n            while l <= r:\n                if s[l] != s[r]:\n                    return False\n                l += 1\n                r -= 1\n            return True\n        \n        left = {}\n        for i in range(n - 2):\n            if isPalindrome(0, i):\n                left[(0, i)] = 1\n        \n        right = {}\n        for i in range(2, n):\n            if isPalindrome(i, n-1):\n                right[(i, n-1)] = 1\n        \n        for i in range(1, n-1):\n            r = l = i\n            while l > 0 and r < n - 1 and s[l] == s[r]:\n                if (0, l - 1) in left and (r + 1, n - 1) in right:\n                    return True\n                l -= 1\n                r += 1\n                \n        \n        return False","compare_result":"110011111111111000101111101000101101110010110100110011000000110011100001111111110","title_slug":"palindrome-partitioning-iv"}