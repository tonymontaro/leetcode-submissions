{"id":508251791,"lang":"cpp","time":"2 weeks, 1 day","timestamp":1623757954,"status_display":"Accepted","runtime":"280 ms","url":"/submissions/detail/508251791/","is_pending":"Not Pending","title":"Shortest Distance to Target Color","memory":"120.1 MB","code":"int forwad[50001][3];\nint backward[50001][3];\nclass Solution {\npublic:\n    vector<int> shortestDistanceColor(vector<int>& colors, vector<vector<int>>& queries) {\n        memset(forwad, -1, sizeof(forwad));\n        memset(backward, -1, sizeof(backward));\n        int n = colors.size();\n        for (int i = 0; i < n; i++) {\n            int num = colors[i];\n            for (int j = 0; j < 3; ++j) {\n                if (i > 0) forwad[i][j] = forwad[i-1][j];\n            }\n            forwad[i][num-1] = i;\n        }\n        for (int i = n -1; i >= 0; --i) {\n            int num = colors[i];\n            for (int j = 0; j < 3; ++j) {\n                if (i < n -1) backward[i][j] = backward[i+1][j];\n            }\n            backward[i][num-1] = i;\n        }\n        vector<int> ans;\n        for (auto &q: queries) {\n            int res = INT_MAX;\n            if (forwad[q[0]][q[1]-1] != -1) res = q[0] - forwad[q[0]][q[1] - 1];\n            if (backward[q[0]][q[1]-1] != -1) res = min(backward[q[0]][q[1] - 1] - q[0], res);\n            ans.push_back(res == INT_MAX ? -1 :res);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111","title_slug":"shortest-distance-to-target-color"}