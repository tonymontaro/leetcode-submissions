{"id":359796915,"lang":"java","time":"1Â year","timestamp":1593431375,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/359796915/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\n    static StringBuilder[][] dp;\n    static char[] arr;\n    public static String longestPalindrome(String s) {\n        if (s.equals(\"\")) return s;\n        arr = s.toCharArray();\n        dp = new StringBuilder[arr.length + 1][arr.length + 1];\n        return solve(0, arr.length-1).toString();\n    }\n\n    static StringBuilder solve(int start, int end) {\n        if (dp[start][end] == null) {\n            StringBuilder res = new StringBuilder();\n            if (start <= end) {\n                StringBuilder skip = new StringBuilder();\n                skip = solve(start + 1, end);\n                StringBuilder include = new StringBuilder();\n                include.append(arr[start]);\n                int endIdx = start;\n                for (int i = end; i > start; i--) {\n                    if (arr[i] == arr[start]) {\n                        endIdx = i;\n                        break;\n                    }\n                }\n                if (endIdx > start) {\n                    include.append(solve(start + 1, endIdx - 1));\n                    include.append(arr[endIdx]);\n                }\n                res = (include.length() > skip.length()) ? include : skip;\n            }\n            dp[start][end] = res;\n        }\n        return dp[start][end];\n    }\n}","compare_result":"1111111111111111110111110111110001110110100000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring"}