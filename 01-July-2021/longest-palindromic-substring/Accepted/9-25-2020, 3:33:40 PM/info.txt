{"id":400578161,"lang":"java","time":"9 months, 1 week","timestamp":1601044420,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/400578161/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"39.6 MB","code":"class Solution {\n    public String longestPalindrome(String s) {\n        // O(n^2) time\n        if (s.length() <= 1) return s;\n        String ans = s.substring(0, 1);\n        int ln = 1;\n        for (int i = 0; i < s.length() - 1; i++) {\n            int[] rs = check(i, i, s);\n            int[] rs2 = check(i, i + 1, s);\n            if (rs2[1] - rs2[0] > rs[1] - rs[0]) rs = rs2;\n            if (rs[1] - rs[0] > ln) {\n                ans = s.substring(rs[0], rs[1]);\n                ln = rs[1] - rs[0];\n            }\n        }\n        return ans;\n    }\n\n    int[] check(int l, int r, String s) {\n        while (l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)) {\n            l--;\n            r++;\n        }\n        return new int[]{l + 1, r};\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}