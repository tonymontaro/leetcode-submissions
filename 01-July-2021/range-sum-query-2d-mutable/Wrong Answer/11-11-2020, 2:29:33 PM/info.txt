{"id":419182383,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605101373,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/419182383/","is_pending":"Not Pending","title":"Range Sum Query 2D - Mutable","memory":"N/A","code":"class NumMatrix:\n\n    def __init__(self, matrix: List[List[int]]):\n        # O(rowlen * colen)\n        self.matrix = matrix\n        self.grid = [list(row) for row in matrix]\n        for row in self.grid:\n            for c in range(1, len(matrix[0])):\n                row[c] = row[c] + row[c - 1]\n\n    def update(self, row: int, col: int, val: int) -> None:\n        # O(colen)\n        diff = val - self.matrix[row][col]\n        for c in range(col, len(self.grid[0])):\n            self.grid[row][c] += diff\n\n    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:\n        # O(rowlen)\n        total = 0\n        for r in range(row1, row2 + 1):\n            total += self.grid[r][col2] - (0 if col1 == 0 else self.grid[r][col1 - 1])\n        return total\n\n\n# Your NumMatrix object will be instantiated and called as such:\n# obj = NumMatrix(matrix)\n# obj.update(row,col,val)\n# param_2 = obj.sumRegion(row1,col1,row2,col2)","compare_result":"11111010101111110","title_slug":"range-sum-query-2d-mutable"}