// https://leetcode.com/problems/range-sum-query-2d-mutable

class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        # O(rowlen * colen)
        self.matrix = matrix
        self.grid = [list(row) for row in matrix]
        for row in self.grid:
            for c in range(1, len(matrix[0])):
                row[c] = row[c] + row[c - 1]

    def update(self, row: int, col: int, val: int) -> None:
        # O(colen)
        diff = val - self.matrix[row][col]
        self.matrix[row][col] = val
        for c in range(col, len(self.grid[0])):
            self.grid[row][c] += diff

    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        # O(rowlen)
        total = 0
        for r in range(row1, row2 + 1):
            total += self.grid[r][col2] - (0 if col1 == 0 else self.grid[r][col1 - 1])
        return total


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# obj.update(row,col,val)
# param_2 = obj.sumRegion(row1,col1,row2,col2)