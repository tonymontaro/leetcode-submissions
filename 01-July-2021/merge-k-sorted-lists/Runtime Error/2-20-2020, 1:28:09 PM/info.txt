{"id":305147486,"lang":"python3","time":"1 year, 4 months","timestamp":1582201689,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/305147486/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"from collections import defaultdict\nfrom heapq import heappop, heappush\n\n\nclass Solution:\n    def mergeKLists(self, arr):\n        \"\"\"O(nlogk) time | O(k) space | n total items, k => number of arrays\"\"\"\n        num_locs = defaultdict(list)\n        [num_locs[arr[i].val].append(i) for i in range(len(arr))]\n        heap = []\n        [heappush(heap, arr[i].val) for i in range(len(arr))]\n\n        node = head = None\n        i = 0\n        while heap:\n            num = heappop(heap)\n            if not node:\n                node = ListNode(num)\n                head = node\n            else:\n                node.next = ListNode(num)\n                node = node.next\n            idx = num_locs[num].pop()\n            arr[idx] = arr[idx].next\n            if arr[idx]:\n                next_num = arr[idx].val\n                heappush(heap, next_num)\n                num_locs[next_num].append(idx)\n        return head","compare_result":"11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists"}