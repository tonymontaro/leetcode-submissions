{"id":447163838,"lang":"python3","time":"5 months, 1 week","timestamp":1611490636,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/447163838/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"18.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nimport heapq\n\nclass Solution:\n    def mergeKLists(self, lists: List[ListNode]) -> ListNode:\n        # O(nlogk) time | O(k) space\n        lists = [node for node in lists if node]\n        heap = []\n        for i, node in enumerate(lists):\n            heapq.heappush(heap, (node.val, i))\n        root = ListNode(0)\n        node = root\n        while heap:\n            num, i = heapq.heappop(heap)\n            node.next = lists[i]\n            node = node.next\n\n            lists[i] = lists[i].next\n            if lists[i]:\n                heapq.heappush(heap, (lists[i].val, i))\n        return root.next","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}