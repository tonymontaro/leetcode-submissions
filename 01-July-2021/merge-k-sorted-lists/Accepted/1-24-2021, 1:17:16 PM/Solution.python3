// https://leetcode.com/problems/merge-k-sorted-lists

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
import heapq

class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        # O(nlogk) time | O(k) space
        lists = [node for node in lists if node]
        heap = []
        for i, node in enumerate(lists):
            heapq.heappush(heap, (node.val, i))
        root = ListNode(0)
        node = root
        while heap:
            num, i = heapq.heappop(heap)
            node.next = lists[i]
            node = node.next

            lists[i] = lists[i].next
            if lists[i]:
                heapq.heappush(heap, (lists[i].val, i))
        return root.next