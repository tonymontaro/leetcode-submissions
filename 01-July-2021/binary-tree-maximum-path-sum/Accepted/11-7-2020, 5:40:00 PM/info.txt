{"id":417768337,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604767200,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/417768337/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"20.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom math import inf\n\nclass Solution:\n    def maxPathSum(self, root: TreeNode) -> int:\n        if not root:\n            return -inf\n        self.best = root.val\n        self.dfs(root)\n        return self.best\n\n    def dfs(self, node):\n        if not node: return 0\n        left = self.dfs(node.left)\n        right = self.dfs(node.right)\n        result = node.val + left + right\n \n        self.best = max(self.best, result)\n        better = max(left, right) + node.val\n        return max(0, better)\n    ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}