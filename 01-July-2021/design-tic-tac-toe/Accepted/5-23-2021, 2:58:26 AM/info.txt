{"id":496891171,"lang":"python3","time":"1 month, 1 week","timestamp":1621735106,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/496891171/","is_pending":"Not Pending","title":"Design Tic-Tac-Toe","memory":"16.9 MB","code":"class TicTacToe:\n\n    def __init__(self, n: int):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.n = n\n        self.rows = {}\n        self.cols = {}\n        self.diagonals = {}\n        for i in range(n):\n            self.rows[i] = {\"players\": set(), \"count\": 0}\n            self.cols[i] = {\"players\": set(), \"count\": 0}\n            if i <= 1:\n                self.diagonals[i] = {\"players\": set(), \"count\": 0}\n\n    def add(self, n, obj, player):\n        obj[\"players\"].add(player)\n        obj[\"count\"] += 1\n        return obj[\"count\"] == n and len(obj[\"players\"]) == 1\n\n    def move(self, row: int, col: int, player: int) -> int:\n        \"\"\"\n        # O(1) time and space\n        \"\"\"\n        n = self.n\n        r = self.rows[row]\n        c = self.cols[col]\n        if self.add(n, r, player) or self.add(n, c, player):\n            return player\n        if row == col and self.add(n, self.diagonals[0], player):\n            return player\n        if row == n - col - 1 and self.add(n, self.diagonals[1], player):\n            return player\n        return 0\n        \n\n\n# Your TicTacToe object will be instantiated and called as such:\n# obj = TicTacToe(n)\n# param_1 = obj.move(row,col,player)","compare_result":"111111111111111111111111111111111","title_slug":"design-tic-tac-toe"}