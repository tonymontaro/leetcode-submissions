{"id":426097966,"lang":"python3","time":"7Â months","timestamp":1606837104,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/426097966/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"16.6 MB","code":"class Solution:\n    def minSubArrayLen(self, s: int, nums: List[int]) -> int:\n        total = 0\n        left = 0\n        ans = len(nums) + 1\n        for i, num in enumerate(nums):\n            total += num\n            while total - nums[left] >= s:\n                total -= nums[left]\n                left += 1\n            if total >= s:\n                ans = min(ans, i - left + 1)\n        return ans if ans <= len(nums) else 0","compare_result":"111111111111111","title_slug":"minimum-size-subarray-sum"}