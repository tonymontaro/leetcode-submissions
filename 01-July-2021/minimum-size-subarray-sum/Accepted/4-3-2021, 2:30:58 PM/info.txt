{"id":475895524,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1617456658,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/475895524/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"10.6 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int sm = 0;\n        int left = 0;\n        int ans = INT_MAX;\n        for (int i = 0; i < nums.size(); i++) {\n            sm += nums[i];\n            while (sm - nums[left] >= target) {\n                sm -= nums[left];\n                left++;\n            }\n            if (sm >= target)\n                ans = min(ans, i - left + 1);\n        } \n        return (ans == INT_MAX) ? 0 : ans;\n    }\n};","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum"}