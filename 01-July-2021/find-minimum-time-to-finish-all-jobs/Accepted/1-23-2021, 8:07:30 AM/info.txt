{"id":446614000,"lang":"python3","time":"5 months, 1 week","timestamp":1611385650,"status_display":"Accepted","runtime":"620 ms","url":"/submissions/detail/446614000/","is_pending":"Not Pending","title":"Find Minimum Time to Finish All Jobs","memory":"14.4 MB","code":"from math import inf\nfrom collections import defaultdict\n\nclass Solution:\n    def minimumTimeRequired(self, jobs: List[int], k: int) -> int:\n        self.ans = inf\n        n = len(jobs)\n        \n        def backtrack(idx, workers):\n            if idx >= n:\n                self.ans = min(self.ans, max(workers.values()))\n                return\n            \n            seen = {}\n            for i in range(k):\n                if workers[i] + jobs[idx] >= self.ans or workers[i] in seen:\n                    continue\n                seen[workers[i]] = 1\n                workers[i] += jobs[idx]\n                backtrack(idx + 1, workers)\n                workers[i] -= jobs[idx]\n        \n        backtrack(0, defaultdict(int))\n        return self.ans","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"find-minimum-time-to-finish-all-jobs"}