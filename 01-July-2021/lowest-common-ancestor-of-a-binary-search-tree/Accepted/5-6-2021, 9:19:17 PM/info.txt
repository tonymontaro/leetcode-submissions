{"id":489762319,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1620332357,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/489762319/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.1 MB","code":"class Solution {\npublic:\n    TreeNode *ans = nullptr;\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        helper(root, p, q);\n        return ans;\n    }\n    int helper(TreeNode* node, TreeNode* p, TreeNode* q) {\n        if (!node || ans) return 0;\n        int rs = 0;\n        if (node == p || node == q) rs++;\n        rs += helper(node->left, p, q) + helper(node->right, p, q);\n        if (rs == 2 && !ans) ans = node;\n        return rs;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}