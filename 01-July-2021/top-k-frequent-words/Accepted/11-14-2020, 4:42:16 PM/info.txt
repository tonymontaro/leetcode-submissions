{"id":420193623,"lang":"python3","time":"7 months, 2 weeks","timestamp":1605368536,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/420193623/","is_pending":"Not Pending","title":"Top K Frequent Words","memory":"14.2 MB","code":"from collections import Counter\n\nclass Node:\n    def __init__(self, word, cnt):\n        self.word = word\n        self.cnt = cnt\n    \n    def __eq__(self, other):\n        return self.word == other.word and self.cnt == other.cnt\n    \n    def __gt__(self, other):\n        if self.cnt == other.cnt:\n            return self.word < other.word\n        return self.cnt > other.cnt\n\nimport heapq\n\nclass Solution:\n    def topKFrequent(self, words: List[str], k: int) -> List[str]:\n        # O(nlogk) time | O(k) space\n        count = Counter(words)\n        heap = []\n        for word, cnt in count.items():\n            node = Node(word, cnt)\n            if len(heap) < k:\n                heapq.heappush(heap, node)\n            else:\n                heapq.heappushpop(heap, node)\n\n        result = []\n        while heap:\n            result.append(heapq.heappop(heap).word)\n        return result[::-1]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"top-k-frequent-words"}