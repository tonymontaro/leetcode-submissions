{"id":443901010,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610850003,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/443901010/","is_pending":"Not Pending","title":"Minimum Cost Tree From Leaf Values","memory":"14.1 MB","code":"class Solution:\n    def mctFromLeafValues(self, arr: List[int]) -> int:\n        # O(n) time and space\n        ans = 0\n\n        stack = []\n        for num in arr:\n            while stack and num > stack[-1]:\n                mn = min(stack[-2], num) if len(stack) > 1 else num\n                ans += mn * stack.pop()\n            stack.append(num)\n        while len(stack) > 1:\n            a = stack.pop()\n            ans += stack[-1] * a\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-tree-from-leaf-values"}