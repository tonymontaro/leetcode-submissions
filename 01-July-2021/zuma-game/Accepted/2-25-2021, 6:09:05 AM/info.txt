{"id":460398415,"lang":"python3","time":"4Â months","timestamp":1614229745,"status_display":"Accepted","runtime":"960 ms","url":"/submissions/detail/460398415/","is_pending":"Not Pending","title":"Zuma Game","memory":"25.7 MB","code":"from math import inf\nfrom collections import Counter\nfrom functools import lru_cache\n\nclass Solution:\n    def findMinStep(self, board: str, hand: str) -> int:\n        \n        def process(arr):\n            res = []\n            for x in arr:\n                if res and res[-1][0] == x[0]:\n                    res[-1][1] += x[1]\n                else:\n                    res.append(list(x))\n                if res[-1][1] >= 3:\n                    res.pop()\n            return res\n\n        @lru_cache(None)\n        def solve(s, hand):\n            # print(s)\n            arr = []\n            left = 0\n            for i in range(1, len(s)):\n                if s[i] != s[i-1]:\n                    if i - left < 3:\n                        arr.append([s[left], i - left])\n                    left = i\n            if len(s) - left < 3:\n                arr.append([s[left], len(s) - left])\n            arr = process(arr)\n            if not arr:\n                return 0\n        \n            ss = \"\".join([x[0] * x[1] for x in arr])\n            ans = inf\n            seen = {}\n            n = len(s)\n            for i, c in enumerate(hand):\n                if c in seen:\n                    continue\n                seen[c] = 1\n                h = hand[:i] + hand[i+1:]\n                for j in range(n):\n                    ns = s[:j] + c + s[j:]\n                    ans = min(ans, 1 + solve(ns, h))\n            return ans\n        \n        rs = solve(board, hand)\n        return rs if rs != inf else -1","compare_result":"111111111111111111111111111111","title_slug":"zuma-game"}