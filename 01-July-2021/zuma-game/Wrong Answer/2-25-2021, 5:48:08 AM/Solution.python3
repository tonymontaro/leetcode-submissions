// https://leetcode.com/problems/zuma-game

from math import inf
from collections import Counter

class Solution:
    def findMinStep(self, s: str, hand: str) -> int:
        arr = []
        left = 0
        for i in range(1, len(s)):
            if s[i] != s[i-1]:
                arr.append([s[left], i - left])
                left = i
        arr.append([s[left], len(s) - left])
        # print(arr)
        
        def process(arr):
            res = []
            for x in arr:
                if res and res[-1][0] == x[0]:
                    res[-1][1] += x[1]
                else:
                    res.append(list(x))
                if res[-1][1] >= 3:
                    res.pop()
            return res
        
        def backtrack(arr, hand):
            if not arr:
                return 0
            
            ans = inf
            for x in arr:
                if x[0] in hand and hand[x[0]] > 0:
                    hand[x[0]] -= 1
                    x[1] += 1
                    rs = process(arr)
                    # print(x, rs)
                    ans = min(ans, 1 + backtrack(rs, hand))
                    x[1] -= 1
                    hand[x[0]] += 1
            
            return ans
            
        
        rs = backtrack(arr, Counter(hand))
        return rs if rs != inf else -1