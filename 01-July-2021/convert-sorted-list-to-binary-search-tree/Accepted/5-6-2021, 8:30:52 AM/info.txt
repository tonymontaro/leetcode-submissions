{"id":489542735,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1620286252,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/489542735/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"31.3 MB","code":"class Solution {\npublic:\n    vector<int> arr;\n    TreeNode* sortedListToBST(ListNode* head) {\n        while (head) {\n            arr.push_back(head->val);\n            head = head->next;\n        }\n        \n        return solve(0, arr.size() - 1);\n    }\n    TreeNode* solve(int l, int r) {\n        if (l > r) return nullptr;\n        int mid = (l + r + 1) / 2;\n        auto* p = new TreeNode(arr[mid]);\n        p->left = solve(l, mid - 1);\n        p->right = solve(mid + 1, r);\n        return p;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}