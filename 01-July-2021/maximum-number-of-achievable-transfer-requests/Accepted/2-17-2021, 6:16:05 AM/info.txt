{"id":457047584,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613538965,"status_display":"Accepted","runtime":"7072 ms","url":"/submissions/detail/457047584/","is_pending":"Not Pending","title":"Maximum Number of Achievable Transfer Requests","memory":"14.3 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def maximumRequests(self, n: int, requests: List[List[int]]) -> int:\n        n = len(requests)\n        mx = 1 << n\n        ans = 0\n        for i in range(mx):\n            mp = defaultdict(int)\n            reqs = 0\n            for j in range(n):\n                if ((1 << j) & i) != 0:\n                    a, b = requests[j]\n                    mp[a] -= 1\n                    mp[b] += 1\n                    reqs += 1\n            for v in mp.values():\n                if v != 0:\n                    reqs = 0\n                    break\n            ans = max(ans, reqs)\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-achievable-transfer-requests"}