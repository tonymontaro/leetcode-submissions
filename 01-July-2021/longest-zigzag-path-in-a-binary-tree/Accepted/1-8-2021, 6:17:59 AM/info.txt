{"id":440132546,"lang":"python3","time":"5 months, 3 weeks","timestamp":1610083079,"status_display":"Accepted","runtime":"440 ms","url":"/submissions/detail/440132546/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"66.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def longestZigZag(self, root: TreeNode) -> int:\n        self.res = 0\n        def dfs(node):\n            if not node:\n                return [-1, -1]\n            left = dfs(node.left)\n            right = dfs(node.right)\n            l, r = 1 + left[1], 1 + right[0]\n            # print(ans)\n            self.res = max(self.res, l, r)\n            return [l, r]\n        dfs(root)\n        return self.res","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree"}