{"id":417689358,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604743170,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/417689358/","is_pending":"Not Pending","title":"Construct Binary Search Tree from Preorder Traversal","memory":"14.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom math import inf\n\nclass Solution:\n    def bstFromPreorder(self, preorder: List[int]) -> TreeNode:\n        # O(n) time | O(h) space\n        self.idx = 0\n        \n        def traverse(low, high):\n            if self.idx >= len(preorder):\n                return None\n            num = preorder[self.idx]\n            if num > high or num < low:\n                return None\n            \n            node = TreeNode(num)\n            self.idx += 1\n            node.left = traverse(low, num)\n            node.right = traverse(num, high)\n            return node\n        \n        return traverse(-inf, inf)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-search-tree-from-preorder-traversal"}