{"id":487171182,"lang":"cpp","time":"2Â months","timestamp":1619813052,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/487171182/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"28.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        if (!root) return false;\n        if (root->val == subRoot->val && check(root, subRoot)) return true;\n        return isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);\n    }\n    bool check(TreeNode* root, TreeNode* subRoot) {\n        if (!root && !subRoot) return true;\n        if (!root || !subRoot || root->val != subRoot->val) return false;\n        return check(root->left, subRoot->left) && check(root->right, subRoot->right);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}