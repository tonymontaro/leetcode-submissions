{"id":407636530,"lang":"java","time":"8 months, 3 weeks","timestamp":1602477588,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/407636530/","is_pending":"Not Pending","title":"Largest Time for Given Digits","memory":"N/A","code":"class Solution {\n    public String largestTimeFromDigits(int[] arr) {\n        Integer best = null;\n        int a = 0;\n        int b = 0;\n        for (int i = 0; i < 4; i++) {\n            int h = arr[i] * 10;\n            for (int j = 0; j < 4; j++) {\n                if (j == i || h + arr[j] >= 24) continue;\n                int v = h + arr[j];\n                if (best == null || v > best) {\n                    best = v;\n                    a = i; b = j;\n                }\n            }\n        }\n        if (best == null) return \"\";\n        List<Integer> ar = new ArrayList<>();\n        for (int i = 0; i < 4; i++) if (i != a && i != b) ar.add(arr[i]);\n        Integer other = null;\n        a = ar.get(0);\n        b = ar.get(1);\n        int v1 = a*10 + b;\n        if (v1 < 60) other = v1;\n        int v2 = b*10 + a;\n        if (v2 < 60 && (other == null || v2 > v1)) other = v2;\n        if (other == null) return \"\";\n        return String.format(\"%02d:%02d\", best, other);\n    }\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110011011","title_slug":"largest-time-for-given-digits"}