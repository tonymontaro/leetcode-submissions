{"id":414672459,"lang":"python3","time":"8Â months","timestamp":1604007145,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/414672459/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class Solution:\n    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:\n        if not board or not words or not board[0]:\n            return []\n        rowlen = len(board)\n        colen = len(board[0])\n        dirs = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n        result = []\n\n        def search(row, col, idx, word, seen):\n            if idx + 1 >= len(word):\n                result.append(word)\n                return True\n            seen[(row, col)] = True\n            idx += 1\n            for nRow, nCol in dirs:\n                r, c = row + nRow, col + nCol\n                isValid = 0 <= r < rowlen and 0 <= c < colen and (r, c) not in seen\n                isValid = isValid and word[idx] == board[r][c]\n                if isValid and search(r, c, idx, word, seen):\n                    return True\n            seen.pop((row, col))\n            return False\n        \n        def process(word):\n            for r in range(rowlen):\n                for c in range(colen):\n                    if word[0] == board[r][c]:\n                        if search(r, c, 0, word, {}):\n                            return\n        for word in words:\n            process(word)\n        return result\n        \n            ","compare_result":"111111111111111111111111111111111100","title_slug":"word-search-ii"}