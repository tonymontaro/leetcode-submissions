{"id":286093159,"lang":"python3","time":"1 year, 6 months","timestamp":1576396730,"status_display":"Accepted","runtime":"444 ms","url":"/submissions/detail/286093159/","is_pending":"Not Pending","title":"Target Sum","memory":"13.5 MB","code":"class Solution:\n    def findTargetSumWays(self, nums, target: int) -> int:\n        if not nums: return 0\n        self.cache = {}\n        return self.helper(0, 0, nums, target)\n    \n    def helper(self, idx, total, nums, target):\n        sub_total = 0\n        num = nums[idx]\n        if (idx, total) in self.cache:\n            return self.cache[(idx, total)]\n        elif idx == len(nums)-1:\n            if total + num == target:\n                sub_total += 1\n            if total - num == target:\n                sub_total += 1\n        else:\n            plus = self.helper(idx+1, total+num, nums, target)\n            minus = self.helper(idx+1, total-num, nums, target)\n            sub_total = plus + minus\n        self.cache[(idx, total)] = sub_total\n        return self.cache[(idx, total)]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum"}