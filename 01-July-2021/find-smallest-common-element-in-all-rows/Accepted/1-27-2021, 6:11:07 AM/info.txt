{"id":448368962,"lang":"python3","time":"5Â months","timestamp":1611724267,"status_display":"Accepted","runtime":"652 ms","url":"/submissions/detail/448368962/","is_pending":"Not Pending","title":"Find Smallest Common Element in All Rows","memory":"39.6 MB","code":"from heapq import heappush, heappop\nfrom collections import defaultdict as dd\n\nclass Solution:\n    def smallestCommonElement(self, mat: List[List[int]]) -> int:\n        heap = []\n        self.unique = 0\n        count = dd(int) \n        \n        def add(num, i, matIdx):\n            if count[num] == 0:\n                self.unique += 1\n            heappush(heap, (num, i, matIdx))\n            count[num] += 1\n        \n        for i, row in enumerate(mat):\n            add(row[0], 0, i)\n        \n        while heap:\n            num, idx, matIdx = heappop(heap)\n            if self.unique == 1:\n                return num\n            count[num] -= 1\n            if count[num] == 0:\n                self.unique -= 1\n            idx += 1\n            row = mat[matIdx]\n            if idx >= len(row):\n                return -1\n            add(row[idx], idx, matIdx)\n\n        return -1","compare_result":"11111111111","title_slug":"find-smallest-common-element-in-all-rows"}