{"id":408261050,"lang":"java","time":"8 months, 2 weeks","timestamp":1602602312,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/408261050/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"50.1 MB","code":"class Solution {\n    public int longestSubarray(int[] nums, int limit) {\n        // O(nlogn) time | o(n) space\n        HashMap<Integer, Integer> count = new HashMap<>();\n        TreeSet<Integer> set = new TreeSet<>();\n        Deque<Integer> deque = new ArrayDeque<>();\n        int best = 0;\n        for (int i = 0; i < nums.length; i++) {\n            int num = nums[i];\n            count.merge(num, 1, Integer::sum);\n            set.add(num);\n            deque.addLast(num);\n            while (set.last() - set.first() > limit) {\n                int last = deque.pollFirst();\n                count.merge(last, -1, Integer::sum);\n                if (count.get(last) <= 0)\n                    set.remove(last);\n            }\n            best = Math.max(best, deque.size());\n        }\n        return best;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"}