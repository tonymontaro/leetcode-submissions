{"id":409311580,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602821709,"status_display":"Accepted","runtime":"696 ms","url":"/submissions/detail/409311580/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"24.1 MB","code":"from collections import deque\n\nclass Solution:\n    def longestSubarray(self, nums: List[int], limit: int) -> int:\n        minStack = deque()\n        maxStack = deque()\n        ans = 0\n        left = 0\n        for (i, num) in enumerate(nums):\n            while minStack and num < nums[minStack[-1]]:\n                minStack.pop()\n            while maxStack and num > nums[maxStack[-1]]:\n                maxStack.pop()\n            minStack.append(i)\n            maxStack.append(i)\n            while nums[maxStack[0]] - nums[minStack[0]] > limit:\n                if maxStack[0] == left:\n                    maxStack.popleft()\n                if minStack[0] == left:\n                    minStack.popleft()\n                left += 1\n            ans = max(ans, i - left + 1)\n            \n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"}