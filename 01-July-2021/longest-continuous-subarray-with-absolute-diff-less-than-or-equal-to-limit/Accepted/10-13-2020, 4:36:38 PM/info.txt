{"id":408266533,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602603398,"status_display":"Accepted","runtime":"712 ms","url":"/submissions/detail/408266533/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"23.2 MB","code":"from collections import deque\n\nclass Solution:\n    def longestSubarray(self, nums: List[int], limit: int) -> int:\n        # O(n) time and space\n        deq = deque()\n        minStack = deque()\n        maxStack = deque()\n        ans = 0\n        for i, num in enumerate(nums):\n            while (minStack and num < nums[minStack[-1]]):\n                minStack.pop()\n            while (maxStack and num > nums[maxStack[-1]]):\n                maxStack.pop()\n            minStack.append(i)\n            maxStack.append(i)\n            deq.append(i)\n            while (nums[maxStack[0]] - nums[minStack[0]] > limit):\n                idx = deq.popleft()\n                if (maxStack[0] == idx):\n                    maxStack.popleft()\n                if (minStack[0] == idx):\n                    minStack.popleft()\n\n            ans = max(ans, len(deq))\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"}