{"id":487189582,"lang":"cpp","time":"2Â months","timestamp":1619817634,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/487189582/","is_pending":"Not Pending","title":"Max Stack","memory":"N/A","code":"class MaxStack {\npublic:\n    /** initialize your data structure here. */\n    multiset<int, greater<>> pq;\n    stack<int> st;\n    map<int, int> count;\n    MaxStack() {\n\n    }\n\n    void push(int x) {\n        pq.insert(x);\n        st.push(x);\n    }\n\n    int pop() {\n        int num = st.top();\n        pq.erase(pq.find(num));\n        st.pop();\n        balance();\n        return num;\n    }\n\n    int top() {\n        return st.top();\n    }\n\n    int peekMax() {\n        return *pq.begin();\n    }\n    void balance() {\n        while (!st.empty() && count[st.top()] > 0) {\n            count[st.top()]--;\n            st.pop();\n        }\n    }\n    int popMax() {\n        int num = *pq.begin();\n        count[num]++;\n        pq.erase(pq.begin());\n        balance();\n        return num;\n    }\n};\n\n/**\n * Your MaxStack object will be instantiated and called as such:\n * MaxStack* obj = new MaxStack();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->peekMax();\n * int param_5 = obj->popMax();\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000100111111111111111111111111111111111111111111111111110","title_slug":"max-stack"}