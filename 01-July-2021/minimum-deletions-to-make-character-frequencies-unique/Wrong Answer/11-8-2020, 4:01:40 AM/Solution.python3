// https://leetcode.com/problems/minimum-deletions-to-make-character-frequencies-unique

from collections import Counter, deque

class Solution:
    def minDeletions(self, s: str) -> int:
        vals = Counter(s).values()
        cnt = Counter(vals)
        mx = max(cnt.keys())

        seen = {}
        for val in cnt:
            if val not in seen:
                seen[val] = True
                cnt[val] -= 1
        
        ans = 0
        remaining = sorted([[k, c] for k, c in cnt.items() if c > 0])
        
        deq = deque(remaining)
        # print(deq)
        for i in range(1, mx + 2):
            if i in seen:
                continue
            
            while deq and deq[0][0] < i:
                k, c = deq.popleft()
                ans += k * c
            if not deq:
                return ans
            k, c = deq[0]
            ans += k - i
            if c == 1:
                deq.popleft()
            else:
                deq[0][1] -= 1
        return ans
                
            