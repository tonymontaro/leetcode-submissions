{"id":476628997,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1617594356,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/476628997/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"32.1 MB","code":"class Solution {\npublic:\n    bool found = false;\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        stack<TreeNode*> st;\n        st.push(root);\n        while (!st.empty()) {\n            if (found) return true;\n            auto node = st.top();\n            st.pop();\n            if (node->val == head->val)\n                check(head, node);\n            if (node->right)\n                st.push(node->right);\n            if (node->left)\n                st.push(node->left);\n        }\n        return false;\n    }\n    void check(ListNode* head, TreeNode* root) {\n        if (head == nullptr) {\n            found = true;\n            return;\n        }\n        if (root == nullptr || head->val != root->val) return;\n        check(head->next, root->left);\n        check(head->next, root->right);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree"}