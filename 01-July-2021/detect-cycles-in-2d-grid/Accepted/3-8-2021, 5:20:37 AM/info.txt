{"id":464984575,"lang":"python3","time":"3 months, 3 weeks","timestamp":1615177237,"status_display":"Accepted","runtime":"2196 ms","url":"/submissions/detail/464984575/","is_pending":"Not Pending","title":"Detect Cycles in 2D Grid","memory":"215.7 MB","code":"class Solution:\n    def containsCycle(self, grid: List[List[str]]) -> bool:\n        rlen, clen = len(grid), len(grid[0])\n        dirs = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n        self.ans = False\n        seen = {}\n\n        def dfs(row, col, prev):\n            seen[(row, col)] = 1\n            cha = grid[row][col]\n            for rAdd, cAdd in dirs:\n                r, c = row + rAdd, col + cAdd\n                if 0 <= r < rlen and 0 <= c < clen and grid[r][c] == cha and (r, c) != prev:\n                    if (r, c) in seen:\n                        self.ans = True\n                    else:\n                        dfs(r, c, (row, col))\n        for r in range(rlen):\n            for c in range(clen):\n                if (r, c) not in seen:\n                    dfs(r, c, (-1, -1))\n                if self.ans:\n                    return True\n        return False\n                    \n            \n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"detect-cycles-in-2d-grid"}