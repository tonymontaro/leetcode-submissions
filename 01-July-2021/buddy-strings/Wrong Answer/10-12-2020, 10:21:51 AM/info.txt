{"id":407727167,"lang":"java","time":"8 months, 3 weeks","timestamp":1602494511,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/407727167/","is_pending":"Not Pending","title":"Buddy Strings","memory":"N/A","code":"class Solution {\n    public boolean buddyStrings(String a, String b) {\n        if (a.length() != b.length()) return false;\n        HashMap<Character, Integer> aCount = counts(a);\n        HashMap<Character, Integer> bCount = counts(b);\n        if (!aCount.equals(bCount)) return false;\n        int diff = 0;\n        for (int i = 0; i < a.length(); i++) if (a.charAt(i) != b.charAt(i)) diff++;\n        if (diff == 2) return true;\n        for (int v: aCount.values()) if (v > 1) return true;\n        return false;\n    }\n    static HashMap<Character, Integer> counts(String word) {\n        HashMap<Character, Integer> counts = new HashMap<>();\n        for (int i = 0; i < word.length(); i++) counts.merge(word.charAt(i), 1, Integer::sum);\n        return counts;\n    }\n}","compare_result":"11111111111111111111111101110","title_slug":"buddy-strings"}