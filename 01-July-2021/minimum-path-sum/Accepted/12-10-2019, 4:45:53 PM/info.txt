{"id":285041730,"lang":"python3","time":"1 year, 6 months","timestamp":1575992753,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/285041730/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"13.3 MB","code":"class Solution:\n    def minPathSum(self, grid):\n        if not grid or not grid[0]: return\n        rows = len(grid)\n        cols = len(grid[0])\n        \n        prev = [float('inf')] * cols\n        prev[0] = 0\n        for r in range(rows):\n            current = [0] * (cols)\n            for c in range(cols):\n                if c == 0:\n                    current[c] = grid[r][c] + prev[c]\n                else:\n                    current[c] = min(grid[r][c] + prev[c], grid[r][c] + current[c-1])\n            prev = current\n        return prev[-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}