{"id":450092790,"lang":"python3","time":"5Â months","timestamp":1612087948,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/450092790/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"15.7 MB","code":"class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        rlen, clen = len(grid), len(grid[0])\n        for r in range(rlen):\n            for c in range(clen):\n                if r == 0 and c == 0:\n                    continue\n                val = grid[r][c]\n                up = val + (grid[r-1][c] if r > 0 else math.inf)\n                left = val + (grid[r][c-1] if c > 0 else math.inf)\n                grid[r][c] = min(up, left)\n        return grid[rlen-1][clen-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}