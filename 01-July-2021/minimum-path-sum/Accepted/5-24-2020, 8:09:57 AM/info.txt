{"id":343897796,"lang":"java","time":"1 year, 1 month","timestamp":1590304197,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/343897796/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"42.1 MB","code":"class Solution {\n    static int minPathSum(int[][] grid) {\n        int rowLen = grid.length;\n        int colLen = grid[0].length;\n        if (colLen == 0) return 0;\n        for (int row = 0; row < rowLen; row++) {\n            for (int col = 0; col < colLen; col++) {\n                int prev = 0;\n                if (col > 0 && row > 0) prev = Math.min(grid[row-1][col], grid[row][col-1]);\n                else if (col > 0) prev = grid[row][col-1];\n                else if (row > 0) prev = grid[row-1][col];\n                grid[row][col] += prev;\n            }\n        }\n\n        return grid[rowLen-1][colLen-1];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}