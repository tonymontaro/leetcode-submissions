{"id":501242605,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1622531690,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/501242605/","is_pending":"Not Pending","title":"Max Area of Island","memory":"24.1 MB","code":"class Solution {\npublic:\n    int seen[50][50];\n    int rlen, clen;\n    vector<pair<int, int>> dirs = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        memset(seen, 0, sizeof(seen));\n        rlen = grid.size(); clen = grid[0].size();\n        int ans = 0;\n        for (int r = 0; r < rlen; r++) {\n            for (int c = 0; c < clen; c++) {\n                if (grid[r][c]) ans = max(ans, bfs(r, c, grid));\n            }\n        } \n        return ans;\n    }\n    int bfs(int row, int col, vector<vector<int>>& grid) {\n        if (row < 0 || row >= rlen || col <  0 || col >= clen || seen[row][col] || !grid[row][col]) return 0;\n        int ans = 1;\n        seen[row][col] = 1;\n        for (auto [rAdd, cAdd]: dirs) ans += bfs(row + rAdd, col + cAdd, grid);\n        return ans;\n    }\n};","compare_resulttitle_slug":"max-area-of-island"}