{"id":442396093,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610526154,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/442396093/","is_pending":"Not Pending","title":"Profitable Schemes","memory":"N/A","code":"class Solution:\n    def profitableSchemes(self, n: int, minProfit: int, group: List[int], profit: List[int]) -> int:\n        cache = {}\n        \n        def solve(idx, remProfit, num):\n            if idx >= len(group):\n                return 1 if remProfit == 0 else 0\n\n            if (idx, remProfit, num) in cache:\n                return cache[(idx, remProfit, num)]\n            \n            take = 0\n            if num >= group[idx]:\n                take = solve(idx + 1, max(0, remProfit - profit[idx]), num - group[idx])\n            \n            skip = solve(idx + 1, remProfit, num)\n            cache[(idx, remProfit, num)] = take + skip\n            return cache[(idx, remProfit, num)]\n        \n        return solve(0, minProfit, n)","compare_result":"111111111111111111111111111111111111111100000","title_slug":"profitable-schemes"}