{"id":475803252,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1617433602,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/475803252/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"13.3 MB","code":"#define v vector\n\nint seen[501];\nclass Solution {\npublic:\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {\n        map<TreeNode*, v<TreeNode*>> adj;\n        stack <TreeNode*> st;\n        st.push(root);\n        while (!st.empty()) {\n            auto node = st.top();\n            st.pop();\n            if (node->left) {\n            adj[node].push_back(node->left);\n            adj[node->left].push_back(node);\n            st.push(node->left);\n            }\n            if (node->right) {\n            adj[node].push_back(node->right);\n            adj[node->right].push_back(node);\n            st.push(node->right);\n            }\n        }\n\n        memset(seen, -1, sizeof(seen));\n        deque<pair<TreeNode*, int>> deq;\n        v<int> ans;\n        deq.push_back({target, 0});\n        seen[target->val] = 0;\n        while (!deq.empty()) {\n            auto node = deq.front();\n            deq.pop_front();\n            int dist = node.second;\n            auto nd = node.first;\n            if (dist == k) {\n                ans.push_back(nd->val);\n                continue;\n            }\n            for (auto child: adj[nd]) {\n                if (seen[child->val] != -1) continue;\n                seen[child->val] = dist + 1;\n                deq.push_back({child, dist + 1});\n            }\n        }\n\n        return ans;\n\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree"}