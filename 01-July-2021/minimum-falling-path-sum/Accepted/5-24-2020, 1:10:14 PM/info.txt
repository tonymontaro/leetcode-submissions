{"id":343976446,"lang":"java","time":"1 year, 1 month","timestamp":1590322214,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/343976446/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"39.9 MB","code":"class Solution {\n    static int minFallingPathSum(int[][] grid) {\n        int rowLen = grid.length;\n        int colLen = grid[0].length;\n        if (colLen == 0) return 0;\n\n        for (int row = 1; row < rowLen; row++) {\n            for (int col = 0; col < colLen; col++) {\n                int prev = grid[row-1][col];\n                if (col > 0) prev = Math.min(prev, grid[row-1][col-1]);\n                if (col < colLen-1) prev = Math.min(prev, grid[row-1][col+1]);\n                grid[row][col] += prev;\n            }\n        }\n        int minVal = grid[rowLen - 1][0];\n        for (int num: grid[rowLen - 1]) if (num < minVal) minVal = num;\n        return minVal;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum"}