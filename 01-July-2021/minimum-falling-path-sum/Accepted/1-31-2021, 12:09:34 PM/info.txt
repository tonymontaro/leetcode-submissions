{"id":450105520,"lang":"python3","time":"5Â months","timestamp":1612091374,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/450105520/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"15 MB","code":"class Solution:\n    def minFallingPathSum(self, grid: List[List[int]]) -> int:\n        # O(n*m) time | O(1) space\n        rlen, clen = len(grid), len(grid[0])\n        for r in range(1, rlen):\n            for c in range(clen):\n                mn = grid[r-1][c]\n                if c > 0:\n                    mn = min(mn, grid[r-1][c-1])\n                if c < clen-1:\n                    mn = min(mn, grid[r-1][c + 1])\n                grid[r][c] = mn + grid[r][c]\n        return min(grid[-1])\n                    ","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum"}