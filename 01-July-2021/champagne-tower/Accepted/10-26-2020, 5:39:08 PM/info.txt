{"id":413415380,"lang":"python3","time":"8 months, 1 week","timestamp":1603730348,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/413415380/","is_pending":"Not Pending","title":"Champagne Tower","memory":"14 MB","code":"class Solution:\n    def champagneTower(self, poured: int, query_row: int, query_glass: int) -> float:\n        tower = [[0] * i for i in range(1, query_row + 2)]\n        tower[0][0] = poured\n        for (r, rowItems) in enumerate(tower):\n            if (r >= query_row): continue\n            for (c, value) in enumerate(rowItems):\n                if value <= 1: continue\n                diff = value - 1\n                tower[r + 1][c] += diff / 2\n                tower[r + 1][c + 1] += diff / 2\n\n        return min(1, tower[query_row][query_glass])\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"champagne-tower"}