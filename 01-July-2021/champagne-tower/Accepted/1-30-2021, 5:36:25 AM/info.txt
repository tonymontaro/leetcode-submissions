{"id":449573263,"lang":"python3","time":"5Â months","timestamp":1611981385,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/449573263/","is_pending":"Not Pending","title":"Champagne Tower","memory":"14.3 MB","code":"class Solution:\n    def champagneTower(self, poured: int, query_row: int, query_glass: int) -> float:\n        row = [poured]\n        r = 0\n        while r < query_row:\n            r += 1\n            nextRow = [0] * (r + 1)\n            for i, val in enumerate(row):\n                if val <= 1:\n                    continue\n                diff = (val - 1) / 2\n                nextRow[i] += diff\n                nextRow[i+1] += diff\n            row = nextRow\n        return min(row[query_glass], 1)\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"champagne-tower"}