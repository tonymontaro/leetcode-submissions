{"id":295792444,"lang":"python3","time":"1 year, 5 months","timestamp":1579500374,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/295792444/","is_pending":"Not Pending","title":"Find All Anagrams in a String","memory":"13.6 MB","code":"from collections import Counter\n\nclass Solution:\n    def findAnagrams(self, word: str, substr: str):\n        \"\"\"O(n) time | O(1) space\"\"\"\n        if not word or not substr: return []\n        l = 0\n        r = -1\n        seen = 0\n        ln = len(substr)\n        counts = Counter(substr)\n        counts = {char: -counts[char] for char in substr}\n        result = []\n\n        while r < len(word)-1:\n            r += 1\n            char = word[r]\n            if char in counts:\n                counts[char] += 1\n                if counts[char] <= 0:\n                    seen += 1\n            if seen == ln:\n                result.append(l)\n            if r-l+1 == ln:\n                char = word[l]\n                l += 1\n                if char in counts:\n                    counts[char] -= 1\n                    if counts[char] < 0:\n                        seen -= 1\n        return result","compare_result":"111111111111111111111111111111111111","title_slug":"find-all-anagrams-in-a-string"}