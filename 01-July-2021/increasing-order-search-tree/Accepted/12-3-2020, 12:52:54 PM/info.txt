{"id":426765586,"lang":"python3","time":"6 months, 4 weeks","timestamp":1606996374,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/426765586/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def increasingBST(self, root: TreeNode) -> TreeNode:\n        # O(n) time and space\n        arr = []\n        def dfs(node):\n            if node:\n                dfs(node.left)\n                arr.append(node)\n                dfs(node.right)\n        dfs(root)\n        n = len(arr)\n        for i in range(n):\n            arr[i].left = None\n            if i < n - 1:\n                arr[i].right = arr[i + 1]\n        return arr[0]\n            ","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree"}