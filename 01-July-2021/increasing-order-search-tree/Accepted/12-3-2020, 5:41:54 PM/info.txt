{"id":426823741,"lang":"python3","time":"6 months, 4 weeks","timestamp":1607013714,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/426823741/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def increasingBST(self, root: TreeNode) -> TreeNode:\n        # O(n) time | O(h) space\n        self.head = None \n        self.node = None\n\n        def dfs(node):\n            if not node:\n                return\n            dfs(node.left)\n            if not self.head:\n                self.head = node\n            if self.node:\n                self.node.right = node\n            self.node = node\n            node.left = None\n            dfs(node.right)\n        \n        dfs(root)\n        return self.head","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree"}