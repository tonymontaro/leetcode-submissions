{"id":295561659,"lang":"python3","time":"1 year, 5 months","timestamp":1579440455,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/295561659/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"import bisect \n\nclass Solution:\n    def searchMatrix(self, matrix, target):\n        \"\"\"O(r*logc) time | O(1) space | r -> row, c -> column\"\"\"\n        max_col = len(matrix[0])-1\n        row = 0\n        while row < len(matrix):\n            col = min(max_col, bisect.bisect_left(matrix[row], target))\n            if matrix[row][col] != target:\n                row += 1\n            if row < len(matrix) and matrix[row][col] == target:\n                return True\n            if row < len(matrix) and matrix[row][0] > target:\n                return False\n        return False","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix-ii"}