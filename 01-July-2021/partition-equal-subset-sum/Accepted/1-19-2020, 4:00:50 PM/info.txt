{"id":295574819,"lang":"python3","time":"1Â year, 5Â months","timestamp":1579446050,"status_display":"Accepted","runtime":"800 ms","url":"/submissions/detail/295574819/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"12.6 MB","code":"class Solution:\n    def canPartition(self, nums) -> bool:\n        \"\"\"O(sum(nums) * n) time | O(n) space\"\"\"\n        if not nums: return True\n        nums = sorted(nums)\n        half = sum(nums)/2\n        if not half.is_integer(): return False\n        return sub_set_sum(nums, int(half))\n\ndef sub_set_sum(arr, target):\n    prev = [False] * (target + 1)\n    prev[0] = True\n    for num in arr:\n        current = [False] * (target + 1)\n        for i in range(target+1):\n            if i < num:\n                current[i] = prev[i]\n            else:\n                current[i] = prev[i-num] or prev[i]\n        if current[-1]:\n            return True\n        prev = current\n    return prev[-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}