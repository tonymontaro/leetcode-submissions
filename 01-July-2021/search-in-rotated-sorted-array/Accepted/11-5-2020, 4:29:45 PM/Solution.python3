// https://leetcode.com/problems/search-in-rotated-sorted-array

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        n = len(nums)
        
        def findPivot():
            lo = 0
            hi = n - 1
            pivot = hi
            while lo <= hi:
                mid = (lo + hi) // 2
                if nums[mid] > nums[hi]:
                    lo = mid + 1
                else:
                    if nums[mid] < nums[pivot]:
                        pivot = mid
                    hi = mid - 1
            return pivot
        
        pivot = findPivot()

        lo = 0
        hi = n - 1
        while lo <= hi:
            mid = (lo + hi) // 2
            val = nums[(mid + pivot) % n]
            if val == target:
                return (mid + pivot) % n
            elif val < target:
                lo = mid + 1
            else:
                hi = mid - 1
        return -1