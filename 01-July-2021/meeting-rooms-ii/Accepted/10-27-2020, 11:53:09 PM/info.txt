{"id":413924798,"lang":"python3","time":"8Â months","timestamp":1603839189,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/413924798/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"17.2 MB","code":"import heapq\n\nclass Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -> int:\n        # O(nlogn) time | O(n) space\n        arr = sorted(intervals)\n        heap = []\n        ans = 0\n        for interval in arr:\n            start, end = interval\n            while (heap and heap[0] <= start):\n                heapq.heappop(heap)\n            heapq.heappush(heap, end)\n            ans = max(ans, len(heap))\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii"}