{"id":412571729,"lang":"python3","time":"8Â months, 1Â week","timestamp":1603541933,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/412571729/","is_pending":"Not Pending","title":"Longest Substring Without Repeating Characters","memory":"14.2 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        # O(n) time and O(1) space (26 keys in hashmap)\n        ans = 0\n        left = 0\n        seen = defaultdict(int)\n        for i, cha in enumerate(s):\n            seen[cha] += 1\n            while seen[cha] > 1:\n                seen[s[left]] -= 1\n                left += 1\n            ans = max(ans, i - left + 1)\n        return ans","compare_resulttitle_slug":"longest-substring-without-repeating-characters"}