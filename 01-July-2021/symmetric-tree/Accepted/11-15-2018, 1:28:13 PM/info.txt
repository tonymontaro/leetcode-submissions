{"id":189731548,"lang":"python3","time":"2 years, 7 months","timestamp":1542284893,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/189731548/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSymmetric(self, root):\n        if not root:\n            return True\n        left, right = [root.left], [root.right]\n        while left and right:\n            new_left_int = [x.val if x else None for x in left]\n            new_right_int = [x.val if x else None for x in right][::-1]\n            if new_left_int != new_right_int:\n                return False\n            new_left, new_right = [], []\n            [(new_left.append(x.left), new_left.append(x.right)) for x in left if x]\n            [(new_right.append(x.left), new_right.append(x.right)) for x in right if x]\n            left, right = new_left, new_right\n        return left == right\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}