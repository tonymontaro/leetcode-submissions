{"id":444395114,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610942763,"status_display":"Accepted","runtime":"1936 ms","url":"/submissions/detail/444395114/","is_pending":"Not Pending","title":"Path With Maximum Minimum Value","memory":"16.7 MB","code":"# from collections import \nfrom heapq import heappush, heappop\n\nclass Solution:\n    def maximumMinimumPath(self, grid: List[List[int]]) -> int:\n        rlen, clen = len(grid), len(grid[0])\n        seen = {(0, 0): grid[0][0]}\n        heap = [(-grid[0][0], 0, 0)]\n        \n        dirs = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n        while heap:\n            val, r, c = heappop(heap)\n            val = -val\n            if (r, c) == (rlen-1, clen-1):\n                return val\n            \n            for rAdd, cAdd in dirs:\n                row, col = r + rAdd, c + cAdd\n                if 0 <= row < rlen and 0 <= col < clen:\n                    mx = min(val, grid[row][col])\n                    if (row, col) not in seen or seen[(row, col)] < mx:\n                        heappush(heap, (-mx, row, col))\n                        seen[(row, col)] = mx\n        \n                ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-with-maximum-minimum-value"}