{"id":416656523,"lang":"python3","time":"7 months, 4 weeks","timestamp":1604476348,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/416656523/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:\n        if not root:\n            return []\n\n        direction = \"left\"\n        arr = [root]\n        result = [[root.val]]\n        while arr:\n            newArr = []\n            for i in range(len(arr)-1,-1,-1):\n                node = arr[i]\n                if not node:\n                    continue\n                if direction == \"left\":\n                    newArr.extend([node.right, node.left])\n                else:\n                    newArr.extend([node.left, node.right])\n            arr = newArr\n            res = [node.val for node in newArr if node]\n            if res:\n                result.append(res)\n            direction = \"right\" if direction == \"left\" else \"left\"\n        return result\n                    \n                        ","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}