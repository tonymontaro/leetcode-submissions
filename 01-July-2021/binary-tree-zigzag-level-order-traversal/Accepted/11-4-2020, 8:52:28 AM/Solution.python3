// https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:
        if not root:
            return []

        direction = "left"
        arr = [root]
        result = [[root.val]]
        while arr:
            newArr = []
            for i in range(len(arr)-1,-1,-1):
                node = arr[i]
                if not node:
                    continue
                if direction == "left":
                    newArr.extend([node.right, node.left])
                else:
                    newArr.extend([node.left, node.right])
            arr = newArr
            res = [node.val for node in newArr if node]
            if res:
                result.append(res)
            direction = "right" if direction == "left" else "left"
        return result
                    
                        