{"id":419243115,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605115726,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/419243115/","is_pending":"Not Pending","title":"Reorganize String","memory":"14 MB","code":"from collections import Counter\n\nclass Solution:\n    def reorganizeString(self, seq: str) -> str:\n        # O(nlogn) time | O(1) space\n        if len(seq) <= 1:\n            return seq\n        counts = Counter(seq)\n        values = [(key, val) for key, val in counts.items()]\n        values.sort(key=lambda x: x[1], reverse=True)\n        n = len(seq)\n        half = (n + 1) // 2\n        if values[0][1] > half:\n            return \"\"\n        \n        items = []\n        for cha, cnt in values:\n            for _ in range(cnt):\n                items.append(cha)\n        result = []\n        i = 0\n        j = half\n        while i < half or j < n:\n            if i < half:\n                result.append(items[i])\n            if j < n:\n                result.append(items[j])\n            i += 1\n            j += 1\n        return \"\".join(result)\n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reorganize-string"}