{"id":454037757,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612879010,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/454037757/","is_pending":"Not Pending","title":"Soup Servings","memory":"15.3 MB","code":"class Solution:\n    def soupServings(self, N: int) -> float:\n        if N > 5000: # I don't know why this is true yet\n            return 1\n\n        cache = {}\n        def solve(a, b):\n            if a == 0 and b == 0:\n                return (0, 1)\n            elif a == 0:\n                return (1, 0)\n            elif b == 0:\n                return (0, 0)\n            \n            if (a, b) in cache:\n                return cache[(a, b)]\n            \n            ans = [0, 0]\n            \n            for aSub, bSub in [(100, 0), (75, 25), (50, 50), (25, 75)]:\n                aa, bb = max(0, a - aSub), max(0, b - bSub)\n                r1, r2 = solve(aa, bb)\n                ans[0] += (1/4) * r1\n                ans[1] += (1/4) * r2\n\n            ans = tuple(ans)\n            cache[(a, b)] = ans\n            return ans\n     \n        x, y = solve(N, N)\n\n        return x + (y/2)\n        \n        ","compare_result":"11111111111111111111111111111111111111111","title_slug":"soup-servings"}