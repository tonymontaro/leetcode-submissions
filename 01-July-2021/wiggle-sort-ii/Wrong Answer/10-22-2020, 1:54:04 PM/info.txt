{"id":411865394,"lang":"python3","time":"8 months, 1 week","timestamp":1603371244,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/411865394/","is_pending":"Not Pending","title":"Wiggle Sort II","memory":"N/A","code":"from collections import Counter\n\nclass Solution:\n    def wiggleSort(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        n = len(nums)\n        if n <= 1: return\n        \n        def findMedian(nums):\n            nums.sort()\n            return nums[len(nums) // 2]\n        \n        median = findMedian(nums)\n\n        arr = [None] * n\n        idx = 0\n        for i in range(0, n, 2):\n            if nums[idx] >= median:\n                break\n            arr[i] = nums[idx]\n            idx += 1\n\n        idx = n - 1\n        i = n - 1\n        if i % 2 == 0:\n            i -= 1\n        while nums[idx] > median:\n            arr[i] = nums[idx]\n            idx -= 1\n            i -= 2\n\n        for i in range(n):\n            nums[i] = arr[i] or median\n","compare_result":"11111111100101111111111111111111111111111001","title_slug":"wiggle-sort-ii"}