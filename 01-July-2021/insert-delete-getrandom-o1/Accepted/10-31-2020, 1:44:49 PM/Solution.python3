// https://leetcode.com/problems/insert-delete-getrandom-o1

import random

class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.map = {}
        self.set = {}
        self.ls = []
        

    def insert(self, val: int) -> bool:
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        """
        if val in self.set:
            return False
        idx = len(self.ls)
        self.ls.append(val)
        self.set[val] = idx
        self.map[idx] = val
        
        return True
        

    def remove(self, val: int) -> bool:
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        """
        if val not in self.set:
            return False
        rmIdx = self.set[val]
        self.map.pop(rmIdx)
        self.set.pop(val)
        last = self.ls.pop()
        if rmIdx != len(self.ls):
            self.ls[rmIdx] = last
            self.map[rmIdx] = last
            self.set[last] = rmIdx
        return True
        

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        return random.choice(self.ls)


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()