{"id":460792555,"lang":"python3","time":"4Â months","timestamp":1614314374,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/460792555/","is_pending":"Not Pending","title":"Maximum Repeating Substring","memory":"14.3 MB","code":"class Solution:\n    def maxRepeating(self, sequence: str, word: str) -> int:\n        idx = sequence.find(word)\n        if idx == -1:\n            return 0\n        ans = 0\n        n = len(word)\n        start = 0\n        while idx != -1:\n            idx = sequence.find(word, start)\n            nxt = idx + 1\n            k = 0\n            while idx != -1 and idx < len(sequence) and sequence[idx:idx+n] == word:\n                idx += n\n                k += 1\n            # print(k, idx)\n            ans = max(ans, k)\n            start = nxt\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-repeating-substring"}