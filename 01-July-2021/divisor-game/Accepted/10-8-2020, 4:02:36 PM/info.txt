{"id":406175288,"lang":"java","time":"8 months, 3 weeks","timestamp":1602169356,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/406175288/","is_pending":"Not Pending","title":"Divisor Game","memory":"38.1 MB","code":"class Solution {\n    public boolean divisorGame(int N) {\n        boolean[] canWin = new boolean[N + 1];\n        List<Integer>[] divisors = new ArrayList[N + 1];\n        for (int i = 2; i < N + 1; i++) {\n            divisors[i] = new ArrayList<>();\n            divisors[i].add(1);\n        }\n        int idx = 2;\n        while (idx <= N) {\n            for (int i = idx + idx; i < N + 1; i += idx) divisors[i].add(idx);\n            for (int div : divisors[idx]) {\n                if (!canWin[idx - div]) {\n                    canWin[idx] = true;\n                    break;\n                }\n            }\n            idx++;\n        }\n\n        return canWin[N];\n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"divisor-game"}