{"id":454361993,"lang":"python3","time":"4 months, 2 weeks","timestamp":1612942442,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/454361993/","is_pending":"Not Pending","title":"Minimum Swaps To Make Sequences Increasing","memory":"N/A","code":"class Solution:\n    def minSwap(self, A: List[int], B: List[int]) -> int:\n        \n        cache = {}\n        def solve(idx):\n            if idx == 0:\n                return (0, 1)\n            if idx in cache:\n                return cache[idx]\n            \n            # no swap\n            noSwap = inf\n            prevNoSwap, prevSwap = solve(idx - 1)\n            if A[idx] > A[idx-1] and B[idx] > B[idx-1]:\n                noSwap = min(noSwap, prevNoSwap)\n            if A[idx] > B[idx-1] and B[idx] > A[idx-1]:\n                noSwap = min(noSwap, prevSwap)\n            \n            # swap\n            swap = inf\n            if B[idx] > A[idx-1] and A[idx] > B[idx-1]:\n                swap = 1 + min(prevNoSwap, swap)\n            if B[idx] > B[idx-1] and A[idx] > A[idx-1]:\n                swap = 1 + min(prevSwap, swap)\n            # print(idx, noSwap, swap)\n            cache[idx] = (noSwap, swap)\n            return (noSwap, swap)\n\n        n = len(A)\n        ans = min(solve(n - 1))\n        return ans","compare_result":"111101101011111111111111111111111111111111111110110011111101111110001100110011101111010000010011101001","title_slug":"minimum-swaps-to-make-sequences-increasing"}