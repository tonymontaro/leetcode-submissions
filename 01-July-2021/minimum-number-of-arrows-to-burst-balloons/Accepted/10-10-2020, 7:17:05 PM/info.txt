{"id":407005635,"lang":"java","time":"8 months, 3 weeks","timestamp":1602353825,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/407005635/","is_pending":"Not Pending","title":"Minimum Number of Arrows to Burst Balloons","memory":"46.4 MB","code":"class Solution {\n    public int findMinArrowShots(int[][] points) {\n        Arrays.sort(points, new Comparator<int[]>() {\n            @Override\n            public int compare(int[] o1, int[] o2) {\n                if (o1[1] == o2[1]) return Integer.compare(o1[0], o2[0]);\n                return Integer.compare(o1[1], o2[1]);\n            }\n        });\n        int n = points.length;\n        int idx = 0;\n        int cnt = 0;\n        while (idx < n) {\n            int[] node = points[idx];\n            while (idx < n && points[idx][0] <= node[1]) idx++;\n            cnt++;\n        }\n\n        return cnt;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-arrows-to-burst-balloons"}