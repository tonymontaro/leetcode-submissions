{"id":414217644,"lang":"python3","time":"8Â months","timestamp":1603905775,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/414217644/","is_pending":"Not Pending","title":"Cracking the Safe","memory":"20.6 MB","code":"class Solution:\n    def crackSafe(self, n: int, k: int) -> str:\n        # O(k ^ n) time and space\n        seen = set()\n        total = k**n\n        arr = [\"0\" for _ in range(n)]\n        seen.add(\"0\" * n)\n        def dfs():\n            if len(seen) == total: return True\n            ln = len(arr) + 1\n            for i in range(k):\n                arr.append(str(i))\n                st = \"\".join(arr[ln - n:])\n                if st not in seen:\n                    seen.add(st)\n                    if dfs(): return True\n                    seen.remove(st)\n                arr.pop()\n            return False\n        dfs()\n        return \"\".join(arr)","compare_result":"11111111111111111111111111111111111111","title_slug":"cracking-the-safe"}