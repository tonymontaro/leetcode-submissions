{"id":453007988,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612667112,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/453007988/","is_pending":"Not Pending","title":"Largest Merge Of Two Strings","memory":"N/A","code":"class Solution:\n    def largestMerge(self, w1: str, w2: str) -> str:\n        a = b = 0\n        cache = {}\n        \n        def solve(a, b):\n            if (a, b) in cache:\n                return cache[(a, b)]\n            if a >= len(w1):\n                cache[(a, b)] = w2[b:]\n                return cache[(a, b)]\n            elif b >= len(w2):\n                cache[(a, b)] = w1[a:]\n                return cache[(a, b)]\n            res = []\n            while a < len(w1) or b < len(w2):\n                if a < len(w1) and b < len(w2) and w1[a] == w2[b]:\n                    res.append(w1[a])\n                    res.append(max(solve(a + 1, b), solve(a, b + 1)))\n                    cache[(a, b)] = ''.join(res)\n                    return cache[(a, b)]\n                if b >= len(w2) or (a < len(w1) and w1[a] >= w2[b]):\n                    res.append(w1[a])\n                    a += 1\n                else:\n                    res.append(w2[b])\n                    b += 1\n            cache[(a, b)] = ''.join(res)\n            return cache[(a, b)]\n        \n        return solve(0, 0)","compare_result":"11101111101010111011111111001100010111010000000000000000000000000000000000000000000000000000000000000","title_slug":"largest-merge-of-two-strings"}