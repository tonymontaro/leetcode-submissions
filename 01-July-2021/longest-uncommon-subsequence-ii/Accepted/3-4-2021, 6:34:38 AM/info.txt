{"id":463329147,"lang":"python3","time":"3 months, 4 weeks","timestamp":1614836078,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/463329147/","is_pending":"Not Pending","title":"Longest Uncommon Subsequence II","memory":"14.2 MB","code":"class Solution:\n    def findLUSlength(self, arr: List[str]) -> int:\n        def isSub(a, b):\n            if a == b:\n                return True\n            if not a:\n                return False\n            i = 0\n            for cha in b:\n                if a[i] == cha:\n                    i += 1\n                if i >= len(a):\n                    return True\n            return False\n\n        ans = -1\n        for i, a in enumerate(arr):\n            valid = True\n            for j, b in enumerate(arr):\n                if i != j and isSub(a, b):\n                    valid = False\n                    break\n\n            if valid:\n                ans = max(ans, len(a))\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-uncommon-subsequence-ii"}