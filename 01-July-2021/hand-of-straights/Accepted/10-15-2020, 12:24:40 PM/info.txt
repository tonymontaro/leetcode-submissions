{"id":409026698,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602761080,"status_display":"Accepted","runtime":"184 ms","url":"/submissions/detail/409026698/","is_pending":"Not Pending","title":"Hand of Straights","memory":"15.5 MB","code":"from collections import Counter, deque\n\nclass Solution:\n    def isNStraightHand(self, hand: List[int], w: int) -> bool:\n        # O(nlogn) time and space | simulation\n        if (len(hand) % w != 0): return False\n        counts = Counter(hand)\n        deq = deque(sorted(counts.keys()))\n        while deq:\n            num = deq[0]\n            for i in range(w):\n                if (num not in counts or counts[num] <= 0): return False\n                counts[num] -= 1\n                num += 1\n            while (deq and counts[deq[0]] == 0):\n                deq.popleft()\n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights"}