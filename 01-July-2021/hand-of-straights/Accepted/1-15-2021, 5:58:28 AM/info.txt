{"id":443161680,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610686708,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/443161680/","is_pending":"Not Pending","title":"Hand of Straights","memory":"15.6 MB","code":"from collections import Counter\n\nclass Solution:\n    def isNStraightHand(self, hand: List[int], w: int) -> bool:\n        if (len(hand) % w != 0):\n            return False\n        count = Counter(hand)\n        keys = sorted(count.keys())\n        idx = 0\n\n        while idx < len(keys):\n            first = keys[idx]\n            for num in range(first, first + w):\n                if count.get(num, 0) <= 0:\n                    return False\n                count[num] -= 1\n\n            while idx < len(keys) and count[keys[idx]] == 0:\n                idx += 1\n        return True\n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights"}