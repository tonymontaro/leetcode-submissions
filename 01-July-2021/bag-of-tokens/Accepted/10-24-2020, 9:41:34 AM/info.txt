{"id":412532453,"lang":"python3","time":"8 months, 1 week","timestamp":1603528894,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/412532453/","is_pending":"Not Pending","title":"Bag of Tokens","memory":"14.3 MB","code":"from collections import deque\n\nclass Solution:\n    def bagOfTokensScore(self, tokens: List[int], p: int) -> int:\n        # O(nlogn) time | O(n) space | greedy\n        tokens = deque(sorted(tokens))\n        ans = 0\n        coins = 0\n        while tokens:\n            while tokens and p >= tokens[0]:\n                coins += 1\n                p -= tokens.popleft()\n            if coins == 0: break\n            ans = max(ans, coins)\n            if tokens:\n                p += tokens.pop()\n                coins -= 1\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"bag-of-tokens"}