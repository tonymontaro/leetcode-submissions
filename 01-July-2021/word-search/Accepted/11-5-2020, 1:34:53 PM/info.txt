{"id":417062536,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604579693,"status_display":"Accepted","runtime":"292 ms","url":"/submissions/detail/417062536/","is_pending":"Not Pending","title":"Word Search","memory":"15.2 MB","code":"class Solution:\n    def exist(self, grid: List[List[str]], word: str) -> bool:\n        rowlen = len(grid)\n        colen = len(grid[0])\n        n = len(word)\n        options = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n        \n        def search(idx, row, col, seen):\n            if idx + 1 == n:\n                return True\n            seen[(row, col)] = True\n            for nRow, nCol in options:\n                r, c = nRow + row, nCol + col\n                \n                isValid = 0 <= r < rowlen and 0 <= c < colen and (r, c) not in seen\n                if isValid and grid[r][c] == word[idx + 1]:\n                    if search(idx + 1, r, c, seen):\n                        return True\n            seen.pop((row, col))\n            return False\n        \n        for r in range(rowlen):\n            for c in range(colen):\n                if grid[r][c] == word[0] and search(0, r, c, {}):\n                    return True\n        return False\n                    \n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search"}