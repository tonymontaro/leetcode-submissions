{"id":299519266,"lang":"python3","time":"1 year, 4 months","timestamp":1580630761,"status_display":"Accepted","runtime":"536 ms","url":"/submissions/detail/299519266/","is_pending":"Not Pending","title":"Word Search","memory":"14.3 MB","code":"class Solution:\n    def exist(self, board, word: str) -> bool:\n        \"\"\"O(w * b) time | O(w) space | w->word, b->board\"\"\"\n        if not word or not board: return False\n        self.board = board\n        self.word = word\n        for row in range(len(board)):\n            for col in range(len(board[0])):\n                if board[row][col] == word[0] and self.search(row, col, 0, {}):\n                    return True\n        return False\n    \n    def search(s, row, col, idx, seen):\n        if idx >= len(s.word): return True\n        valid = (\n            0 <= row < len(s.board) \n            and 0 <= col < len(s.board[0]) \n            and s.board[row][col] == s.word[idx]\n            and seen.get((row, col), 0) == 0\n        )\n        if not valid: return False\n        seen[(row, col)] = seen.get((row, col), 0) + 1\n        result = False\n        for r, c in [[row+1, col], [row-1, col], [row, col+1], [row, col-1]]:\n            result = result or s.search(r, c, idx+1, seen)\n        seen[(row, col)] = seen.get((row, col), 0) - 1\n        return result","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search"}