// https://leetcode.com/problems/guess-the-word

from collections import defaultdict
import random
# """
# This is Master's API interface.
# You should not implement it, or speculate about its implementation
# """
# class Master:
#     def guess(self, word: str) -> int:

class Solution:
    def findSecretWord(self, wordlist: List[str], master: 'Master') -> None:
        # O(n^2) time and space
        matches = defaultdict(int)
        n = len(wordlist)
        for i in range(n):
            w1 = wordlist[i]
            for j in range(i + 1, n):
                w2 = wordlist[j]
                if (self.match(w1, w2) > 0):
                    matches[w1] += 1
                    matches[w2] += 1
        wordlist.sort(key=lambda x: matches[x], reverse=True)
        
        for i in range(10):
            word = wordlist[0]
            guess = max(0, master.guess(word))
            # print(word, guess)
            if (guess == 6):
                return word
            wordlist = [w for w in wordlist if self.match(word, w) == guess]
            print(wordlist)
            
        
    def match(self, w1, w2):
        return sum(a == b for a, b in zip(w1, w2))
        