{"id":409816538,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602943561,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/409816538/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"14.3 MB","code":"class Solution:\n    def spiralOrder(self, grid: List[List[int]]) -> List[int]:\n        # O(m * n) time ans space\n        if (len(grid) == 0 or len(grid[0]) == 0): return []\n        top, bottom = 0, len(grid) - 1\n        left, right = 0, len(grid[0]) - 1\n        \n        ans = []\n        while top <= bottom and left <= right:\n            for c in range(left, right + 1):\n                ans.append(grid[top][c])\n            if bottom > top:\n                for r in range(top + 1, bottom):\n                    ans.append(grid[r][right])\n                for c in range(right, left - 1, -1):\n                    ans.append(grid[bottom][c])\n            if bottom > top and right > left:\n                for r in range(bottom - 1, top, -1):\n                    ans.append(grid[r][left])\n            left += 1\n            right -= 1\n            top += 1\n            bottom -= 1\n        return ans\n        ","compare_result":"1111111111111111111111","title_slug":"spiral-matrix"}