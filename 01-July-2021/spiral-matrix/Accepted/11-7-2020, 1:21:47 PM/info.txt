{"id":417713130,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604751707,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/417713130/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"14.1 MB","code":"class Solution:\n    def spiralOrder(self, grid: List[List[int]]) -> List[int]:\n        # O(m * n) time ans space\n        if (len(grid) == 0 or len(grid[0]) == 0): return []\n            \n        rowlen = len(grid)\n        colen = len(grid[0])\n        direction = 0\n        directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]\n        r, c = 0, 0\n        ans = []\n        seen = {}\n        for _ in range(rowlen * colen):\n            ans.append(grid[r][c])\n            seen[(r, c)] = True\n            nRow, nCol = directions[direction]\n            row, col = r + nRow, c + nCol\n            if not (0 <= row < rowlen and 0 <= col < colen and (row, col) not in seen):\n                direction = (direction + 1) % 4\n                nRow, nCol = directions[direction]\n                row, col = r + nRow, c + nCol\n            r, c = row, col\n        return ans","compare_result":"1111111111111111111111","title_slug":"spiral-matrix"}