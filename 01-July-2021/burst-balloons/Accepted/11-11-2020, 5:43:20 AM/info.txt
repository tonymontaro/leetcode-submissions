{"id":419060674,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605069800,"status_display":"Accepted","runtime":"808 ms","url":"/submissions/detail/419060674/","is_pending":"Not Pending","title":"Burst Balloons","memory":"14.6 MB","code":"class Solution:\n    def maxCoins(self, nums: List[int]) -> int:\n        # O(n^3) time | O(n^2) space\n        if not nums:\n            return 0\n        n = len(nums)\n        cache = {i: {} for i in range(n)}\n        \n        def get(idx):\n            if idx < 0 or idx >= n:\n                return 1\n            return nums[idx]\n        \n        for window in range(n):\n            for end in range(window, n):\n                start = end - window\n                best = 0\n                for i in range(start, end + 1):\n                    left = cache[start][i - 1] if i > start else 0\n                    right = cache[i + 1][end] if i < end else 0\n                    mid = get(start - 1) * nums[i] * get(end + 1)\n                    total = left + right + mid\n                    best = max(best, total)\n                cache[start][end] = best\n        return cache[0][n - 1]\n                \n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"burst-balloons"}