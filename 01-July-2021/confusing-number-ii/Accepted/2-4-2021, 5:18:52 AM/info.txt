{"id":451775550,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612412332,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/451775550/","is_pending":"Not Pending","title":"Confusing Number II","memory":"15.1 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def confusingNumberII(self, N: int) -> int:\n        # 0, 1, 6, 8, 9\n        pairs = {'0': '0', '1': '1', '8': '8', '6': '9', '9': '6'}\n        arr = ['', '0', '1', '8']\n        mirrors = defaultdict(list)\n        mirrors[1] = ['1', '8']\n        notDone = True\n        while notDone:\n            notDone = False\n            nm = []\n            for a, b in pairs.items():\n                for x in arr:\n                    numStr = a + x + b\n                    num = int(numStr)\n                    if numStr[0] != '0' and num <= N:\n                        mirrors[len(numStr)].append(numStr)\n                        notDone = True\n                    nm.append(numStr)\n            arr = nm\n        \n        ans = 0\n        valid = [0, 1, 6, 8, 9]\n        \n        nstr = str(N)\n        digits = len(str(N))\n        for i in range(1, digits):\n            ans += 4 * pow(5, i - 1) - len( mirrors[i])\n        \n        for i in range(digits):\n            mx = int(nstr[i])\n            current = None\n            for v in valid:\n                current = v\n                if v == 0 and i == 0:\n                    continue\n                if v >= mx:\n                    break\n                rem = digits - i - 1\n                \n                prefix = nstr[:i] + str(v)\n                rm = len([s for s in mirrors[digits] if s.startswith(prefix)])\n                # print(v, i, rem, rm)\n                ans += pow(5, rem) - rm\n                \n            if current != mx:\n                return ans\n        ans += 1\n        return ans\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"confusing-number-ii"}