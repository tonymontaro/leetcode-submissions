{"id":423284596,"lang":"python3","time":"7 months, 1 week","timestamp":1606133354,"status_display":"Accepted","runtime":"960 ms","url":"/submissions/detail/423284596/","is_pending":"Not Pending","title":"Fancy Sequence","memory":"53.3 MB","code":"class Fancy:\n\n    def __init__(self):\n        # (num, prevAdd, prevMult)\n        self.mod = 10**9 + 7\n        self.arr = []\n        self.mult = 1\n        self.add = 0\n\n    def append(self, val: int) -> None:\n        self.arr.append((val, self.add, self.mult))\n\n    def addAll(self, inc: int) -> None:\n        self.add = (self.add + inc) % self.mod\n\n    def multAll(self, m: int) -> None:\n        mod = self.mod\n        self.mult = (self.mult * m) % mod\n        self.add = (self.add * m) % mod\n\n    def getIndex(self, idx: int) -> int:\n        if idx >= len(self.arr):\n            return -1\n        mod = self.mod\n        num, prevAdd, prevMult = self.arr[idx]\n        modInverse = pow(prevMult, mod - 2, mod)\n        multiplier = (self.mult * modInverse) % mod\n        ans = (multiplier * num) % mod + (self.add - (prevAdd * multiplier) % mod + mod)\n        return ans % mod\n\n\n# Your Fancy object will be instantiated and called as such:\n# obj = Fancy()\n# obj.append(val)\n# obj.addAll(inc)\n# obj.multAll(m)\n# param_4 = obj.getIndex(idx)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fancy-sequence"}