{"id":461639467,"lang":"python3","time":"4Â months","timestamp":1614501463,"status_display":"Accepted","runtime":"316 ms","url":"/submissions/detail/461639467/","is_pending":"Not Pending","title":"Maximum Frequency Stack","memory":"22.8 MB","code":"from collections import defaultdict\n\nclass FreqStack:\n\n    def __init__(self):\n        self.stack = []\n        self.keys = defaultdict(list)\n        self.count = defaultdict(int)\n\n    def push(self, x: int) -> None:\n        self.count[x] += 1\n        key = self.count[x]\n        if not self.keys[key]:\n            self.stack.append(key)\n        self.keys[key].append(x)\n\n    def pop(self) -> int:\n        key = self.stack[-1]\n        ans = self.keys[key].pop()\n\n        self.count[ans] -= 1\n        while self.stack and not self.keys[self.stack[-1]]:\n            self.stack.pop()\n        return ans\n        \n\n\n# Your FreqStack object will be instantiated and called as such:\n# obj = FreqStack()\n# obj.push(x)\n# param_2 = obj.pop()","compare_result":"1111111111111111111111111111111111111","title_slug":"maximum-frequency-stack"}