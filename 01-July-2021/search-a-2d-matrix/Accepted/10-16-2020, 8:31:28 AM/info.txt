{"id":409375716,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602833488,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/409375716/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.4 MB","code":"class Solution:\n    def searchMatrix(self, grid: List[List[int]], target: int) -> bool:\n        # O(m * logn) time | O(1) space\n        if (len(grid) == 0 or len(grid[0]) == 0): return False\n\n        def binSearch(row, right):\n            if grid[row][0] > target: return -1\n            lo = 0\n            hi = right\n            valid = 0\n            while lo <= hi:\n                mid = (lo + hi) // 2\n                if grid[row][mid] <= target:\n                    valid = mid\n                    lo = mid + 1\n                else:\n                    hi = mid - 1\n            return valid\n        \n        right = len(grid[0]) - 1\n        for row in range(len(grid)):\n            right = binSearch(row, right)\n            if right == -1: return False\n            if grid[row][right] == target: return True\n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}