{"id":281347503,"lang":"python3","time":"1 year, 7 months","timestamp":1574618469,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/281347503/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.7 MB","code":"class Solution:\n    def searchMatrix(self, matrix, target):\n        \"\"\"O(logn) time | O(1) space\"\"\"\n        if not matrix:\n            return False\n        rows, cols = len(matrix), len(matrix[0])\n        left, right = 0, rows*cols-1\n        while left <= right:\n            mid = (left + right) // 2\n            col, row = mid % cols, mid // cols\n            val = matrix[row][col]\n            if val == target:\n                return True\n            elif val > target:\n                right = mid-1\n            else:\n                left = mid+1\n        return False","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}