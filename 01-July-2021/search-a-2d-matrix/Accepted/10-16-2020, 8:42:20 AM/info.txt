{"id":409379012,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602834140,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/409379012/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.6 MB","code":"class Solution:\n    def searchMatrix(self, grid: List[List[int]], target: int) -> bool:\n        # O(log(n*m)) time | O(1) space\n        if (len(grid) == 0 or len(grid[0]) == 0): return False\n        \n        lo = 0\n        rowlen, colen = len(grid), len(grid[0])\n        hi = rowlen * colen - 1\n        valid = 0\n        while (lo <= hi):\n            mid = (lo + hi) // 2\n            num = grid[mid//colen][mid % colen]\n            if (num == target): return True\n            elif (num < target): lo = mid + 1\n            else: hi = mid - 1\n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}