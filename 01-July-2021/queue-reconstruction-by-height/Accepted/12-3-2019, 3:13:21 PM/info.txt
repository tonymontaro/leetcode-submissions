{"id":283447321,"lang":"python3","time":"1 year, 6 months","timestamp":1575382401,"status_display":"Accepted","runtime":"908 ms","url":"/submissions/detail/283447321/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"13.2 MB","code":"class Solution:\n    def reconstructQueue(self, people):\n        \"\"\"O(n^2) time | O(n) space\"\"\"\n        [item.append(item[1]) for item in people]\n        result = []\n        while people:\n            zeros = [(people[i][0], i) for i in range(len(people)) if people[i][2] == 0]\n            idx = min(zeros, key=lambda x: x[0])[1]\n            result_item = people.pop(idx)\n            result.append([result_item[0], result_item[1]])\n            for item in people:\n                if item[0] <= result_item[0]:\n                    item[2] -= 1\n        return result","compare_result":"1111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height"}