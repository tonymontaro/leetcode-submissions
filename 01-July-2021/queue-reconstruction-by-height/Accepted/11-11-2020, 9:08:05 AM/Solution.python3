// https://leetcode.com/problems/queue-reconstruction-by-height

class Solution:
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:
        # O(n^2) time | O(n) space
        result = []
        
        def add(height, k):
            count = 0
            result.append([height, k])
            i = len(result) - 1
            while i > 0:
                if count >= k and result[i - 1][0] >= height:
                    break
                if result[i - 1][0] >= height:
                    count += 1
                result[i], result[i - 1] = result[i - 1], result[i]
                i -= 1
        
        people.sort(key=lambda x: [x[1], -x[0]])
        for person in people:
            add(person[0], person[1])
        return result[::-1]
        