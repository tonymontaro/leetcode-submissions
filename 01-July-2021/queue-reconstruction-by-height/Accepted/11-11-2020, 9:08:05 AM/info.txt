{"id":419121827,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605082085,"status_display":"Accepted","runtime":"1076 ms","url":"/submissions/detail/419121827/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"14.7 MB","code":"class Solution:\n    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:\n        # O(n^2) time | O(n) space\n        result = []\n        \n        def add(height, k):\n            count = 0\n            result.append([height, k])\n            i = len(result) - 1\n            while i > 0:\n                if count >= k and result[i - 1][0] >= height:\n                    break\n                if result[i - 1][0] >= height:\n                    count += 1\n                result[i], result[i - 1] = result[i - 1], result[i]\n                i -= 1\n        \n        people.sort(key=lambda x: [x[1], -x[0]])\n        for person in people:\n            add(person[0], person[1])\n        return result[::-1]\n        ","compare_result":"1111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height"}