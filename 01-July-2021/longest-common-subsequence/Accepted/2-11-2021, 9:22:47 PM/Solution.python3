// https://leetcode.com/problems/longest-common-subsequence

class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        n, m = len(text1), len(text2)
        dp = [[0] * (m+1) for _ in range(n+1)]
        for x in range(1, n+1):
            for y in range(1, m + 1):
                if text1[x-1] == text2[y-1]:
                    dp[x][y] = max(dp[x][y], 1 + dp[x-1][y-1])
                else:
                    dp[x][y] = max(dp[x][y-1], dp[x-1][y])
        return dp[n][m]
