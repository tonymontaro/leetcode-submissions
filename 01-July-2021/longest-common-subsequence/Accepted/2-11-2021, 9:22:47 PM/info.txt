{"id":454936335,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613074967,"status_display":"Accepted","runtime":"388 ms","url":"/submissions/detail/454936335/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"21.8 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        n, m = len(text1), len(text2)\n        dp = [[0] * (m+1) for _ in range(n+1)]\n        for x in range(1, n+1):\n            for y in range(1, m + 1):\n                if text1[x-1] == text2[y-1]:\n                    dp[x][y] = max(dp[x][y], 1 + dp[x-1][y-1])\n                else:\n                    dp[x][y] = max(dp[x][y-1], dp[x-1][y])\n        return dp[n][m]\n","compare_result":"1111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence"}