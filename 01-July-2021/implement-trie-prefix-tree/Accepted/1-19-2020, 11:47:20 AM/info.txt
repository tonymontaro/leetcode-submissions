{"id":295542478,"lang":"python3","time":"1 year, 5 months","timestamp":1579430840,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/295542478/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"26.2 MB","code":"class Trie:\n\n    def __init__(self):\n        self.root = {}\n        self.end = \"*\"\n        \n\n    def insert(self, word: str) -> None:\n        \"\"\"O(w) time and space\"\"\"\n        node = self.root\n        for char in word:\n            if char not in node:\n                node[char] = {}\n            node = node[char]\n        node[self.end] = True\n        \n\n    def search(self, word: str) -> bool:\n        \"\"\"O(w) time\"\"\"\n        node = self.root\n        for char in word:\n            if char not in node:\n                return False\n            node = node[char]\n        return self.end in node\n        \n\n    def startsWith(self, prefix: str) -> bool:\n        \"\"\"O(p) time\"\"\"\n        node = self.root\n        for char in prefix:\n            if char not in node:\n                return False\n            node = node[char]\n        return True\n        ","compare_result":"111111111111111","title_slug":"implement-trie-prefix-tree"}