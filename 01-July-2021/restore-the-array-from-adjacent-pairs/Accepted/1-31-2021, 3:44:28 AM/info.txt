{"id":449932423,"lang":"python3","time":"5Â months","timestamp":1612061068,"status_display":"Accepted","runtime":"1528 ms","url":"/submissions/detail/449932423/","is_pending":"Not Pending","title":"Restore the Array From Adjacent Pairs","memory":"62.4 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def restoreArray(self, pairs: List[List[int]]) -> List[int]:\n        adj = defaultdict(list)\n        for a, b in pairs:\n            adj[a].append(b)\n            adj[b].append(a)\n        node = None\n        n = len(adj)\n        for a, v in adj.items():\n            if len(v) == 1:\n                node = a\n                break\n        ans = [node]\n        seen = {node: 1}\n        while len(ans) < n:\n            node = ans[-1]\n            for child in adj[node]:\n                if child in seen:\n                    continue\n                seen[child] = 1\n                ans.append(child)\n        return ans\n        ","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"restore-the-array-from-adjacent-pairs"}