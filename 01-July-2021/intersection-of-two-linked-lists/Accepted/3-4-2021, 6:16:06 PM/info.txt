{"id":463533800,"lang":"python3","time":"3 months, 4 weeks","timestamp":1614878166,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/463533800/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        def getlen(node):\n            ln = 0\n            while node:\n                node = node.next\n                ln += 1\n            return ln\n        alen = getlen(headA)\n        blen = getlen(headB)\n        a, b = headA, headB\n        while alen > blen:\n            a = a.next\n            alen -= 1\n        while blen > alen:\n            b = b.next\n            blen -= 1\n        while a:\n            if a is b:\n                return a\n            a = a.next\n            b = b.next\n        return None","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}