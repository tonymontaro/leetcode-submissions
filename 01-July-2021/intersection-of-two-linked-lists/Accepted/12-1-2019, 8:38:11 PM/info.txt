{"id":282993954,"lang":"python3","time":"1 year, 7 months","timestamp":1575229091,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/282993954/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"28 MB","code":"class Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        \"\"\"O(n + m) time | O(1) space\"\"\"\n        lnA = getLength(headA)\n        lnB = getLength(headB)\n        lower = headA if lnA < lnB else headB\n        higher = headB if lnB > lnA else headA\n        min_ = min(lnA, lnB)\n        max_ = max(lnA, lnB)\n        while min_ < max_:\n            higher = higher.next\n            max_ -= 1\n        while lower:\n            if lower == higher:\n                return lower\n            lower = lower.next\n            higher = higher.next\n        return None\n        \ndef getLength(node):\n    ln = 0\n    while node:\n        ln += 1\n        node = node.next\n    return ln","compare_result":"111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}