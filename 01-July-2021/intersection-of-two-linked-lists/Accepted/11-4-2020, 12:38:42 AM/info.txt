{"id":416527506,"lang":"python3","time":"7 months, 4 weeks","timestamp":1604446722,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/416527506/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.1 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        # O(n) time | O(1) space\n        def getSize(node):\n            size = 0\n            while node:\n                size += 1\n                node = node.next\n            return size\n        sizeA = getSize(headA)\n        sizeB = getSize(headB)\n        diff = abs(sizeA - sizeB)\n        nodeA = headA if sizeA > sizeB else headB\n        nodeB = headB if sizeA > sizeB else headA\n        for _ in range(diff):\n            nodeA = nodeA.next\n        while nodeA:\n            if nodeA is nodeB:\n                return nodeA\n            nodeA = nodeA.next\n            nodeB = nodeB.next\n        return None","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}