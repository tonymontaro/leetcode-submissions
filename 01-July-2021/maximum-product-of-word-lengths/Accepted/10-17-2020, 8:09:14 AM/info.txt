{"id":409730904,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602918554,"status_display":"Accepted","runtime":"212 ms","url":"/submissions/detail/409730904/","is_pending":"Not Pending","title":"Maximum Product of Word Lengths","memory":"14.5 MB","code":"from string import ascii_lowercase\nfrom collections import defaultdict\n\nclass Solution:\n    def maxProduct(self, words: List[str]) -> int:\n        # O(n^2)\n        seen = set()\n        longest = defaultdict(int)\n        for w in words:\n            mask = 0\n            for ch in w:\n                mask |= 1 << (ord(ch) - ord(\"a\"))\n            seen.add(mask)\n            longest[mask] = max(longest[mask], len(w))\n        words = list(seen)\n\n        ans = 0\n        for i, mask1 in enumerate(words):\n            for j in range(i + 1, len(words)):\n                mask2 = words[j]\n                if (mask1 & mask2) == 0:\n                    ans = max(ans, longest[mask1] * longest[mask2])\n        return ans\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-word-lengths"}