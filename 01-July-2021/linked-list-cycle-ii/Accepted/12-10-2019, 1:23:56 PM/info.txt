{"id":285016104,"lang":"python3","time":"1 year, 6 months","timestamp":1575980636,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/285016104/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"15.9 MB","code":"class Solution:\n    def detectCycle(self, head):\n        \"\"\"O(n) time | O(1) space\"\"\"\n        fast = slow = head\n        while fast and fast.next:\n            fast = fast.next.next\n            slow = slow.next\n            if fast is slow:\n                return find_cycle(head, slow)\n        return None\n\ndef find_cycle(head, slow):\n    while head is not slow:\n        head = head.next\n        slow = slow.next\n    return slow","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii"}