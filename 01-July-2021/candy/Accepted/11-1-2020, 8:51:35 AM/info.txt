{"id":415514387,"lang":"python3","time":"8Â months","timestamp":1604217095,"status_display":"Accepted","runtime":"240 ms","url":"/submissions/detail/415514387/","is_pending":"Not Pending","title":"Candy","memory":"18.1 MB","code":"import heapq\n\nclass Solution:\n    def candy(self, ratings: List[int]) -> int:\n        arr = [(rating, i) for i, rating in enumerate(ratings)]\n        heapq.heapify(arr)\n        result = [1] * len(ratings)\n        while arr:\n            rating, i = heapq.heappop(arr)\n            if i > 0 and ratings[i - 1] < rating:\n                result[i] = max(result[i], result[i - 1] + 1)\n            if i < len(ratings) - 1 and ratings[i + 1] < rating:\n                result[i] = max(result[i], result[i + 1] + 1)\n\n        return sum(result)\n                 \n        ","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"candy"}