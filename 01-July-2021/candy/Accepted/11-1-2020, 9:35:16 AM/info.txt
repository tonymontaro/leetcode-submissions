{"id":415523883,"lang":"python3","time":"8Â months","timestamp":1604219716,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/415523883/","is_pending":"Not Pending","title":"Candy","memory":"16.7 MB","code":"import heapq\n\nclass Solution:\n    def candy(self, ratings: List[int]) -> int:\n        # O(n) time and space\n        left = []\n        for i, rating in enumerate(ratings):\n            if left and ratings[i - 1] < rating:\n                left.append(left[-1] + 1)\n            else:\n                left.append(1)\n                \n        ans = 0\n        n = len(ratings)\n        prev = 1\n        for i in range(n - 1, -1, -1):\n            if i < n - 1 and ratings[i] > ratings[i + 1]:\n                current = prev + 1\n            else:\n                current = 1\n            ans += max(current, left[i])\n            prev = current\n\n        return ans\n                 \n        ","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"candy"}