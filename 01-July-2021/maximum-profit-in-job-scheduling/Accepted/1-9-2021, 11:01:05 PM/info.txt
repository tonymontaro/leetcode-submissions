{"id":440845241,"lang":"python3","time":"5 months, 3 weeks","timestamp":1610229665,"status_display":"Accepted","runtime":"736 ms","url":"/submissions/detail/440845241/","is_pending":"Not Pending","title":"Maximum Profit in Job Scheduling","memory":"26.4 MB","code":"class Solution:\n    def jobScheduling(self, startTime: List[int], endTime: List[int], profit: List[int]) -> int:\n        n = len(startTime)\n        jobs = [(endTime[i], startTime[i], profit[i]) for i in range(n)]\n        jobs.sort()\n        \n        dp = [0] * n\n        dp[0] = jobs[0][2]\n        for i in range(1, n):\n            dp[i] = dp[i - 1]\n            e, s, p = jobs[i]\n            \n            idx = None\n            left = 0\n            right = i - 1\n            while left <= right:\n                mid = (left + right) // 2\n                if jobs[mid][0] <= s:\n                    idx = mid\n                    left = mid + 1\n                else:\n                    right = mid - 1\n            if idx is not None:\n                dp[i] = max(dp[i], p + dp[idx])\n            else:\n                dp[i] = max(dp[i], p)\n    \n        return dp[-1]\n","compare_result":"111111111111111111111111111","title_slug":"maximum-profit-in-job-scheduling"}