{"id":473738486,"lang":"cpp","time":"3Â months","timestamp":1616994856,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/473738486/","is_pending":"Not Pending","title":"Freedom Trail","memory":"7.6 MB","code":"#define ll long long\n#define umap unordered_map\n#define uset unordered_set\n#define pii pair<int, pair<int, int>>\n#define pi pair<int, int>\n#define v vector\n\nclass Solution {\npublic:\n    int findRotateSteps(string ring, string key) {\n        map<char, v<int>> indexes;\n        int n = ring.size();\n        for (int i = 0; i < ring.size(); i++) indexes[ring[i]].push_back(i);\n        priority_queue<pii, v<pii>, greater<>> pq;\n        int seen[100][100];\n        for (int i = 0; i < 100; i++)\n            for (int j = 0; j < 100; j++) seen[i][j] = INT_MAX;\n        for (auto i: indexes[key[0]]) {\n            int dist = min(i, n - i) + 1;\n            seen[i][0] = dist;\n            pq.push({dist, {i, 0}});\n        }\n        while (!pq.empty()) {\n            auto node = pq.top();\n            pq.pop();\n            int dist = node.first, ri = node.second.first, ki = node.second.second;\n            if (ki == key.size() - 1) return dist;\n            for (auto i: indexes[key[ki + 1]]) {\n                int ndist = dist + min(abs(i - ri), min(ri + n - i, n - ri + i)) + 1;\n                if (ndist < seen[i][ki + 1]) {\n                    seen[i][ki + 1] = ndist;\n                    pq.push({ndist, {i, ki + 1}});\n                }\n            }\n        }\n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"freedom-trail"}