{"id":418407389,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604911744,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/418407389/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"20.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxAncestorDiff(self, root: TreeNode) -> int:\n        self.ans = 0\n        \n        def traverse(node, lo, hi):\n            if not node:\n                return\n            lo = min(node.val, lo)\n            hi = max(node.val, hi)\n            self.ans = max(self.ans, hi - lo)\n            traverse(node.left, lo, hi)\n            traverse(node.right, lo, hi)\n        \n        if root:\n            traverse(root, root.val, root.val)\n        return self.ans","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}