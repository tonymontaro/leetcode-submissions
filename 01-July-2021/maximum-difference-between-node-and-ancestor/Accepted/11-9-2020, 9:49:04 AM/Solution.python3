// https://leetcode.com/problems/maximum-difference-between-node-and-ancestor

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxAncestorDiff(self, root: TreeNode) -> int:
        self.ans = 0
        
        def traverse(node, lo, hi):
            if not node:
                return
            lo = min(node.val, lo)
            hi = max(node.val, hi)
            self.ans = max(self.ans, hi - lo)
            traverse(node.left, lo, hi)
            traverse(node.right, lo, hi)
        
        if root:
            traverse(root, root.val, root.val)
        return self.ans