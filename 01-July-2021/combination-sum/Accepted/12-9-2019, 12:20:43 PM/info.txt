{"id":284777782,"lang":"python3","time":"1 year, 6 months","timestamp":1575890443,"status_display":"Accepted","runtime":"464 ms","url":"/submissions/detail/284777782/","is_pending":"Not Pending","title":"Combination Sum","memory":"17.6 MB","code":"from collections import defaultdict\nfrom copy import deepcopy\n\nclass Solution(object):\n    def combinationSum(self, coins, t):\n        result = defaultdict(list)\n        prev = [0] * (t+1)\n        for r in range(len(coins)):\n            coin = coins[r]\n            current = [0] * (t+1)\n            for i in range(1, t+1):\n                if coin == i:\n                    current[i] += 1\n                    result[(r, i)].append([coin])\n                elif i > coin:\n                    if current[i-coin] > 0:\n                        current[i] += current[i-coin]\n                        result[(r, i)] += [arr_item + [coin] for arr_item in result[(r, i-coin)]]\n                current[i] += prev[i]\n                if result[(r-1, i)]:\n                    result[(r, i)] += deepcopy(result[(r-1, i)])\n            prev = current\n\n        return result[(len(coins)-1, t)]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum"}