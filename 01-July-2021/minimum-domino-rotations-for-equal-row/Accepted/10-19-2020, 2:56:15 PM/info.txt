{"id":410647753,"lang":"python3","time":"8 months, 2 weeks","timestamp":1603115775,"status_display":"Accepted","runtime":"1048 ms","url":"/submissions/detail/410647753/","is_pending":"Not Pending","title":"Minimum Domino Rotations For Equal Row","memory":"14.9 MB","code":"from math import inf\n\nclass Solution:\n    def minDominoRotations(self, A: List[int], B: List[int]) -> int:\n        ans = min(find(A[0], A, B), find(B[0], A, B))\n        return -1 if ans == inf else ans\n        \ndef find(num, arr1, arr2):\n    top = 0\n    bottom = 0\n    for a, b in zip(arr1, arr2):\n        if a == num and b != num:\n            bottom += 1\n        elif b == num and a != num:\n            top += 1\n        elif a != num and b != num:\n            return inf\n    return min(top, bottom)\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-domino-rotations-for-equal-row"}