{"id":419140450,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605086863,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/419140450/","is_pending":"Not Pending","title":"Valid Square","memory":"N/A","code":"class Solution:\n    def validSquare(self, p1: List[int], p2: List[int], p3: List[int], p4: List[int]) -> bool:\n        xs = defaultdict(list)\n        ys = defaultdict(list)\n        \n        for x, y in [p1, p2, p3, p4]:\n            ys[y].append((x, y))\n            xs[x].append((x, y))\n        if len(ys) != 2 or len(xs) != 2:\n            return False\n        setA, setB = [sorted(arr) for arr in ys.values()]\n        xDiff = setA[1][0] - setA[0][0]\n        yDiff = abs(setA[0][1] - setB[0][1])\n        return xDiff == yDiff","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"valid-square"}