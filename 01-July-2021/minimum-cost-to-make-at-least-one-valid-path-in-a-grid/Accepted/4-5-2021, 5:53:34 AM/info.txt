{"id":476651815,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1617598414,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/476651815/","is_pending":"Not Pending","title":"Minimum Cost to Make at Least One Valid Path in a Grid","memory":"12.4 MB","code":"#define ll long long\n#define umap unordered_map\n#define uset unordered_set\n#define pii pair<int, pair<int, int>>\n#define pi pair<int, int>\n#define v vector\n\nint seen[100][100];\nclass Solution {\npublic:\n    int minCost(vector<vector<int>>& grid) {\n        // (1 r) (2 l) (3 d) (4 u)\n        int rlen = grid.size(), clen = grid[0].size();\n        memset(seen, -1, sizeof(seen));\n        priority_queue<pii, v<pii>, greater<>> pq;\n        pq.push({0, {0, 0}});\n        seen[0][0] = 0;\n        while (!pq.empty()) {\n            auto node = pq.top();\n            pq.pop();\n            int dist = node.first, row = node.second.first, col = node.second.second;\n            if (row == rlen-1 && col == clen - 1) return dist;\n            if (row > 0) {\n                int ct = (grid[row][col] == 4) ? 0 : 1;\n                int ndist = dist + ct;\n                int r = row - 1, c = col;\n                if (seen[r][c] == -1 || ndist < seen[r][c]) {\n                    seen[r][c] = ndist;\n                    pq.push({ndist, {r, c}});\n                }\n            }\n            if (row < rlen-1) {\n                int ct = (grid[row][col] == 3) ? 0 : 1;\n                int ndist = dist + ct;\n                int r = row + 1, c = col;\n                if (seen[r][c] == -1 || ndist < seen[r][c]) {\n                    seen[r][c] = ndist;\n                    pq.push({ndist, {r, c}});\n                }\n            }\n            if (col > 0) {\n                int ct = (grid[row][col] == 2) ? 0 : 1;\n                int ndist = dist + ct;\n                int r = row, c = col - 1;\n                if (seen[r][c] == -1 || ndist < seen[r][c]) {\n                    seen[r][c] = ndist;\n                    pq.push({ndist, {r, c}});\n                }\n            }\n            if (col < clen - 1) {\n                int ct = (grid[row][col] == 1) ? 0 : 1;\n                int ndist = dist + ct;\n                int r = row, c = col + 1;\n                if (seen[r][c] == -1 || ndist < seen[r][c]) {\n                    seen[r][c] = ndist;\n                    pq.push({ndist, {r, c}});\n                }\n            }\n        }\n        return -1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-make-at-least-one-valid-path-in-a-grid"}