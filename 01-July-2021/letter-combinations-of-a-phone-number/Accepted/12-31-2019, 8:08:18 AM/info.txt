{"id":289981354,"lang":"python3","time":"1 year, 6 months","timestamp":1577776098,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/289981354/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"12.7 MB","code":"class Solution:\n    def letterCombinations(self, digits: str):\n        if not digits: return []\n        self.mapping = {\n            '2': 'abc',\n            '3': 'def',\n            '4': 'ghi',\n            '5': 'jkl',\n            '6': 'mno',\n            '7': 'pqrs',\n            '8': 'tuv',\n            '9': 'wxyz'\n        }\n        self.result = []\n        self.solve(0, '', digits)\n        return self.result\n        \n    def solve(self, i, prev, digits):\n        if i == len(digits):\n            self.result.append(prev)\n        else:\n            for char in self.mapping[digits[i]]:\n                self.solve(i+1, prev+char, digits)","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}