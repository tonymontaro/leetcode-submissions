// https://leetcode.com/problems/letter-combinations-of-a-phone-number

class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        # O(3^n) time and space | backtracking
        if not digits:
            return []
        keypad = ["abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"]
        result = []
        
        def search(idx, arr):
            if idx >= len(digits):
                result.append("".join(arr))
                return
            
            for keys in keypad[int(digits[idx]) - 2]:
                for cha in keys:
                    arr.append(cha)
                    search(idx + 1, arr)
                    arr.pop()
        
        search(0, [])
        return result