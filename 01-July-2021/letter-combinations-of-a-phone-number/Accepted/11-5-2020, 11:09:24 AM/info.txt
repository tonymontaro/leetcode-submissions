{"id":417036373,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604570964,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/417036373/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"14.1 MB","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        # O(3^n) time and space | backtracking\n        if not digits:\n            return []\n        keypad = [\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"]\n        result = []\n        \n        def search(idx, arr):\n            if idx >= len(digits):\n                result.append(\"\".join(arr))\n                return\n            \n            for keys in keypad[int(digits[idx]) - 2]:\n                for cha in keys:\n                    arr.append(cha)\n                    search(idx + 1, arr)\n                    arr.pop()\n        \n        search(0, [])\n        return result","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}