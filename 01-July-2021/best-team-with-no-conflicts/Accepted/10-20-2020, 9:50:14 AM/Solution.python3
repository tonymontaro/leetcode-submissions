// https://leetcode.com/problems/best-team-with-no-conflicts

class Solution:
    def bestTeamScore(self, scores: List[int], ages: List[int]) -> int:
        # O(n^2) time | O(n) space
        players = list(zip(ages, scores))
        players = sorted(players, reverse=True)
        n = len(players)
        dp = [0] * n
        for i in range(n):
            age, val = players[i]
            dp[i] = val
            for j in range(i - 1, -1, -1):
                age2, val2 = players[j]
                if age2 == age or val <= val2:
                    dp[i] = max(dp[i], dp[j] + val)
        return max(dp)

        
        