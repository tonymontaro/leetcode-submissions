{"id":492993148,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1620985635,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/492993148/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.7 MB","code":"class Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if (!root) return;\n        solve(root);\n    }\n    pair<TreeNode*, TreeNode*> solve(TreeNode* node) {\n        if (!node->right && !node->left) return {node, node};\n        TreeNode *left = nullptr;\n        TreeNode *right = nullptr;\n        if (node->left) {\n            auto l = solve(node->left);\n            left = l.first;\n            right = l.second;\n        }\n        if (node->right) {\n            auto r = solve(node->right);\n            if (!left) left = r.first;\n            if (right) right->right = r.first;\n            right = r.second;\n        }\n        node->left = nullptr;\n        node->right = left;\n        return {node, right};\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}