{"id":286677081,"lang":"python3","time":"1 year, 6 months","timestamp":1576608062,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/286677081/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def flatten(self, root: TreeNode) -> None:\n        \"\"\"\n        O(n) time | O(1) space -> in-place\n        \"\"\"\n        def helper(node):\n            if node:\n                right = node.right\n                if node.left:\n                    node.right = node.left\n                    last_left_node = helper(node.left)\n                    node.left = None\n                else:\n                    last_left_node = node\n                \n                last_right_node = helper(right) or last_left_node\n                if right:\n                    last_left_node.right = right\n                return last_right_node\n        helper(root)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}