{"id":405123651,"lang":"java","time":"8 months, 4 weeks","timestamp":1601960067,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/405123651/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"38.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void flatten(TreeNode root) {\n        call(root);\n    }\n\n    TreeNode call(TreeNode node) {\n        if (node == null) return null;\n        TreeNode left = call(node.left);\n        TreeNode right = call(node.right);\n        TreeNode l = node.left;\n        TreeNode r = node.right;\n        if (l != null) {\n            node.right = l;\n            left.right = r;\n            node.left = null;\n            return r == null ? left : right;\n        }\n        return r == null ? node : right;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}