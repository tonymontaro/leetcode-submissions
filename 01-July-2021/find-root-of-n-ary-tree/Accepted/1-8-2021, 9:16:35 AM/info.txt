{"id":440201501,"lang":"python3","time":"5 months, 3 weeks","timestamp":1610093795,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/440201501/","is_pending":"Not Pending","title":"Find Root of N-Ary Tree","memory":"25.1 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children if children is not None else []\n\"\"\"\n\nclass Solution:\n    def findRoot(self, tree: List['Node']) -> 'Node':\n        # O(n) time and space\n        seen = {}\n        root = None\n        \n        for node in tree:\n            if node.val in seen:\n                continue\n            seen[node.val] = 1\n            root = node\n            stack = [node]\n            while stack:\n                nn = stack.pop()\n                for child in nn.children:\n                    if child.val not in seen:\n                        seen[child.val] = 1\n                        stack.append(child)\n        return root\n            ","compare_result":"11111111111111111111111111111111111111","title_slug":"find-root-of-n-ary-tree"}