{"id":460810536,"lang":"python3","time":"4Â months","timestamp":1614317548,"status_display":"Accepted","runtime":"3864 ms","url":"/submissions/detail/460810536/","is_pending":"Not Pending","title":"Minimum Number of Removals to Make Mountain Array","memory":"14.6 MB","code":"from math import inf\n\nclass Solution:\n    def minimumMountainRemovals(self, nums: List[int]) -> int:\n        n = len(nums)\n        leftDp = [0] * n\n        for i, num in enumerate(nums):\n            rs = i\n            for j in range(i):\n                if num > nums[j]:\n                    rs = min(rs, i - j - 1 + leftDp[j])\n            leftDp[i] = rs\n        rightDp = [0] * n\n        for i in range(n - 1, -1, -1):\n            num = nums[i]\n            rs = n - i - 1\n            for j in range(i + 1, n):\n                if num > nums[j]:\n                    rs = min(rs, j - i - 1 + rightDp[j])\n            rightDp[i] = rs\n        \n        ans = inf\n        for i in range(1, n - 1):\n            if leftDp[i] == i or n - i - 1 == rightDp[i]:\n                continue\n            ans = min(ans, leftDp[i] + rightDp[i])\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-removals-to-make-mountain-array"}