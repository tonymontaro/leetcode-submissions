{"id":417759592,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604765103,"status_display":"Accepted","runtime":"1388 ms","url":"/submissions/detail/417759592/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"30.1 MB","code":"from collections import deque\n\nclass Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        # O(n) time | O(k) space\n        window = deque()\n        ans = []\n        \n        for i, num in enumerate(nums):\n            while window and num >= window[-1][1]:\n                window.pop()\n            window.append((i, num))\n            \n            while i >= k and window[0][0] <= i - k:\n                window.popleft()\n            \n            if i >= k - 1:\n                ans.append(window[0][1])\n\n        return ans\n","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum"}