{"id":446566207,"lang":"python3","time":"5 months, 1 week","timestamp":1611376133,"status_display":"Accepted","runtime":"1544 ms","url":"/submissions/detail/446566207/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"239.9 MB","code":"from math import inf\n\nclass Solution:\n    def minInsertions(self, s: str) -> int:\n        n = len(s)\n        cache = {}\n\n        def solve(i, j):\n            if i >= j:\n                return 0\n\n            if (i, j) in cache:\n                return cache[(i, j)]\n            \n            ans = 1 + min(solve(i + 1, j), solve(i, j - 1))\n            if s[i] == s[j]:\n                ans = min(ans, solve(i + 1, j - 1))\n            cache[(i, j)] = ans\n            return ans\n        \n        return solve(0, n - 1)\n            ","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome"}