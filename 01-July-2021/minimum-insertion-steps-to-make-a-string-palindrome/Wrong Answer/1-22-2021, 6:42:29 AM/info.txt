{"id":446198765,"lang":"python3","time":"5 months, 1 week","timestamp":1611294149,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/446198765/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"N/A","code":"class Solution:\n    def minInsertions(self, s: str) -> int:\n        n = len(s)\n        def countDiff(l, r):\n            cnt = 0\n            while l >= 0 and r < n:\n                if s[l] != s[r]:\n                    cnt += 2\n                l -= 1\n                r += 1\n            return cnt + (l + 1) + (n - r)\n        \n        minDiff = n\n        for i, cha in enumerate(s):\n            minDiff = min(minDiff, countDiff(i, i))\n            if i > 0:\n                minDiff = min(minDiff, countDiff(i - 1, i))\n        return minDiff","compare_result":"111111110001000010110100001000010110001000100000000010010","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome"}