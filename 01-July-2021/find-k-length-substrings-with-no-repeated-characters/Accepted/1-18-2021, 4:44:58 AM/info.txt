{"id":444387452,"lang":"python3","time":"5Â months, 2Â weeks","timestamp":1610941498,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/444387452/","is_pending":"Not Pending","title":"Find K-Length Substrings With No Repeated Characters","memory":"14.5 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def numKLenSubstrNoRepeats(self, s: str, k: int) -> int:\n        if k > len(s):\n            return 0\n\n        repeated = 0\n        n = len(s)\n        seen = defaultdict(int)\n        for i in range(k):\n            if seen[s[i]] == 1:\n                repeated += 1\n            seen[s[i]] += 1\n        \n        ans = 1 if repeated == 0 else 0\n        left = 0\n        for i in range(k, n):\n            if seen[s[left]] == 2:\n                repeated -= 1\n            seen[s[left]] -= 1\n            left += 1\n\n            if seen[s[i]] == 1:\n                repeated += 1\n            seen[s[i]] += 1\n            \n            if repeated == 0:\n                ans += 1\n        return ans","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"find-k-length-substrings-with-no-repeated-characters"}