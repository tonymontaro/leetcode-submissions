{"id":430977750,"lang":"python3","time":"6 months, 2 weeks","timestamp":1608054669,"status_display":"Accepted","runtime":"272 ms","url":"/submissions/detail/430977750/","is_pending":"Not Pending","title":"Squares of a Sorted Array","memory":"16.1 MB","code":"class Solution:\n    def sortedSquares(self, nums: List[int]) -> List[int]:\n        # O(n) time | O(1) space\n        idx = 0\n        for i, num in enumerate(nums):\n            if abs(num) < abs(nums[idx]):\n                idx = i\n        l = idx - 1\n        r = idx + 1\n        n = len(nums)\n        squares = [nums[idx]**2]\n        while l >= 0 or r < n:\n            if r >= n or abs(nums[l]) < abs(nums[r]):\n                squares.append(nums[l]**2)\n                l -= 1\n            else:\n                squares.append(nums[r]**2)\n                r += 1\n        return squares\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"squares-of-a-sorted-array"}