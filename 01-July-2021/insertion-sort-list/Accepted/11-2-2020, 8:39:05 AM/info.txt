{"id":415897191,"lang":"python3","time":"8Â months","timestamp":1604302745,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/415897191/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"15.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def insertionSortList(self, head: ListNode) -> ListNode:\n        current = head\n        prev = None\n        \n        while current:\n            if prev is None or prev.val <= current.val:\n                prev = current\n                current = current.next\n                continue\n            prev.next = current.next\n            node = head\n            prev2 = None\n            while current.val > node.val:\n                prev2 = node\n                node = node.next\n            if prev2:\n                prev2.next = current\n            else:\n                head = current\n            current.next = node\n            current = prev.next\n        return head\n            \n            ","compare_result":"1111111111111111111111","title_slug":"insertion-sort-list"}