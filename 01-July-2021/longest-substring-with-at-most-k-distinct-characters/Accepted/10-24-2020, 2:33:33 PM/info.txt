{"id":412586296,"lang":"python3","time":"8 months, 1 week","timestamp":1603546413,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/412586296/","is_pending":"Not Pending","title":"Longest Substring with At Most K Distinct Characters","memory":"14.3 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def lengthOfLongestSubstringKDistinct(self, s: str, k: int) -> int:\n        if k <= 0: return 0\n        distinct = 0\n        ans = 0\n        left = 0\n        seen = defaultdict(int)\n        for i, cha in enumerate(s):\n            seen[cha] += 1\n            if seen[cha] == 1:\n                distinct += 1\n            while distinct > k:\n                seen[s[left]] -= 1\n                if seen[s[left]] == 0:\n                    distinct -= 1\n                left += 1\n            ans = max(ans, i - left + 1)\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-substring-with-at-most-k-distinct-characters"}