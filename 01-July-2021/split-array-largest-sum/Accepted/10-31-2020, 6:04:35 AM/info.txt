{"id":415115071,"lang":"python3","time":"8Â months","timestamp":1604120675,"status_display":"Accepted","runtime":"4100 ms","url":"/submissions/detail/415115071/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"23.2 MB","code":"from math import inf\n\nclass Solution:\n    def splitArray(self, nums: List[int], m: int) -> int:\n        # O(n * m) time and space\n        dp = {}\n        n = len(nums)\n        \n        def solve(idx, cuts, total):\n            if (idx, cuts) not in dp:\n                if cuts == 1:\n                    dp[(idx, cuts)] = total\n                    return total\n                ans = inf\n                current = 0\n                for i in range(idx, n):\n                    current += nums[i]\n                    if current > ans:\n                        break\n                    res = max(current, solve(i + 1, cuts - 1, total - current))\n                    ans = min(res, ans)\n                dp[(idx, cuts)] = ans\n\n            return dp[(idx, cuts)]\n        \n        result = solve(0, m, sum(nums))\n        return result\n        ","compare_result":"1111111111111111111111111111","title_slug":"split-array-largest-sum"}