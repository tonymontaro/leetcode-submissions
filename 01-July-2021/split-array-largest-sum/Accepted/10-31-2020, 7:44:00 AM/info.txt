{"id":415138836,"lang":"python3","time":"8Â months","timestamp":1604126640,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/415138836/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"14.3 MB","code":"from math import inf\n\nclass Solution:\n    def splitArray(self, nums: List[int], m: int) -> int:\n        # O(nlogn) time | O(1) space\n        totalSum = sum(nums)\n        if m == 1:\n            return totalSum\n        \n        def check(highest, total, cuts):\n            current = 0\n            for num in nums:\n                if current + num > highest:\n                    cuts -= 1\n                    if cuts == 1:\n                        return total <= highest\n                    current = 0\n                current += num\n                total -= num\n            return True\n        \n        lo = max(nums)\n        hi = 10**9\n        valid = hi\n        while lo <= hi:\n            mid = (lo + hi) // 2\n            rs = check(mid, totalSum, m)\n            # print(mid, rs)\n            if rs:\n                valid = mid\n                hi = mid - 1\n            else:\n                lo = mid + 1\n        return valid\n   \n        ","compare_result":"1111111111111111111111111111","title_slug":"split-array-largest-sum"}