{"id":459107097,"lang":"python3","time":"4Â months, 1Â week","timestamp":1613969203,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/459107097/","is_pending":"Not Pending","title":"Longest Substring with At Least K Repeating Characters","memory":"14.3 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def longestSubstring(self, s: str, k: int) -> int:\n        mx = len(set(s))\n        \n        def check(limit):\n            ans = 0\n            left = 0\n            count = 0\n            cnt = defaultdict(int)\n            valid = 0\n            for i, cha in enumerate(s):\n                if cnt[cha] == 0:\n                    count += 1\n                while count > limit:\n                    c = s[left]\n                    if cnt[c] == k:\n                        valid -= 1\n                    cnt[c] -= 1\n                    if cnt[c] == 0:\n                        count -= 1\n                    left += 1\n                cnt[cha] += 1\n                if cnt[cha] == k:\n                    valid += 1\n                if valid == count:\n                    ans = max(ans, i - left + 1)\n            return ans\n        \n        res = 0\n        for i in range(1, mx + 1):\n            res = max(res, check(i))\n        return res\n            ","compare_result":"1111111111111111111111111111111","title_slug":"longest-substring-with-at-least-k-repeating-characters"}