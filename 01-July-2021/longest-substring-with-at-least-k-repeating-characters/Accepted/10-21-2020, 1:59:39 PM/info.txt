{"id":411450392,"lang":"python3","time":"8 months, 1 week","timestamp":1603285179,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/411450392/","is_pending":"Not Pending","title":"Longest Substring with At Least K Repeating Characters","memory":"14.1 MB","code":"from collections import defaultdict\n\nclass Solution:\n    def longestSubstring(self, s: str, k: int) -> int:\n        self.seen = {}\n        return self.helper(s, k)\n    def helper(self, s, k):\n        if s not in self.seen:\n            unique = set(s)\n            for c in unique:\n                if s.count(c) < k:\n                    ans = max([self.helper(ss, k) for ss in s.split(c)])\n                    break\n            else:\n                ans = len(s)\n            self.seen[s] = ans\n        return self.seen[s]\n                \n        ","compare_result":"1111111111111111111111111111","title_slug":"longest-substring-with-at-least-k-repeating-characters"}