{"id":461986696,"lang":"python3","time":"4Â months","timestamp":1614574288,"status_display":"Accepted","runtime":"3372 ms","url":"/submissions/detail/461986696/","is_pending":"Not Pending","title":"Maximum Vacation Days","memory":"21.9 MB","code":"from math import inf\nfrom functools import lru_cache\n\nclass Solution:\n    def maxVacationDays(self, flights: List[List[int]], days: List[List[int]]) -> int:\n        n = len(flights)\n        w = len(days[0])\n        \n        @lru_cache(None)\n        def solve(city, weeks):\n            if weeks >= w:\n                return 0\n            \n            ans = days[city][weeks] + solve(city, weeks + 1)\n            for child in range(n):\n                if flights[city][child] == 1:\n                    ans = max(ans, days[child][weeks] + solve(child, weeks + 1))\n\n            return ans\n        \n        return solve(0, 0)\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-vacation-days"}