{"id":417944567,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604806827,"status_display":"Accepted","runtime":"904 ms","url":"/submissions/detail/417944567/","is_pending":"Not Pending","title":"Sell Diminishing-Valued Colored Balls","memory":"38.5 MB","code":"from sortedcontainers import SortedList\nfrom collections import Counter\n\nclass Solution:\n    def maxProfit(self, inventory: List[int], orders: int) -> int:\n        count = dict(Counter(inventory))\n        count[0] = 0\n        MOD = 10**9 + 7\n        \n        balls = SortedList([[k, v] for k, v in count.items()])\n        # print(balls)\n        \n        ans = 0\n        while orders > 0:\n            # print(orders, balls, ans)\n            if orders <= balls[-1][1]:\n                ans = (ans + orders * balls[-1][0]) % MOD\n                return ans\n            k, cnt = balls[-1]\n            pk, pcnt = balls[-2]\n            \n            rounds = orders // cnt\n            mxRound = k - pk\n            if mxRound <= rounds:\n                cost = (mxRound * (k + k - mxRound + 1)) // 2\n                cost *= cnt\n                ans = (ans + cost) % MOD\n                orders -= mxRound * cnt\n                balls.pop()\n                balls[-1][1] += cnt\n            else:\n                cost = (rounds * (k + k - rounds + 1)) // 2\n                cost *= cnt\n                ans = (ans + cost) % MOD\n                orders -= rounds * cnt\n                balls[-1][0] = k - rounds\n        return ans\n            \n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sell-diminishing-valued-colored-balls"}