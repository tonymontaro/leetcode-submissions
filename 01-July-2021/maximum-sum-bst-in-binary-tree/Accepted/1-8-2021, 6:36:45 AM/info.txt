{"id":440140221,"lang":"python3","time":"5 months, 3 weeks","timestamp":1610084205,"status_display":"Accepted","runtime":"516 ms","url":"/submissions/detail/440140221/","is_pending":"Not Pending","title":"Maximum Sum BST in Binary Tree","memory":"72.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxSumBST(self, root: TreeNode) -> int:\n        self.ans = 0\n        \n        def dfs(node):\n            if not node:\n                return [None, None, True, 0]\n            left = dfs(node.left)\n            right = dfs(node.right)\n            val = node.val\n            if (not left[2]) or (left[1] is not None and val <= left[1]) or (not right[2]) or (right[0] is not None and val >= right[0]):\n                return [0, 0, False, 0]\n            mn = left[0] if left[0] is not None else val\n            mx = right[1] if right[1] is not None else val\n            sm = left[3] + right[3] + val\n            self.ans = max(self.ans, sm)\n            return [mn, mx, True, sm]\n        \n        dfs(root)\n        return self.ans","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-bst-in-binary-tree"}