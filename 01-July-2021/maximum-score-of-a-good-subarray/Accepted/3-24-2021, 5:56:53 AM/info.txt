{"id":471729101,"lang":"cpp","time":"3 months, 1 week","timestamp":1616561813,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/471729101/","is_pending":"Not Pending","title":"Maximum Score of a Good Subarray","memory":"89.5 MB","code":"#define ll long long\n#define umap unordered_map\n#define uset unordered_set\n#define pii pair<int, pair<int, int>>\n#define v vector\n\nclass Solution {\npublic:\n    int maximumScore(vector<int>& nums, int k) {\n        int n = nums.size();\n        int mn = nums[k];\n        ll ans = mn;\n        int left = k - 1, right = k + 1;\n        while (left >= 0 || right < n) {\n            if (right >= n || (left >= 0 && nums[left] >= nums[right])){\n                mn = min(mn, nums[left]);\n                left--;\n            } else {\n                mn = min(mn, nums[right]);\n                right++;\n            }\n            ll score = (right - left - 1) * mn;\n            ans = max(ans, score);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-score-of-a-good-subarray"}