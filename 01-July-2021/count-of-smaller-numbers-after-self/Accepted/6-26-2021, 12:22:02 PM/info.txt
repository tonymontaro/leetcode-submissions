{"id":513390594,"lang":"cpp","time":"4 days, 19 hours","timestamp":1624706522,"status_display":"Accepted","runtime":"328 ms","url":"/submissions/detail/513390594/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"103.9 MB","code":"#define umap unordered_map\n#define uset unordered_set\n#define pi pair<ll, ll>\n#define pii pair<ll, pi>\n#define v vector\n#define ll long long\n\nclass FenwickTree {\n    // One indexed FenwickTree (Binary Indexed Tree)\npublic:\n    FenwickTree(int nn) : n(nn), data(nn + 1) {}\n    FenwickTree(int nn, v<ll> dat) : n(nn), data(nn + 1) {\n        assert(nn == dat.size());\n        for (int i = 1; i < n + 1; i++) {\n            data[i] += dat[i - 1];\n            int parent = i + (i & -i);\n            if (parent <= n)\n                data[parent] += data[i];\n        }\n    }\n\n    void add(int i, ll val) {\n        assert(i > 0 && i <= n);\n        while (i <= n) {\n            data[i] += val;\n            i += (i & -i);\n        }\n    }\n    ll sum(int left, int right) {\n        // inclusive sum from left to right\n        assert(left > 0 && left <= right && right <= n);\n        return sum(right) - sum(left - 1);\n    }\n    ll sum(int i) {\n        assert(i >= 0 && i <= n);\n        ll ans = 0;\n        while (i > 0) {\n            ans += data[i];\n            i -= (i & -i);\n        }\n        return ans;\n    }\n\nprivate:\n    int n;\n    vector<ll> data;\n};\n\nclass Solution {\npublic:\n    vector<int> countSmaller(vector<int>& nums) {\n        // compress array\n        set<int> seen;\n        for (auto x: nums) seen.insert(x);\n        umap<int, int> mp;\n        int idx = 1;\n        for (auto x: seen) mp[x] = idx++;\n        FenwickTree fen(idx);\n        v<int> ans(nums.size());\n        for (int i = nums.size() - 1; i >= 0; --i) {\n            int midx = mp[nums[i]];\n            ans[i] = fen.sum(midx - 1);\n            fen.add(midx, 1);\n        }\n        return ans;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-of-smaller-numbers-after-self"}