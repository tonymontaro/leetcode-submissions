{"id":416508878,"lang":"python3","time":"7 months, 4 weeks","timestamp":1604442452,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/416508878/","is_pending":"Not Pending","title":"Group Anagrams","memory":"16.8 MB","code":"from collections import Counter\nfrom string import ascii_lowercase\n\nclass Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        # O(n * w) time : n -> len(strs), w -> average word length\n        cache = {}\n        for word in strs:\n            count = Counter(word)\n            anagramHash = []\n            for cha in ascii_lowercase:\n                if cha in count:\n                    anagramHash.append(cha)\n                    anagramHash.append(str(count[cha]))\n            hsh = \"\".join(anagramHash)\n            if hsh not in cache:\n                cache[hsh] = []\n            cache[hsh].append(word)\n\n        return list(cache.values())","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}