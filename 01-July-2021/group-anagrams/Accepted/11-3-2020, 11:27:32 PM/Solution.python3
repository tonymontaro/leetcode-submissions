// https://leetcode.com/problems/group-anagrams

from collections import Counter
from string import ascii_lowercase

class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        # O(n * w) time : n -> len(strs), w -> average word length
        cache = {}
        for word in strs:
            count = Counter(word)
            anagramHash = []
            for cha in ascii_lowercase:
                if cha in count:
                    anagramHash.append(cha)
                    anagramHash.append(str(count[cha]))
            hsh = "".join(anagramHash)
            if hsh not in cache:
                cache[hsh] = []
            cache[hsh].append(word)

        return list(cache.values())