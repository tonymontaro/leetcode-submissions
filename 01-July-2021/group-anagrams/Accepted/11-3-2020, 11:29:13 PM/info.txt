{"id":416509358,"lang":"python3","time":"7 months, 4 weeks","timestamp":1604442553,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/416509358/","is_pending":"Not Pending","title":"Group Anagrams","memory":"17.5 MB","code":"from collections import Counter, defaultdict\n\nclass Solution:\n    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:\n        # O(n * w) time : n -> len(strs), w -> average word length\n        cache = defaultdict(list)\n        for word in strs:\n            sortedWord = \"\".join(sorted(word))\n            cache[sortedWord].append(word)\n\n        return cache.values()","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}