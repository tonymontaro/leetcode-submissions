{"id":480461440,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1618384753,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/480461440/","is_pending":"Not Pending","title":"Partition List","memory":"10.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        ListNode left, right;\n        ListNode *leftNode = &left, *rightNode = &right;\n        while (head) {\n            auto next = head->next;\n            if (head->val < x) {\n                leftNode->next = head;\n                leftNode = leftNode->next;\n            } else {\n                rightNode->next = head;\n                rightNode = rightNode->next;\n            }\n            head->next = nullptr;\n            head = next;\n        }\n        leftNode->next = right.next;\n        return left.next;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list"}