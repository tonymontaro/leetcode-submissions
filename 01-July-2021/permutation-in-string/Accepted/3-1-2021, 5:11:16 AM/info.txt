{"id":461972304,"lang":"python3","time":"4Â months","timestamp":1614571876,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/461972304/","is_pending":"Not Pending","title":"Permutation in String","memory":"14.4 MB","code":"from collections import Counter, defaultdict\n\nclass Solution:\n    def checkInclusion(self, s1: str, s2: str) -> bool:\n        count = Counter(s1)\n        n = len(s1)\n        counted = 0\n        seen = defaultdict(int)\n        left = 0\n        for i, ch in enumerate(s2):\n            # print(ch, seen, counted)\n            if ch not in count:\n                seen = defaultdict(int)\n                counted = 0\n                left = i + 1\n                continue\n            while seen[ch] == count[ch]:\n                seen[s2[left]] -= 1\n                left += 1\n                counted -= 1\n            counted += 1\n            if counted == n:\n                return True\n            seen[ch] += 1\n        return False\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-in-string"}