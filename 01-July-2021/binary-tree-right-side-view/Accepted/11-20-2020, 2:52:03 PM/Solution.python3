// https://leetcode.com/problems/binary-tree-right-side-view

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: TreeNode) -> List[int]:
        # O(n) time | O(h) space
        result = []
        
        def inorder(node, depth):
            if not node:
                return
            
            if depth - 1 >= len(result):
                result.append(node.val)
            else:
                result[depth - 1] = node.val
            
            inorder(node.left, depth + 1)
            inorder(node.right, depth + 1)
        
        inorder(root, 1)
        return result