{"id":422325399,"lang":"python3","time":"7 months, 1 week","timestamp":1605880323,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/422325399/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: TreeNode) -> List[int]:\n        # O(n) time | O(h) space\n        result = []\n        \n        def inorder(node, depth):\n            if not node:\n                return\n            \n            if depth - 1 >= len(result):\n                result.append(node.val)\n            else:\n                result[depth - 1] = node.val\n            \n            inorder(node.left, depth + 1)\n            inorder(node.right, depth + 1)\n        \n        inorder(root, 1)\n        return result","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}