{"id":464661034,"lang":"python3","time":"3 months, 3 weeks","timestamp":1615112152,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/464661034/","is_pending":"Not Pending","title":"Design HashMap","memory":"17.3 MB","code":"class MyHashMap:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.h = {}\n        \n\n    def put(self, key: int, value: int) -> None:\n        \"\"\"\n        value will always be non-negative.\n        \"\"\"\n        self.h[key] = value\n        \n\n    def get(self, key: int) -> int:\n        \"\"\"\n        Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key\n        \"\"\"\n        return self.h[key] if key in self.h else -1\n        \n\n    def remove(self, key: int) -> None:\n        \"\"\"\n        Removes the mapping of the specified value key if this map contains a mapping for the key\n        \"\"\"\n        if key in self.h:\n            self.h.pop(key)\n\n\n# Your MyHashMap object will be instantiated and called as such:\n# obj = MyHashMap()\n# obj.put(key,value)\n# param_2 = obj.get(key)\n# obj.remove(key)","compare_result":"111111111111111111111111111111111","title_slug":"design-hashmap"}