{"id":420147942,"lang":"python3","time":"7 months, 2 weeks","timestamp":1605352634,"status_display":"Accepted","runtime":"376 ms","url":"/submissions/detail/420147942/","is_pending":"Not Pending","title":"Design HashMap","memory":"20.7 MB","code":"class Node:\n    def __init__(self, key, val):\n        self.key   = key\n        self.val = val\n        self.next = None\n\nclass Bucket:\n    def __init__(self):\n        self.arr = []\n    \n    def add(self, key, val):\n        for i, (k, v) in enumerate(self.arr):\n            if k == key:\n                self.arr[i][1] = val\n                return\n        self.arr.append([key, val])\n        \n\n    def get(self, key):\n        for i, (k, v) in enumerate(self.arr):\n            if k == key:\n                return v\n        return -1\n\n    def delete(self, key):\n        for i, (k, v) in enumerate(self.arr):\n            if k == key:\n                self.arr.pop(i)\n                break\n\n\nclass MyHashMap:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.MAX = 10000\n        self.arr = [Bucket() for _ in range(self.MAX)]\n        \n\n    def put(self, key: int, value: int) -> None:\n        \"\"\"\n        value will always be non-negative.\n        \"\"\"\n        self.arr[key % self.MAX].add(key, value)\n        \n\n    def get(self, key: int) -> int:\n        \"\"\"\n        Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key\n        \"\"\"\n        ans = self.arr[key % self.MAX].get(key)\n        return ans\n        \n\n    def remove(self, key: int) -> None:\n        \"\"\"\n        Removes the mapping of the specified value key if this map contains a mapping for the key\n        \"\"\"\n        self.arr[key % self.MAX].delete(key)\n        # print(\"check\", self.arr[key % self.MAX].get(key))\n        \n\n\n# Your MyHashMap object will be instantiated and called as such:\n# obj = MyHashMap()\n# obj.put(key,value)\n# param_2 = obj.get(key)\n# obj.remove(key)","compare_result":"111111111111111111111111111111111","title_slug":"design-hashmap"}