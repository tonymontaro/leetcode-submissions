{"id":275657499,"lang":"python","time":"1 year, 7 months","timestamp":1572809286,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/275657499/","is_pending":"Not Pending","title":"Encode and Decode TinyURL","memory":"11.9 MB","code":"import string\nimport random\n\nclass Codec:\n    def __init__(self):\n        self.urls = {}\n        self.characters = list(string.ascii_letters) + list('1234567890')\n\n    def encode(self, long_url):\n        short_url = None\n        while not short_url:\n            url = self.get_short_str()\n            if url not in self.urls:\n                short_url = url\n                self.urls[short_url] = long_url\n        return short_url\n        \n\n    def decode(self, short_url):\n        if short_url in self.urls:\n            return self.urls[short_url]\n\n    def get_short_str(self):\n        rs = [random.choice(self.characters) for _ in range(6)]\n        return ''.join(rs)","compare_resulttitle_slug":"encode-and-decode-tinyurl"}