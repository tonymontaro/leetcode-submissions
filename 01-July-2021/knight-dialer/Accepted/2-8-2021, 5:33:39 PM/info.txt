{"id":453669191,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612802019,"status_display":"Accepted","runtime":"8784 ms","url":"/submissions/detail/453669191/","is_pending":"Not Pending","title":"Knight Dialer","memory":"44.1 MB","code":"class Solution:\n    def knightDialer(self, num: int) -> int:\n        knight = [(-1, -2), (-2, -1), (-2, 1), (-1, 2), (1, -2), (2, -1), (2, 1), (1, 2)]\n        rlen, clen = 4, 3\n        invalid = [(3, 0), (3, 2)]\n        cache = {}\n        mod = 10**9 + 7\n\n        def solve(r, c, rem):\n            isValid = 0 <= r < rlen and 0 <= c < clen and (r, c) not in invalid\n            if not isValid:\n                return 0\n            \n            if rem == 1:\n                return 1\n            \n            if (r, c, rem) in cache:\n                return cache[(r, c, rem)]\n            ans = 0\n            for rAdd, cAdd in knight:\n                ans = (ans + solve(r + rAdd, c + cAdd, rem - 1)) % mod\n            cache[(r, c, rem)] = ans\n            return ans\n        \n        res = 0\n        for r in range(rlen):\n            for c in range(clen):\n                res = (res + solve(r, c, num)) % mod\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"knight-dialer"}