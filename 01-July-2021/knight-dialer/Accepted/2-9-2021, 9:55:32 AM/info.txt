{"id":453975144,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612860932,"status_display":"Accepted","runtime":"2516 ms","url":"/submissions/detail/453975144/","is_pending":"Not Pending","title":"Knight Dialer","memory":"41 MB","code":"class Solution:\n    # cache = {}\n\n    def knightDialer(self, num: int) -> int:\n        nodes = [(4, 6), (6, 8), (7, 9), (4, 8), (3, 9, 0), (), (1, 7, 0), (2, 6), (1, 3), (2, 4)]\n        mod = 10**9 + 7\n        cache = {}\n        def solve(x, rem):\n            if rem == 1:\n                return 1\n            if (x, rem) in cache:\n                return cache[(x, rem)]\n            ans = 0\n            for y in nodes[x]:\n                ans = (ans + solve(y, rem-1)) % mod\n            cache[(x, rem)] = ans\n            return ans\n        \n        res = 0\n        for i in range(10):\n            res = (res + solve(i, num)) % mod\n        return res\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"knight-dialer"}