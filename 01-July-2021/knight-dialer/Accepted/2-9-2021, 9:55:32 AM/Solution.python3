// https://leetcode.com/problems/knight-dialer

class Solution:
    # cache = {}

    def knightDialer(self, num: int) -> int:
        nodes = [(4, 6), (6, 8), (7, 9), (4, 8), (3, 9, 0), (), (1, 7, 0), (2, 6), (1, 3), (2, 4)]
        mod = 10**9 + 7
        cache = {}
        def solve(x, rem):
            if rem == 1:
                return 1
            if (x, rem) in cache:
                return cache[(x, rem)]
            ans = 0
            for y in nodes[x]:
                ans = (ans + solve(y, rem-1)) % mod
            cache[(x, rem)] = ans
            return ans
        
        res = 0
        for i in range(10):
            res = (res + solve(i, num)) % mod
        return res
        