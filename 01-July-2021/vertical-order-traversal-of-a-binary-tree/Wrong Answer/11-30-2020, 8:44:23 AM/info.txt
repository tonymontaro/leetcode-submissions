{"id":425657750,"lang":"python3","time":"7Â months","timestamp":1606722263,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/425657750/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import defaultdict, deque\n\nclass Solution:\n    def verticalTraversal(self, root: TreeNode) -> List[List[int]]:\n        verticals = defaultdict(list)\n        \n        deq = deque()\n        deq.append((root, 0))\n        while deq:\n            node, loc = deq.popleft()\n            if node:\n                verticals[loc].append(node.val)\n                deq.append((node.left, loc - 1))\n                deq.append((node.right, loc + 1))\n        \n        keys = sorted(verticals.keys())\n        return [verticals[k] for k in keys]","compare_result":"111111111111011010000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree"}