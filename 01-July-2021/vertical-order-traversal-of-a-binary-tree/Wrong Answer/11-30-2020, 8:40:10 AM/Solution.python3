// https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import defaultdict

class Solution:
    def verticalTraversal(self, root: TreeNode) -> List[List[int]]:
        verticals = defaultdict(list)

        def traverse(node, loc):
            if not node:
                return 
            
            verticals[loc].append(node.val)
            traverse(node.left, loc - 1)
            traverse(node.right, loc + 1)
        
        traverse(root, 0)
        keys = sorted(verticals.keys())
        return [verticals[k] for k in keys]