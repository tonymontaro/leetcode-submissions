{"id":455485193,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613213607,"status_display":"Accepted","runtime":"428 ms","url":"/submissions/detail/455485193/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"52.4 MB","code":"class Solution:\n    def shortestCommonSupersequence(self, s1: str, s2: str) -> str:\n        n, m = len(s1), len(s2)\n        grid = [[0] * (m + 1) for _ in range(n + 1)]\n        grid[0] = list(range(m + 1))\n        \n        for r in range(1, n + 1):\n            grid[r][0] = 1 + grid[r-1][0]\n            for c in range(1, m + 1):\n                if s1[r-1] == s2[c-1]:\n                    grid[r][c] = 1 + grid[r-1][c-1]\n                else:\n                    grid[r][c] = 1 + min(grid[r-1][c], grid[r][c-1])\n        \n        ans = []\n        r, c = n, m\n        while r > 0 or c > 0:\n            if r > 0 and c > 0 and s1[r-1] == s2[c-1]:\n                ans.append(s1[r-1])\n                r -= 1\n                c -= 1\n            elif r == 0 or (r > 0 and c > 0 and grid[r][c-1] < grid[r-1][c]):\n                ans.append(s2[c-1])\n                c -= 1\n            else:\n                ans.append(s1[r-1])\n                r -= 1\n        return \"\".join(ans)[::-1]","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"shortest-common-supersequence"}