// https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza

class Solution:
    def ways(self, grid: List[str], k: int) -> int:
        rlen, clen = len(grid), len(grid[0])
        mod = 10**9 + 7
        cache = {}
        
        def solve(row, col, count):
            if count == 0:
                return 1
            if (row, col, count) in cache:
                return cache[(row, col, count)]
            
            rows = {}
            cols = {}
            for r in range(row, rlen):
                for c in range(col, clen):
                    if grid[r][c] == 'A':
                        rows[r] = 1
                        cols[c] = 1
            rr = sorted(rows.keys())
            cc = sorted(cols.keys())

            ans = 0
            for i in range(len(rr) - 1):
                ans = (ans + solve(rr[i + 1], col, count - 1)) % mod
            for i in range(len(cc) - 1):
                ans = (ans + solve(row, cc[i + 1], count - 1)) % mod
            
            cache[(row, col, count)] = ans
            return ans
            
        
        rs = solve(0, 0, k-1)
        # print(cache)
        return rs
