// https://leetcode.com/problems/cherry-pickup-ii

from itertools import product

class Solution:
    def cherryPickup(self, grid: List[List[int]]) -> int:
        rlen = len(grid)
        clen = len(grid[0])
        dp = [[[-1 for _ in range(clen)] for _ in range(clen)] for _ in range(rlen)]
        dirs = list(product([1,0,-1], [1,0,-1]))

        
        def solve(a, b, row):
            if not (row < rlen and 0 <= a < clen and 0 <= b < clen):
                return 0
            if dp[row][a][b] != -1:
                return dp[row][a][b]
            
            aVal = grid[row][a]
            bVal = grid[row][b] if a != b else 0
            best = 0
            for aMove, bMove in dirs:
                res = aVal + bVal + solve(a + aMove, b + bMove, row + 1)
                best = max(best, res)
            dp[row][a][b] = best
            return best
        
        return solve(0, clen - 1, 0)
                   