{"id":432527191,"lang":"python3","time":"6 months, 1 week","timestamp":1608446081,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/432527191/","is_pending":"Not Pending","title":"Cherry Pickup II","memory":"N/A","code":"from itertools import product\nfrom functools import lru_cache\n\nclass Solution:\n    def cherryPickup(self, grid: List[List[int]]) -> int:\n        rlen = len(grid)\n        clen = len(grid[0])\n        dirs = list(product([1,0,-1], [1,0,-1]))\n\n        \n        @lru_cache\n        def solve(a, b, row):\n            if not (row < rlen and 0 <= a < clen and 0 <= b < clen):\n                return 0\n            \n            aVal = grid[row][a]\n            bVal = grid[row][b] if a != b else 0\n            best = 0\n            for aMove, bMove in dirs:\n                res = aVal + bVal + solve(a + aMove, b + bMove, row + 1)\n                best = max(best, res)\n            return best\n        \n        return solve(0, clen - 1, 0)\n                   ","compare_result":"1111111111111111111111111111100000000000000000000000000000","title_slug":"cherry-pickup-ii"}