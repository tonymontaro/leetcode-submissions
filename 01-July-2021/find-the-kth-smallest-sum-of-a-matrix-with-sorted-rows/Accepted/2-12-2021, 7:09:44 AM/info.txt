{"id":455088013,"lang":"python3","time":"4 months, 2 weeks","timestamp":1613110184,"status_display":"Accepted","runtime":"136 ms","url":"/submissions/detail/455088013/","is_pending":"Not Pending","title":"Find the Kth Smallest Sum of a Matrix With Sorted Rows","memory":"17.1 MB","code":"from heapq import heappush, heappop\n\nclass Solution:\n    def kthSmallest(self, mat: List[List[int]], k: int) -> int:\n        rlen, clen = len(mat), len(mat[0])\n        sm = sum(x[0] for x in mat)\n        first = [sm] + [0] * rlen\n        first = tuple(first)\n        seen = {}\n        seen[first] = 1\n        heap = [first]\n        cnt = 0\n        while heap:\n            node = heappop(heap)\n            cnt += 1\n            if cnt == k:\n                return node[0]\n            for r in range(rlen):\n                c = node[r + 1]\n                if c >= clen-1:\n                    continue\n                ls = list(node)\n                ls[0] -= mat[r][c]\n                ls[0] += mat[r][c+1]\n                ls[r + 1] = c + 1\n                ls = tuple(ls)\n                # print(node, ls, r, c)\n                if ls in seen:\n                    continue\n                seen[ls] = 1\n                heappush(heap, ls)\n                \n            \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows"}