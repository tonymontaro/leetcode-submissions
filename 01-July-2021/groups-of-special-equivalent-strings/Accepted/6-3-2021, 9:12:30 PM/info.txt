{"id":502593712,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1622751150,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/502593712/","is_pending":"Not Pending","title":"Groups of Special-Equivalent Strings","memory":"8.4 MB","code":"\nclass Solution {\npublic:\n    int even[1000][26];\n    int odd[1000][26];\n    int numSpecialEquivGroups(vector<string>& words) {\n        memset(even, 0, sizeof(even));\n        memset(odd, 0, sizeof(odd));\n        for (int i = 0; i < words.size(); i++) {\n            for (int j = 0; j < words[i].size(); j++) {\n                char c = words[i][j];\n                if (j % 2 == 0) even[i][c - 'a']++;\n                else odd[i][c - 'a']++;\n            }\n        }\n        int seen[1000] = {0}; int ans = 0;\n        for (int i = 0; i < words.size(); i++) {\n            if (seen[i]) continue;\n            ans++;\n            for (int j = i + 1; j < words.size(); j++) {\n                if (seen[j]) continue;\n                if (isSame(words[i], words[j], i, j)) {\n                    seen[j] = 1;\n                }\n            }\n        }\n        return ans;\n    }\n    bool isSame(string& a, string& b, int x, int y) {\n        for (int i = 0; i < 26; i++) {\n            if (even[x][i] != even[y][i]) return false;\n            if (odd[x][i] != odd[y][i]) return false;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"groups-of-special-equivalent-strings"}