{"id":444948100,"lang":"java","time":"5 months, 1 week","timestamp":1611040037,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/444948100/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"N/A","code":"class Solution {\n    public boolean makesquare(int[] nums) {\n        if (nums.length == 0) return false;\n        int total = sum(nums);\n        if (total % 4 != 0) return false;\n        int quarter = total / 4;\n\n        for (int i = 0; i < 3; i++) {\n            boolean[] seen = new boolean[nums.length];\n            if (!solve(0, quarter, nums, seen)) return false;\n            List<Integer> remaining = new ArrayList<>();\n            for (int j = 0; j < nums.length; j++) if (!seen[j]) remaining.add(nums[j]);\n            int[] nNums = new int[remaining.size()];\n            for (int j = 0; j < remaining.size(); j++) nNums[j] = remaining.get(j);\n            nums = nNums;\n        }\n\n        return sum(nums) == quarter;\n    }\n\n    public boolean solve(int idx, int total, int[] nums, boolean[] seen) {\n        int tt = 1 << nums.length;\n        for (int i = 0; i < tt; i++) {\n            int res = 0;\n            for (int j = 0; j < nums.length; j++) {\n                if (((1 << j) & i) != 0) res += nums[j];\n            }\n            if (res == total) {\n                for (int j = 0; j < 32; j++) {\n                    if (((1 << j) & i) != 0) seen[j] = true;\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    private static int sum(int... ins){ int total = 0; for (int v : ins) { total += v; } return total; }\n}","compare_result":"111011111101011111111111011111111111101111111111111111101111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111110111101111111111","title_slug":"matchsticks-to-square"}