{"id":404270080,"lang":"java","time":"9Â months","timestamp":1601792585,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/404270080/","is_pending":"Not Pending","title":"Relative Sort Array","memory":"38.8 MB","code":"class Solution {\n    public int[] relativeSortArray(int[] arr1, int[] arr2) {\n        HashSet<Integer> set = new HashSet<>();\n        for (int num: arr2) set.add(num);\n        List<Integer> other = new ArrayList<>();\n        HashMap<Integer, Integer> count = new HashMap<>();\n        for (int num : arr1) {\n            if (set.contains(num)) count.merge(num, 1, Integer::sum);\n            else other.add(num);\n        }\n        Collections.sort(other);\n        int[] res = new int[arr1.length];\n        int idx = 0;\n        for (int num : arr2) {\n            for (int i = 0; i < count.get(num); i++) res[idx++] = num;\n        }\n        for (int num: other) res[idx++] = num;\n        return res;\n    }\n}","compare_result":"1111111111111111","title_slug":"relative-sort-array"}