{"id":443517716,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610768093,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/443517716/","is_pending":"Not Pending","title":"Shortest Path Visiting All Nodes","memory":"N/A","code":"from collections import deque\n\nclass Solution:\n    def shortestPathLength(self, graph: List[List[int]]) -> int:\n        n = len(graph)\n        deq = deque()\n        containsAll = 0\n        for i in range(n):\n            mask = 1 << i\n            containsAll = containsAll | mask\n            deq.append((mask, 0, i))\n        \n        while deq:\n            mask, dist, last = deq.popleft()\n            if mask == containsAll:\n                return dist\n            for child in graph[last]:\n                nMask = mask | (1 << child)\n                deq.append((nMask, dist + 1, child))\n            ","compare_result":"1111111111111111111111111111111111111111000000","title_slug":"shortest-path-visiting-all-nodes"}