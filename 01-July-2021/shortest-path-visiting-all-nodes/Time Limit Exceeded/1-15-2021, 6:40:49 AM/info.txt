{"id":443177133,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610689249,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/443177133/","is_pending":"Not Pending","title":"Shortest Path Visiting All Nodes","memory":"N/A","code":"from collections import deque\n\nclass Solution:\n    def shortestPathLength(self, graph: List[List[int]]) -> int:\n        n = len(graph)\n        deq = deque()\n        for i in range(n):\n            deq.append(({i,}, 0, i))\n        \n        while deq:\n            st, dist, last = deq.popleft()\n            if len(st) == n:\n                return dist\n            for child in graph[last]:\n                if child not in st:\n                    ss = set(st)\n                    ss.add(child)\n                    deq.append((ss, dist + 1, child))\n                else:\n                    deq.append((st, dist + 1, child))\n            ","compare_result":"1111111111111111111111111111111111111100000000","title_slug":"shortest-path-visiting-all-nodes"}