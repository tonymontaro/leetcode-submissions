{"id":443518429,"lang":"python3","time":"5 months, 2 weeks","timestamp":1610768252,"status_display":"Accepted","runtime":"828 ms","url":"/submissions/detail/443518429/","is_pending":"Not Pending","title":"Shortest Path Visiting All Nodes","memory":"62.4 MB","code":"from collections import deque\n\nclass Solution:\n    def shortestPathLength(self, graph: List[List[int]]) -> int:\n        n = len(graph)\n        deq = deque()\n        containsAll = 0\n        for i in range(n):\n            mask = 1 << i\n            containsAll = containsAll | mask\n            deq.append((mask, 0, i))\n        cache = {}\n        \n        while deq:\n            mask, dist, last = deq.popleft()\n            if (mask, dist, last) in cache:\n                continue\n            cache[(mask, dist, last)] = 1\n            if mask == containsAll:\n                return dist\n            for child in graph[last]:\n                nMask = mask | (1 << child)\n                deq.append((nMask, dist + 1, child))\n            ","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"shortest-path-visiting-all-nodes"}