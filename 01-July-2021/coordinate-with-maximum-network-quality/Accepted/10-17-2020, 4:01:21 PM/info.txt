{"id":409837111,"lang":"python3","time":"8 months, 2 weeks","timestamp":1602946881,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/409837111/","is_pending":"Not Pending","title":"Coordinate With Maximum Network Quality","memory":"14.1 MB","code":"import math\n\nclass Solution:\n    def bestCoordinate(self, towers: List[List[int]], radius: int) -> List[int]:\n        ans = None\n        towers.sort()\n        n = len(towers)\n        for i, ar in enumerate(towers):\n            x1, y1, q1 = ar\n            calc = 0\n            for j, ar2 in enumerate(towers):\n                x2, y2, q2 = ar2\n                dist = abs(x1 - x2)**2 + abs(y1 - y2)**2\n                dist = math.sqrt(dist)\n                if dist > radius: continue\n                calc += math.floor(q2 / (1 + dist))\n                # print(x1, y1, x2, y2, calc)\n\n            if ans is None or calc > ans[0]:\n                ans = [calc, [x1, y1]]\n        # print(ans)\n        return ans[1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coordinate-with-maximum-network-quality"}