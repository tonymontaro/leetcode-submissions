{"id":458216559,"lang":"python3","time":"4 months, 1 week","timestamp":1613794843,"status_display":"Accepted","runtime":"264 ms","url":"/submissions/detail/458216559/","is_pending":"Not Pending","title":"Heaters","memory":"18 MB","code":"class Solution:\n    def findRadius(self, houses: List[int], heaters: List[int]) -> int:\n        houses.sort()\n        heaters.sort()\n        idx = 0\n        ans = 0\n        for house in houses:\n            while idx + 1 < len(heaters) and (abs(house - heaters[idx]) >= abs(house - heaters[idx + 1])):\n                idx += 1\n            diff = abs(house - heaters[idx])\n            ans = max(ans, diff)\n        return ans","compare_result":"111111111111111111111111111111","title_slug":"heaters"}