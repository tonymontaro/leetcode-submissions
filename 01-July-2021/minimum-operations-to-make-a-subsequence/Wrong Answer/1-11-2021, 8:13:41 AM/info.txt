{"id":441502791,"lang":"python3","time":"5Â months, 2Â weeks","timestamp":1610349221,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/441502791/","is_pending":"Not Pending","title":"Minimum Operations to Make a Subsequence","memory":"N/A","code":"class Solution:\n    def minOperations(self, target: List[int], arr: List[int]) -> int:\n        prevs = {}\n        n = len(target)\n        for i in range(n - 1, 0, -1):\n            prevs[target[i]] = target[i - 1]\n        prevs[target[0]] = -1\n        \n        seen = {}\n        ans = n\n        for num in arr:\n            if num not in prevs:\n                continue\n            prev = prevs[num]\n            seen[num] = seen.get(prev, 0) + 1\n            ans = min(ans, n - seen[num])\n        return ans","compare_result":"1101100010000110011110000000000001000000100000000000000000000000000000000000000000","title_slug":"minimum-operations-to-make-a-subsequence"}