{"id":455761857,"lang":"python3","time":"4Â months, 2Â weeks","timestamp":1613272194,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/455761857/","is_pending":"Not Pending","title":"Minimum Degree of a Connected Trio in a Graph","memory":"N/A","code":"class Solution:\n    def minTrioDegree(self, n: int, edges: List[List[int]]) -> int:\n        adj = [set() for _ in range(n + 1)]\n        for a, b in edges:\n            adj[a].add(b)\n            adj[b].add(a)\n        \n        def inDegree(a, b, c):\n            return len(adj[a]) + len(adj[b]) + len(adj[c]) - 6\n        \n        ans = inf\n        for a in range(1, n + 1):\n            for b in adj[a]:\n                if b < a:\n                    continue\n                for c in adj[b]:\n                    if c > b and c in adj[a]:\n                        ans = min(ans, inDegree(a, b, c))\n                        if ans == 0:\n                            return ans\n        return ans","compare_result":"11100111111111011111111111111111111111111111101111111111111010011100","title_slug":"minimum-degree-of-a-connected-trio-in-a-graph"}