{"id":414635544,"lang":"python3","time":"8Â months","timestamp":1603999139,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/414635544/","is_pending":"Not Pending","title":"Maximize Distance to Closest Person","memory":"14.6 MB","code":"class Solution:\n    def maxDistToClosest(self, seats: List[int]) -> int:\n        # O(n) time | O(1) space\n        n = len(seats)\n        lastSeated = None\n        ans = 0\n        for i, seat in enumerate(seats):\n            if seat == 1:\n                lastSeated = i\n            elif lastSeated is None:\n                ans = i + 1\n            elif i == n - 1:\n                ans = max(ans, n - lastSeated - 1)\n            else:\n                ans = max(ans, (i + 1 - lastSeated)//2)\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-distance-to-closest-person"}