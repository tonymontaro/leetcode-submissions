{"id":457422847,"lang":"python3","time":"4 months, 1 week","timestamp":1613619238,"status_display":"Accepted","runtime":"632 ms","url":"/submissions/detail/457422847/","is_pending":"Not Pending","title":"Minimum Time to Collect All Apples in a Tree","memory":"53.1 MB","code":"class Solution:\n    def minTime(self, n: int, edges: List[List[int]], hasApple: List[bool]) -> int:\n        adj = [[] for _ in range(n)]\n        for a, b in edges:\n            adj[a].append(b)\n            adj[b].append(a)\n        seen = {}\n        def solve(node):\n            # print(node)\n            seen[node] = 1\n            has = hasApple[node]\n            dist  = 0\n            for child in adj[node]:\n                if child not in seen:\n                    d, t = solve(child)\n                    if t:\n                        dist += d + 2\n                        has = True\n            return (dist, has)\n        return solve(0)[0]\n                        ","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"minimum-time-to-collect-all-apples-in-a-tree"}