{"id":405632060,"lang":"java","time":"8 months, 3 weeks","timestamp":1602059366,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/405632060/","is_pending":"Not Pending","title":"Rotate List","memory":"38.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n        if (head == null) return head;\n        int ln = 0;\n        ListNode last = null;\n        ListNode node = head;\n        while (node != null){\n            ln++;\n            last = node;\n            node = node.next;\n        }\n        if (k % ln == 0) return head;\n        k = k % ln;\n        int diff = ln - k;\n        node = head;\n        while (diff > 1){\n            node = node.next;\n            diff--;\n        }\n        last.next = head;\n        head = node.next;\n        node.next = null;\n        return head;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}