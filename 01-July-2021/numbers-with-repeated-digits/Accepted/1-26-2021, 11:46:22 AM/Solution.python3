// https://leetcode.com/problems/numbers-with-repeated-digits

from collections import defaultdict
from math import perm as npr

class Solution:
    def numDupDigitsAtMostN(self, num: int) -> int:
        nstr = str(num)
        n  = len(nstr)
        ans = 0
        
        for i in range(1, n):
            ans += 9 * npr(9, i - 1)
        
        seen = {}
        for i, digit in enumerate(nstr):
            digit = int(digit)
            
            start = 1 if i == 0 else 0
            for j in range(start, digit):
                if j in seen:
                    continue
                unplaced = 10 - (len(seen) + 1)
                choose = n - i - 1
                res = npr(unplaced, choose)
                ans += res

            if digit in seen:
                return num - ans
            seen[digit] = 1
        ans += 1
        return num - ans
                
    
    
    
            
        