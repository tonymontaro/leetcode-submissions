{"id":448004643,"lang":"python3","time":"5Â months","timestamp":1611650956,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/448004643/","is_pending":"Not Pending","title":"Numbers With Repeated Digits","memory":"N/A","code":"from collections import defaultdict\n\nclass Solution:\n    cache = {}\n    def numDupDigitsAtMostN(self, num: int) -> int:\n        \n        def get(digits, a, b):\n            if digits < 2:\n                return 0\n            if (digits, a, b) in self.cache:\n                return self.cache[(digits, a, b)]\n\n            prev = 9\n            for _ in range(digits - 1):\n                a *= prev\n                prev -= 1\n                b *= 10\n            self.cache[(digits, a, b)] = b - a\n            return b - a\n        \n        def getSeen(digits, seen):\n            prev = 10 - sum([seen[x] > 0 for x in range(10)])\n            # if (digits, prev) in self.cache:\n            #     return self.cache[(digits, prev)]\n            a = b = 1\n            for _ in range(digits - 1):\n                a *= prev\n                prev -= 1\n                b *= 10\n            self.cache[(digits, prev)] = b - a\n            # print(digits, prev, b - a)\n            return b - a\n            \n        \n        nstr = str(num)\n        n = len(nstr)\n        ans = 0\n        for i in range(2, n):\n            ans += get(i, 9, 9)\n        \n        digit = int(nstr[0])\n        ans += (digit - 1) * get(n, 1, 1)\n        seen = defaultdict(int)\n        seen[digit] += 1\n        # print(ans, '===')\n        for i in range(1, n):\n            digit = int(nstr[i])\n            for j in range(digit):\n                if seen[j] > 0:\n                    # print(10 ** (n - i - 1))\n                    ans += 10 ** (n - i - 1)\n                else:\n                    seen[j] += 1\n                    ans += getSeen(n - i, seen)\n                    seen[j] -= 1\n            seen[digit] += 1\n\n        if len(set(nstr)) < n:\n            ans += 1\n        return ans\n            \n        ","compare_result":"111111111111111111111111111111111111111110001111111111111111111111110101011100010010111100010000100011111000100001000000000000000","title_slug":"numbers-with-repeated-digits"}