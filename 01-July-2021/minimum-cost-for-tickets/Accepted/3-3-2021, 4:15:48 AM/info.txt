{"id":462837570,"lang":"python3","time":"4Â months","timestamp":1614741348,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/462837570/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"14 MB","code":"class Solution:\n    def mincostTickets(self, days: List[int], costs: List[int]) -> int:\n        n = len(days)\n        mx = max(days)\n        days = set(days)\n        dp = [0] * (mx + 1)\n        for day in range(1, mx + 1):\n            if day not in days:\n                dp[day] = dp[day-1]\n                continue\n            cost = dp[day-1] + costs[0]\n            for diff, c in [(7, 1), (30, 2)]:\n                if day - diff < 0:\n                    cost = min(cost, costs[c])\n                else:\n                    cost = min(cost, dp[day - diff] + costs[c])\n            dp[day] = cost\n\n        return dp[-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets"}