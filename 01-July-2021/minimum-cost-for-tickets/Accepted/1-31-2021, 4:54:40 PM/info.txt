{"id":450174478,"lang":"python3","time":"5Â months","timestamp":1612108480,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/450174478/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"14.5 MB","code":"from math import inf\n\nclass Solution:\n    def mincostTickets(self, days: List[int], costs: List[int]) -> int:\n        # O(n) time and space\n        passes = [1, 7, 30]\n        mx = days[-1]\n        dp = [inf] * (mx + 1)\n        dp[0] = 0\n        days = set(days)\n        for d in range(1, mx + 1):\n            if d not in days:\n                dp[d] = dp[d-1]\n                continue\n            \n            for i, daysCoverd in enumerate(passes):\n                prev = max(0, d - daysCoverd)\n                dp[d] = min(dp[d], dp[prev] + costs[i])\n\n        return dp[-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets"}