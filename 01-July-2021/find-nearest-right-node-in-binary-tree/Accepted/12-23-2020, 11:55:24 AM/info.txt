{"id":433680558,"lang":"python3","time":"6 months, 1 week","timestamp":1608720924,"status_display":"Accepted","runtime":"292 ms","url":"/submissions/detail/433680558/","is_pending":"Not Pending","title":"Find Nearest Right Node in Binary Tree","memory":"52.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def findNearestRightNode(self, root: TreeNode, target: TreeNode) -> TreeNode:\n        arr = [root]\n        while arr:\n            newArr = []\n            n = len(arr)\n            for i in range(n):\n                node = arr[i]\n                if node is target:\n                    return arr[i + 1] if i + 1 < n else None\n                if node.left:\n                    newArr.append(node.left)\n                if node.right:\n                    newArr.append(node.right)\n            arr = newArr\n        return None","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-nearest-right-node-in-binary-tree"}