{"id":414947757,"lang":"python3","time":"8Â months","timestamp":1604076114,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/414947757/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        # brute-force O(n^2), can we do better?\n        if not nums:\n            return 0\n        \n        n = len(nums)\n        best = nums[0]\n        for i, num in enumerate(nums):\n            total = num\n            best = max(best, total)\n            for j in range(i + 1, n):\n                total *= nums[j]\n                best = max(best, total)\n        return best","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"maximum-product-subarray"}