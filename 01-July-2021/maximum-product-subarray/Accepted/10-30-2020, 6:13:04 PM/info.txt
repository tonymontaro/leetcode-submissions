{"id":414955634,"lang":"python3","time":"8Â months","timestamp":1604077984,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/414955634/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"14.4 MB","code":"from math import inf\n\nclass Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        # O(n) time and O(1) space\n        if not nums:\n            return 0\n    \n        best = nums[0]\n        minNum = best\n        maxNum = best\n        for i in range(1, len(nums)):\n            num = nums[i]\n            arr = [num, num * minNum, num * maxNum]\n            minNum = min(arr)\n            maxNum = max(arr)\n            best = max(best, maxNum)\n        return best","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}