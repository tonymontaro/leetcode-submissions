{"id":302755894,"lang":"python3","time":"1 year, 4 months","timestamp":1581546767,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/302755894/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"14.1 MB","code":"class Solution:\n    def maxProduct(self, nums) -> int:\n        \"\"\"O(n) time and space\"\"\"\n        if not nums: return None\n        maxs = [None] * len(nums)\n        mins = [None] * len(nums)\n        maxs[0] = nums[0]\n        mins[0] = nums[0]\n        max_value = nums[0]\n        for i in range(1, len(nums)):\n            values = [nums[i], nums[i]*maxs[i-1], nums[i]*mins[i-1]]\n            maxs[i] = max(values)\n            mins[i] = min(values)\n            max_value = max(max_value, maxs[i])\n        return max_value","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}