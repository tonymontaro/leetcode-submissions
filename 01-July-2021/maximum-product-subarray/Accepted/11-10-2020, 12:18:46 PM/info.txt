{"id":418801999,"lang":"python3","time":"7Â months, 3Â weeks","timestamp":1605007126,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/418801999/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"14.3 MB","code":"from math import inf\n\nclass Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        # O(n) time and O(1) space\n        if not nums:\n            return 0\n    \n        ans = nums[0]\n        mx = mn = ans\n        for i in range(1, len(nums)):\n            num = nums[i]\n            arr = [num, num * mx, num * mn]\n            mx = max(arr)\n            mn = min(arr)\n            ans = max(ans, mx)\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}