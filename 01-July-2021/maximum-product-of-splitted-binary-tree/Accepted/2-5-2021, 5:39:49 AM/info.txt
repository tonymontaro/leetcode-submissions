{"id":452222831,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612499989,"status_display":"Accepted","runtime":"408 ms","url":"/submissions/detail/452222831/","is_pending":"Not Pending","title":"Maximum Product of Splitted Binary Tree","memory":"81.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom math import inf\n\nclass Solution:\n    def maxProduct(self, root: TreeNode) -> int:\n        def totalSum(node):\n            if not node:\n                return 0\n            return node.val + totalSum(node.left) + totalSum(node.right)\n        total = totalSum(root)\n        \n        self.ans = (inf, 0, 0)\n        def solve(node):\n            if not node:\n                return 0\n            left = solve(node.left)\n            right = solve(node.right)\n            for a in [left, right]:\n                b = total - a\n                if abs(b - a) < self.ans[0]:\n                    self.ans = (abs(b - a), a, b)\n            return node.val + left + right\n\n        solve(root)\n        diff, a, b = self.ans\n        return (a * b) % (10**9 + 7)","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-splitted-binary-tree"}