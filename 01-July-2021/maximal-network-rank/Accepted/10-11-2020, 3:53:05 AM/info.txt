{"id":407165791,"lang":"java","time":"8 months, 3 weeks","timestamp":1602384785,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/407165791/","is_pending":"Not Pending","title":"Maximal Network Rank","memory":"40.2 MB","code":"class Solution {\n    int best;\n    HashSet<Integer>[] aj;\n    public int maximalNetworkRank(int n, int[][] roads) {\n        best = 0;\n        aj = new HashSet[n];\n        for (int i = 0; i < n; i++) aj[i] = new HashSet<>();\n        for (int[] r : roads) {\n            aj[r[0]].add(r[1]);\n            aj[r[1]].add(r[0]);\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int sz = aj[i].size() + aj[j].size();\n                if (aj[i].contains(j)) sz--;\n                best = Math.max(best, sz);\n            }\n        }\n        return best;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-network-rank"}