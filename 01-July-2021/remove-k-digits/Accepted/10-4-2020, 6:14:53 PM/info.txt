{"id":404445737,"lang":"java","time":"8 months, 4 weeks","timestamp":1601831693,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/404445737/","is_pending":"Not Pending","title":"Remove K Digits","memory":"39.2 MB","code":"class Solution {\n    public String removeKdigits(String seq, int k) {\n        int n = seq.length();\n        if (k >= n) return \"0\";\n        HashMap<Integer, Deque<Integer>> nums = new HashMap<>();\n        for (int i = 0; i < 10; i++) nums.put(i, new ArrayDeque<>());\n        for (int i = 0; i < n; i++) {\n            int num = seq.charAt(i) - '0';\n            nums.get(num).add(i);\n        }\n//        out.println(nums);\n        int idx = 0;\n        int toSelect = n - k;\n        StringBuilder res = new StringBuilder();\n        while (k > 0 && toSelect > 0) {\n            for (int i = 0; i < 10; i++) {\n                if (!nums.containsKey(i) || nums.get(i).isEmpty()) continue;\n                Deque<Integer> deque = nums.get(i);\n                while (!deque.isEmpty() && deque.peekFirst() < idx) deque.pollFirst();\n                Integer id = deque.peekFirst();\n                if (id == null || id - idx > k) continue;\n                res.append(i);\n                k -= id - idx;\n                idx = id + 1;\n                toSelect -= 1;\n                break;\n            }\n        }\n        if (toSelect > 0) res.append(seq.substring(idx));\n        idx = 0;\n        while (idx < res.length() && res.charAt(idx) == '0') idx++;\n        int ln = res.substring(idx).length();\n        return ln == 0 ? \"0\" : res.substring(idx);\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"remove-k-digits"}