{"id":481738471,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1618669641,"status_display":"Accepted","runtime":"1104 ms","url":"/submissions/detail/481738471/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"291.6 MB","code":"class Solution {\npublic:\n    int numSubmatrixSumTarget(vector<vector<int>>& grid, int target) {\n        int rlen = grid.size(), clen = grid[0].size();\n        int ans = 0;\n        for (int rows = 1; rows < rlen + 1; rows++) {\n            int arr[clen + 1];\n            memset(arr, 0, sizeof(arr));\n            for (int r = 0; r < rows - 1; r++)\n                for (int c = 0; c < clen; c++)\n                    arr[c + 1] += grid[r][c];\n            int top = 0;\n            for (int r = rows - 1; r < rlen; r++) {\n                map<int, int> seen;\n                seen[0] = 1;\n                int presum = 0;\n                for (int c = 0; c < clen; c++) {\n                    arr[c + 1] += grid[r][c];\n                    presum += arr[c + 1];\n                    ans += seen[presum - target];\n                    seen[presum]++;\n                    arr[c + 1] -= grid[top][c];\n                }\n                top++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-submatrices-that-sum-to-target"}