// https://leetcode.com/problems/beautiful-arrangement

class Solution:
    cache = {}
    def countArrangement(self, n: int) -> int:
        vals = {i: 1 for i in range(1, n + 1)}
        
        def solve(i, vals):
            if i > n:
                return 1
            rep = f'{i}-{str(vals)}'
            if rep in self.cache:
                return self.cache[rep]

            ans = 0
            for num, count in vals.items():
                if count > 0 and (i % num == 0 or num % i == 0):
                    vals[num] -= 1
                    ans += solve(i + 1, vals)
                    vals[num] += 1
            
            self.cache[rep] = ans
            return ans
        
        return solve(1, vals)