{"id":402547577,"lang":"java","time":"9Â months","timestamp":1601442353,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/402547577/","is_pending":"Not Pending","title":"Product of the Last K Numbers","memory":"63.4 MB","code":" class ProductOfNumbers {\n        List<Integer> prefix;\n        int n = 0;\n        int lastZero = -1;\n        public ProductOfNumbers() {\n            prefix = new ArrayList<>();\n            prefix.add(1);\n        }\n\n        public void add(int num) {\n            if (lastZero == n)\n                prefix.add(num);\n            else\n                prefix.add(prefix.get(n) * num);\n            n++;\n            if (num == 0)\n                lastZero = n;\n        }\n\n        public int getProduct(int k) {\n            int last = n - k;\n            if (lastZero > last) return 0;\n            int divisor = prefix.get(last);\n            if (last == lastZero) divisor = 1;\n            return prefix.get(n) / divisor;\n        }\n    }\n\n/**\n * Your ProductOfNumbers object will be instantiated and called as such:\n * ProductOfNumbers obj = new ProductOfNumbers();\n * obj.add(num);\n * int param_2 = obj.getProduct(k);\n */","compare_result":"111111111111111111111111111111111","title_slug":"product-of-the-last-k-numbers"}