{"id":450049827,"lang":"python3","time":"5Â months","timestamp":1612078691,"status_display":"Accepted","runtime":"908 ms","url":"/submissions/detail/450049827/","is_pending":"Not Pending","title":"Minimize Deviation in Array","memory":"26.4 MB","code":"from heapq import heappush, heappop, heapify\n\nclass Solution:\n    def minimumDeviation(self, heap: List[int]) -> int:\n        for i, num in enumerate(heap):\n            heap[i] = -num if num % 2 == 0 else -(num*2)\n        heapify(heap)\n        mn = max(heap)\n        ans = mn - heap[0]\n        \n        while heap[0] % 2 == 0:\n            num = heappop(heap)\n            num //= 2\n            mn = max(mn, num)\n            heappush(heap, num)\n            ans = min(mn - heap[0], ans)\n\n        return ans","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimize-deviation-in-array"}