{"id":453842351,"lang":"python3","time":"4Â months, 3Â weeks","timestamp":1612837441,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/453842351/","is_pending":"Not Pending","title":"Degree of an Array","memory":"15.4 MB","code":"from math import inf\n\nclass Solution:\n    def findShortestSubArray(self, nums: List[int]) -> int:\n        seen = {}\n        degree = 0\n        for i, num in enumerate(nums):\n            if num not in seen:\n                seen[num] = [i, 0, 0]\n            seen[num][1] = i - seen[num][0] + 1\n            seen[num][2] += 1\n            degree = max(degree, seen[num][2])\n        \n        ans = inf\n        for k in seen.keys():\n            if seen[k][2] == degree:\n                ans = min(ans, seen[k][1])\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"degree-of-an-array"}