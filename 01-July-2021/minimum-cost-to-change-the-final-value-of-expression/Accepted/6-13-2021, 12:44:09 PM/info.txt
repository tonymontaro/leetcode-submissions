{"id":507289805,"lang":"cpp","time":"2 weeks, 3 days","timestamp":1623584649,"status_display":"Accepted","runtime":"512 ms","url":"/submissions/detail/507289805/","is_pending":"Not Pending","title":"Minimum Cost to Change the Final Value of Expression","memory":"190.6 MB","code":"#define umap unordered_map\n#define uset unordered_set\n\n#define pi pair<ll, ll>\n#define pii pair<ll, pi>\n#define v vector\n#define ll long long\n\nclass Solution {\npublic:\n    map<int, int> brackets;\n    int minOperationsToFlip(string e) {\n        stack<int> st;\n        for (int i = 0; i < e.size(); i++) {\n            if (e[i] == '(') st.push(i);\n            if (e[i] == ')') {\n                brackets[i] = st.top();\n                st.pop();\n            }\n        }\n        auto rs = solve(0, e.size() - 1, e);\n        return rs[1];\n    }\n    v<int> solve(int l, int r, string& e) { // eval, flipCost\n        if (l == r) return {e[l] - '0', 1};\n        int start = brackets.find(r) != brackets.end() ? brackets[r] : r;\n        if (l == start) return solve(l + 1, r - 1, e);\n        int mid = start - 1;\n        auto left = solve(l, mid - 1, e);\n        auto right = solve(mid + 1, r, e);\n        int lNum = left[0], lCost = left[1];\n        int rNum = right[0], rCost = right[1];\n        int val = e[mid] == '|' ? (lNum | rNum) : (lNum & rNum);\n        if ((lNum ^ rNum) == 1) return {val, 1};\n        int minCost = min(lCost, rCost);\n        if (e[mid] == '&') {\n            return {val, (lNum == 1) ? minCost : 1 + minCost};\n        } else {\n            return {val, (lNum == 0) ? minCost : 1 + minCost};\n        }\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-change-the-final-value-of-expression"}