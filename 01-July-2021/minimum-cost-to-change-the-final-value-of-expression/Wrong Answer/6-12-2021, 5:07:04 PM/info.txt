{"id":506882982,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1623514024,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/506882982/","is_pending":"Not Pending","title":"Minimum Cost to Change the Final Value of Expression","memory":"N/A","code":"#define umap unordered_map\n#define uset unordered_set\n\n#define pi pair<ll, ll>\n#define pii pair<ll, pi>\n#define v vector\n#define ll long long\n\nclass Solution {\npublic:\n    map<int, int> brackets;\n    int minOperationsToFlip(string e) {\n        stack<int> st;\n        for (int i = 0; i < e.size(); i++) {\n            if (e[i] == '(') st.push(i);\n            if (e[i] == ')') {\n                brackets[st.top()] = i;\n                st.pop();\n            }\n        }\n        auto rs = solve(0, e.size() - 1, e);\n        return rs[1];\n    }\n    v<int> solve(int l, int r, string& e) { // eval, flipCost, lastIdx\n        v<int> left; int i = l; int flip;\n        if (e[l] == '(') {\n            left = solve(l + 1, brackets[l] - 1, e);\n            i = brackets[l] + 1;\n        } else {\n            left = {e[i] - '0', 1, 0};\n        }\n//        print3(i, e[i], 0);\n\n        while (i <= r) {\n            if (e[i] == '0' || e[i] == '1') {\n                i++; continue;\n            }\n            v<int> right;\n            if (e[i + 1] == '(') right = solve(i + 2, brackets[i + 1] - 1, e);\n            else right = {e[i + 1] - '0', 1, i + 2};\n            int ans = 0;\n            if (e[i] == '&') {\n                ans = left[0] & right[0];\n                flip = INT_MAX;\n                if ((left[0] | right[0]) != ans) flip = 1;\n                if (((left[0] ^ 1) & right[0]) != ans) flip = min(flip, left[1]);\n                if ((left[0] & (right[0] ^ 1)) != ans) flip = min(flip, right[1]);\n                if (((left[0] ^ 1) | right[0]) != ans) flip = min(flip, left[1] + 1);\n                if ((left[0] | (right[0] ^ 1)) != ans) flip = min(flip, right[1] + 1);\n                if (((left[0] ^ 1) | (right[0] ^ 1)) != ans) flip = min(flip, right[1]  + left[1] + 1);\n            }\n            if (e[i] == '|') {\n                ans = left[0] | right[0];\n                flip = INT_MAX;\n                if ((left[0] & right[0]) != ans) flip = 1;\n                if (((left[0] ^ 1) | right[0]) != ans) flip = min(flip, left[1]);\n                if ((left[0] | (right[0] ^ 1)) != ans) flip = min(flip, right[1]);\n                if (((left[0] ^ 1) & right[0]) != ans) flip = min(flip, left[1] + 1);\n                if ((left[0] & (right[0] ^ 1)) != ans) flip = min(flip, right[1] + 1);\n                if (((left[0] ^ 1) & (right[0] ^ 1)) != ans) flip = min(flip, right[1]  + left[1] + 1);\n            }\n            left = {ans, flip, 0};\n            i = right[2];\n        }\n//        cout << l << \" \" << r << ' ' << left[0] << \" \" << left[1] << ' ' << i << endl;\n        return {left[0], left[1], i};\n    }\n};","compare_result":"1111110101101101011110101110010011011001111111111111111000000101011111","title_slug":"minimum-cost-to-change-the-final-value-of-expression"}