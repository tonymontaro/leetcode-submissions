// https://leetcode.com/problems/longest-harmonious-subsequence

from collections import Counter

class Solution:
    def findLHS(self, nums: List[int]) -> int:
        # O(n) time and space
        counts = Counter(nums)
        ans = 0
        for k in counts.keys():
            if k + 1 in counts:
                ans = max(ans, counts[k] + counts[k+1])
        return ans
