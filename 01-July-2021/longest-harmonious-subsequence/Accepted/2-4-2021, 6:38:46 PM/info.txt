{"id":452017790,"lang":"python3","time":"4Â months, 3Â weeks","timestamp":1612460326,"status_display":"Accepted","runtime":"364 ms","url":"/submissions/detail/452017790/","is_pending":"Not Pending","title":"Longest Harmonious Subsequence","memory":"15.8 MB","code":"from collections import Counter\n\nclass Solution:\n    def findLHS(self, nums: List[int]) -> int:\n        # O(n) time and space\n        counts = Counter(nums)\n        ans = 0\n        for k in counts.keys():\n            if k + 1 in counts:\n                ans = max(ans, counts[k] + counts[k+1])\n        return ans\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-harmonious-subsequence"}