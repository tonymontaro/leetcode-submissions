{"id":414214150,"lang":"python3","time":"8Â months","timestamp":1603905076,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/414214150/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def diameterOfBinaryTree(self, root: TreeNode) -> int:\n        self.diameter = 0\n    \n        def dfs(node):\n            if not node:\n                return 0\n            left = dfs(node.left)\n            right = dfs(node.right)\n            self.diameter = max(self.diameter, left + right)\n            return 1 + max(left, right)\n        dfs(root)\n        return self.diameter","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}