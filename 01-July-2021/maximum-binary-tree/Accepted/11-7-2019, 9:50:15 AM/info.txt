{"id":276757201,"lang":"python","time":"1 year, 7 months","timestamp":1573116615,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/276757201/","is_pending":"Not Pending","title":"Maximum Binary Tree","memory":"12.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution(object):\n    def constructMaximumBinaryTree(self, nums):\n        \"\"\"O(N) time | O(1) space\"\"\"\n        stack = []\n        for num in nums:\n            last = None\n            num = TreeNode(num)\n            while stack and num.val > stack[-1].val:\n                last = stack.pop()\n            if last:\n                num.left = last\n            if stack:\n                stack[-1].right = num\n            stack.append(num)\n        return stack[0]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree"}