{"id":453477675,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612757985,"status_display":"Accepted","runtime":"224 ms","url":"/submissions/detail/453477675/","is_pending":"Not Pending","title":"Maximum Binary Tree","memory":"15.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def constructMaximumBinaryTree(self, nums: List[int]) -> TreeNode:\n        \n        def solve(lo, hi):\n            if lo > hi:\n                return None\n            mx = lo\n            for i in range(lo, hi + 1):\n                if nums[i] > nums[mx]:\n                    mx = i\n            return TreeNode(nums[mx], solve(lo, mx-1), solve(mx+1, hi))\n\n        return solve(0, len(nums)-1)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree"}