{"id":420208407,"lang":"python3","time":"7 months, 2 weeks","timestamp":1605372021,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/420208407/","is_pending":"Not Pending","title":"Design Underground System","memory":"25.3 MB","code":"class UndergroundSystem:\n\n    def __init__(self):\n        self.travel = {}\n        self.checkins = {}\n\n    def checkIn(self, id: int, stationName: str, t: int) -> None:\n        self.checkins[id] = (stationName, t)\n\n    def checkOut(self, id: int, stationName: str, t: int) -> None:\n        prevStation, prevTime = self.checkins[id]\n        time = t - prevTime\n        travel = (prevStation, stationName)\n        if travel not in self.travel:\n            self.travel[travel] = {\"count\": 0, \"time\": 0}\n        self.travel[travel][\"count\"] += 1\n        self.travel[travel][\"time\"] += time\n\n    def getAverageTime(self, startStation: str, endStation: str) -> float:\n        travel = (startStation, endStation)\n        return self.travel[travel][\"time\"] / self.travel[travel][\"count\"]\n\n\n# Your UndergroundSystem object will be instantiated and called as such:\n# obj = UndergroundSystem()\n# obj.checkIn(id,stationName,t)\n# obj.checkOut(id,stationName,t)\n# param_3 = obj.getAverageTime(startStation,endStation)","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"design-underground-system"}