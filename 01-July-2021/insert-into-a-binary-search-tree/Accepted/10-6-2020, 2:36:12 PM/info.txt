{"id":405265155,"lang":"java","time":"8 months, 3 weeks","timestamp":1601991372,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/405265155/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"39.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode insertIntoBST(TreeNode root, int val) {\n        if (root == null) return new TreeNode(val);\n        insert(root, val);\n        return root;\n    }\n    void insert(TreeNode node, int val){\n        if (val > node.val) {\n            if (node.right == null)\n                node.right = new TreeNode(val);\n            else\n                insert(node.right, val);\n        } else {\n            if (node.left == null)\n                node.left = new TreeNode(val);\n            else\n                insert(node.left, val);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}