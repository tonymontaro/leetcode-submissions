{"id":408656804,"lang":"python3","time":"8Â months, 2Â weeks","timestamp":1602686124,"status_display":"Accepted","runtime":"304 ms","url":"/submissions/detail/408656804/","is_pending":"Not Pending","title":"Encode String with Shortest Length","memory":"14.8 MB","code":"class Solution:\n    def encode(self, s: str) -> str:\n        self.dp = {}\n        return self.flatten(s)\n        \n    def flatten(self, seq):\n        if (seq not in self.dp):\n            n = len(seq)\n            repeatStart = (seq + seq).find(seq, 1)\n            repeatedSelf = f\"{n // repeatStart}[{self.flatten(seq[:repeatStart])}]\" if repeatStart < n else seq\n            # print(repeatStart, repeatedSelf)\n            allIndices = [self.flatten(seq[:i]) + self.flatten(seq[i:]) for i in range(1, n)]\n            best = min([seq, repeatedSelf] + allIndices, key=len)\n            self.dp[seq] = best\n        return self.dp[seq]\n        \n            ","compare_result":"1111111111111111111111111111111111111111","title_slug":"encode-string-with-shortest-length"}