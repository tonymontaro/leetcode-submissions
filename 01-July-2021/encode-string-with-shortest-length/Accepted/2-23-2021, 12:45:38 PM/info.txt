{"id":459674614,"lang":"python3","time":"4 months, 1 week","timestamp":1614080738,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/459674614/","is_pending":"Not Pending","title":"Encode String with Shortest Length","memory":"15.8 MB","code":"from functools import lru_cache\n\nclass Solution:\n    def encode(self, s: str) -> str:\n        \n        @lru_cache(None)\n        def solve(word):\n            n = len(word)\n            res = [word]\n            double = word + word\n            repetitionIdx = double[1:].find(word)\n            if repetitionIdx < n - 1:\n                sz = n // (repetitionIdx + 1)\n                res.append(f\"{str(sz)}[{solve(word[:repetitionIdx + 1])}]\")\n            \n            for i in range(1, n):\n                res.append(solve(word[:i]) + solve(word[i:]))\n            \n            mn = min(res, key=len)\n            return mn if len(mn) < len(word) else word\n        \n        return solve(s)","compare_result":"1111111111111111111111111111111111111111","title_slug":"encode-string-with-shortest-length"}