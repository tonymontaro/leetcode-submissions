{"id":419104840,"lang":"python3","time":"7 months, 3 weeks","timestamp":1605078371,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/419104840/","is_pending":"Not Pending","title":"Max Points on a Line","memory":"N/A","code":"from collections import defaultdict, Counter\n\nclass Solution:\n    def maxPoints(self, points: List[List[int]]) -> int:\n        # O(n^2) time and space\n        if not points:\n            return 0\n        \n        def getGcd(a, b):\n            if b == 0:\n                return a\n            return getGcd(b, a % b )\n        \n        points = [(a, b) for a, b in points]\n        pointCount = Counter(points)\n        # print(pointCount)\n        points = list(set(points))\n        n = len(points)\n        counts = defaultdict(set)\n        for i in range(n):\n            p1 = points[i]\n            for j in range(i + 1, n):\n                p2 = points[j]\n                a = p2[1] - p1[1]\n                b = p2[0] - p1[0]\n                # print(a, b)\n                sign = 1 if a * b >= 0 else -1\n                a, b = abs(a), abs(b)\n                if a != 0 and b != 0:\n                    gcd = getGcd(a, b)\n                    gradient = (sign * (a//gcd), b//gcd)\n                else:\n                    gradient = (a, b)\n                counts[gradient].add(i)\n                counts[gradient].add(j)\n        # print(counts)\n        if not counts:\n            return list(pointCount.values())[0]\n        values = [sum(pointCount[points[p]] for p in res) for res in counts.values()]\n        return max(values)\n        ","compare_result":"11111111110011111111110110110111101111111","title_slug":"max-points-on-a-line"}