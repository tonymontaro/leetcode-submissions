{"id":453198572,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612703349,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/453198572/","is_pending":"Not Pending","title":"Maximal Square","memory":"15.7 MB","code":"class Solution:\n    def maximalSquare(self, matrix: List[List[str]]) -> int:\n        # O(m * n) time | O(m*n) space\n        if not matrix or not matrix[0]:\n            return 0\n\n        rlen, clen = len(matrix), len(matrix[0])\n        dp = [[0 for _ in range(clen + 1)] for _ in range(rlen + 1)]\n        ans = 0\n        for r in range(1, rlen + 1):\n            row = matrix[r - 1]\n            for c, cha in enumerate(row):\n                if cha == '0':\n                    continue\n                dp[r][c] = 1 + min(dp[r-1][c], dp[r][c-1], dp[r-1][c-1])\n                ans = max(ans, dp[r][c])\n        return ans * ans\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square"}