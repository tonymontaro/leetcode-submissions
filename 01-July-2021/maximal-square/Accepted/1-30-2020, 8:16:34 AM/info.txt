{"id":298676620,"lang":"python3","time":"1 year, 5 months","timestamp":1580368594,"status_display":"Accepted","runtime":"368 ms","url":"/submissions/detail/298676620/","is_pending":"Not Pending","title":"Maximal Square","memory":"18.3 MB","code":"class Solution:\n    def maximalSquare(s, matrix) -> int:\n        \"\"\"O(r*c) time and space | r->rows, c->cols\"\"\"\n        s.cache = {}\n        s.m = matrix\n        s.rs = 0\n        s.solve(0, 0)\n        return s.rs**2\n    \n    def solve(s, r, c):\n        if (r, c) not in s.cache:\n            is_valid = 0 <= r < len(s.m) and 0 <= c < len(s.m[0])\n            rs = 0\n            if is_valid:\n                rs = 1 + min(s.solve(r, c+1), s.solve(r+1, c+1), s.solve(r+1, c))\n                rs = 0 if s.m[r][c] == '0' else rs\n                s.rs = max(s.rs, rs)\n            s.cache[(r, c)] = rs\n        return s.cache[(r, c)]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square"}