{"id":407720799,"lang":"java","time":"8 months, 3 weeks","timestamp":1602492918,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/407720799/","is_pending":"Not Pending","title":"Count Subtrees With Max Distance Between Cities","memory":"37.2 MB","code":"class Solution {\n    public int[] countSubgraphsForEachDiameter(int n, int[][] edges) {\n        int[][] distances = new int[n][n];\n        fill(distances, 1000);\n        for (int[] edge : edges) {\n            int a = edge[0] - 1, b = edge[1] - 1;\n            distances[a][b] = 1;\n            distances[b][a] = 1;\n        }\n        // Floyd-Warshall\n        for (int k = 0; k < n; k++) {\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < n; j++) {\n                    distances[i][j] = Math.min(distances[i][j], distances[i][k] + distances[k][j]);\n                }\n            }\n        }\n\n        int[] res = new int[n - 1];\n        int maxBitMask = 1 << n;\n        for (int mask = 2; mask < maxBitMask; mask++) {\n            int numNodes = Integer.bitCount(mask);\n            if (numNodes <= 1) continue;\n            // Sub-Tree\n            int maxDistance = 0;\n            int numEdges = 0;\n            for (int i = 0; i < n; i++) {\n                if (((1 << i) & mask) != 0) {\n                    for (int j = i + 1; j < n; j++) {\n                        if (((1 << j) & mask) != 0) {\n                            int dist = distances[i][j];\n                            if (dist == 1) numEdges++;\n                            maxDistance = Math.max(maxDistance, dist);\n                        }\n                    }\n                }\n            }\n            boolean isValidSubTree = numEdges == (numNodes - 1);\n            if (isValidSubTree) res[maxDistance - 1]++;\n        } \n\n        return res;\n    }\n    private static void fill(int[][] ob, int res){      for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n\n}","compare_result":"1111111111111111111111111111111","title_slug":"count-subtrees-with-max-distance-between-cities"}