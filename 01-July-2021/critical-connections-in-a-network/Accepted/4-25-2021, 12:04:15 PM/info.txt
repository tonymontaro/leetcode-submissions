{"id":484980172,"lang":"cpp","time":"2Â months","timestamp":1619348655,"status_display":"Accepted","runtime":"732 ms","url":"/submissions/detail/484980172/","is_pending":"Not Pending","title":"Critical Connections in a Network","memory":"211.1 MB","code":"class Solution {\npublic:\n    int topo = 1;\n    vector<vector<int>> res;\n    int seen[100001];\n    int explored[100001];\n    map<int, vector<int>> adj;\n    vector<vector<int>> criticalConnections(int n, vector<vector<int>>& connections) {\n        ios::sync_with_stdio(false);\n        cin.tie(nullptr);\n        \n        memset(seen, 0, sizeof(seen));\n        memset(explored, 0, sizeof(explored));\n        for (auto x: connections) {\n            adj[x[0]].push_back(x[1]);\n            adj[x[1]].push_back(x[0]);\n        }\n        solve(0, -1);\n        return res;\n    }\n    int solve(int node, int parent) {\n        if (seen[node] != 0) return seen[node];\n        int currentTopo = topo++;\n        seen[node] = currentTopo;\n        int best = INT_MAX;\n        for (int child: adj[node]) {\n            if (child == parent || explored[child] == 1) continue;\n\n            int rs = solve(child, node);\n            best = min(best, rs);\n            if (rs > currentTopo) {\n                res.push_back({min(node, child), max(node, child)});\n            }\n        }\n        explored[node] = 1;\n        return best;\n    }\n};\n","compare_result":"111111111111","title_slug":"critical-connections-in-a-network"}