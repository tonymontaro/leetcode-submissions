{"id":417748111,"lang":"python3","time":"7 months, 3 weeks","timestamp":1604762277,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/417748111/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"16.3 MB","code":"class Solution:\n    def findDuplicate(self, nums: List[int]) -> int:\n        # O(n) time | O(1) space | cycle dection algo\n        slow = nums[0]\n        fast = nums[0]\n        while True:\n            slow = nums[slow]\n            fast = nums[fast]\n            fast = nums[fast]\n            if slow == fast:\n                break\n        slow = nums[0]\n        while slow != fast:\n            slow = nums[slow]\n            fast = nums[fast]\n        return slow","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number"}