// https://leetcode.com/problems/decode-xored-permutation

class Solution:
    def decode(self, encoded: List[int]) -> List[int]:
        n = len(encoded) + 1
        
        def solve(prev):
            seen = {prev: 1}
            res = [prev]
            for num in encoded:
                prev = prev ^ num
                if prev in seen or prev <= 0 or prev > n:
                    return []
                seen[prev] = 1
                res.append(prev)
            return res
        
        
        for i in range(1, n + 1):
            rs = solve(i)
            if rs:
                return rs