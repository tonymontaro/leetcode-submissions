{"id":414063252,"lang":"python3","time":"8Â months","timestamp":1603865929,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/414063252/","is_pending":"Not Pending","title":"Minimum Cost to Hire K Workers","memory":"16.5 MB","code":"import heapq\nfrom math import inf\n\nclass Solution:\n    def mincostToHireWorkers(self, quality: List[int], wage: List[int], k: int) -> float:\n        # O(nlogn) time | O(n) space\n        workers = sorted((p/q, p, q) for p,q in zip(wage, quality))\n        inWindow = []\n        totalQ = 0\n        ans = inf\n        for ratio, p, q in workers:\n            totalQ += q\n            heapq.heappush(inWindow, -q)\n            if len(inWindow) > k:\n                totalQ += heapq.heappop(inWindow)\n            if len(inWindow) == k:\n                ans = min(ans, totalQ * ratio)\n        return ans","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-hire-k-workers"}