{"id":412317538,"lang":"python3","time":"8 months, 1 week","timestamp":1603474475,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/412317538/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"14.2 MB","code":"\"\"\"\n.*\n    -> true\nc*\n    j += 2, i -> last not c\ns[i] == p[j] or .\n    j += 1, i += 1\nelse \n    -> false\n\ni == len(s) and (j == len(p) or p[j + 1] == \"*\")\n\"\"\"\n\n\nclass Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        # O(sLen * pLen) time | O(pLen) space\n        sLen, pLen = len(s), len(p)\n        \n        prev = [False] * (pLen + 1)\n        prev[0] = True\n        for i in range(1, pLen + 1):\n            if p[i - 1] == \"*\":\n                prev[i] = prev[i - 2]\n        # print(prev)\n        for sIdx in range(1, sLen + 1):\n            sCha = s[sIdx - 1]\n            dp = [False] * (pLen + 1)\n            for pIdx in range(1, pLen + 1):\n                pCha = p[pIdx - 1]\n                if pCha == sCha or pCha == \".\":\n                    dp[pIdx] = prev[pIdx - 1]\n                elif pCha == \"*\":\n                    dp[pIdx] = dp[pIdx - 2]\n                    if p[pIdx - 2] == sCha or p[pIdx - 2] == \".\":\n                        dp[pIdx] = dp[pIdx] or prev[pIdx]\n            # print(dp)\n            prev = dp\n        return prev[-1]\n                \n                \n        \n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"regular-expression-matching"}