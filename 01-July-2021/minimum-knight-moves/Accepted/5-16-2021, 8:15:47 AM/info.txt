{"id":493857992,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1621149347,"status_display":"Accepted","runtime":"516 ms","url":"/submissions/detail/493857992/","is_pending":"Not Pending","title":"Minimum Knight Moves","memory":"8.1 MB","code":"#define ll long long\n#define umap unordered_map\n#define uset unordered_set\n#define pii pair<int, pair<int, int>>\n#define pi pair<int, int>\n#define v vector\n\n\nclass Solution {\npublic:\n    int minKnightMoves(int x, int y) {\n        v<pi> dirs = {{-2,1}, {-2,-1}, {2,1},{2,-1},\n                      {-1, 2}, {-1,-2}, {1, 2}, {1,-2}};\n        priority_queue<pii, v<pii>, greater<>> pq;\n        x = abs(x);\n        y = abs(y);\n        pq.push({0, {x, y}});\n        int seen[311][311];\n        memset(seen, 0, sizeof(seen));\n        seen[x][y] = 1;\n        while (!pq.empty()) {\n            auto node = pq.top();\n            pq.pop();\n            int dist = node.first;\n            int row = node.second.first, col = node.second.second;\n            if (row == 0 && col == 0) return dist;\n            for (auto [rAdd, cAdd] : dirs) {\n                int r = row + rAdd, c = col + cAdd;\n                r = abs(r);\n                c = abs(c);\n                if (r > 309 || c > 309 || seen[r][c] == 1) continue;\n                seen[r][c] = 1;\n                pq.push({dist + 1, {r, c}});\n            }\n        }\n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-knight-moves"}