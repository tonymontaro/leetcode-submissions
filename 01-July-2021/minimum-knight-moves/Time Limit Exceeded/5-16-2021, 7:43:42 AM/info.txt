{"id":493846192,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1621147422,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/493846192/","is_pending":"Not Pending","title":"Minimum Knight Moves","memory":"N/A","code":"\n#define ll long long\n#define umap unordered_map\n#define uset unordered_set\n#define pii pair<int, pair<int, int>>\n#define pi pair<int, int>\n#define v vector\n\n\n\nclass Solution {\npublic:\n    int minKnightMoves(int x, int y) {\n        v<pi> dirs = {{-2,1}, {-2,-1}, {2,1},{2,-1},\n                      {-1, 2}, {-1,-2}, {1, 2}, {1,-2}};\n        priority_queue<pii, v<pii>, greater<>> pq;\n        pq.push({0, {x, y}});\n        uset<int> seen;\n        seen.insert((x * 1000) + y);\n        while (!pq.empty()) {\n            auto node = pq.top();\n            pq.pop();\n            int dist = node.first;\n            int row = node.second.first, col = node.second.second;\n            if (row == 0 && col == 0) return dist;\n            for (auto [rAdd, cAdd] : dirs) {\n                int r = row + rAdd, c = col + cAdd;\n                if (seen.find((r*1000) + c) != seen.end()) continue;\n                seen.insert((r * 1000) + c);\n                pq.push({dist + 1, {r, c}});\n            }\n        }\n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-knight-moves"}