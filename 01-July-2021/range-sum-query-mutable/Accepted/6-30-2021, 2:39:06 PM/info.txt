{"id":515387026,"lang":"cpp","time":"16 hours, 56 minutes","timestamp":1625060346,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/515387026/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"151.5 MB","code":"class SegmentTree {\npublic:\n    const int N = 1e5;  // limit for array size\n    int n;  // array size\n    int t[200000];\n    void build() {  // build the tree\n        for (int i = n - 1; i > 0; --i) t[i] = t[i<<1] + t[i<<1|1];\n    }\n    void modify(int p, int value) {  // set value at position p\n        for (t[p += n] = value; p > 1; p >>= 1) t[p>>1] = t[p] + t[p^1];\n    }\n    int query(int l, int r) {  // sum on interval [l, r)\n        int res = 0;\n        for (l += n, r += n; l < r; l >>= 1, r >>= 1) {\n            if (l&1) res += t[l++];\n            if (r&1) res += t[--r];\n        }\n        return res;\n    }\n    SegmentTree(vector<int> arr) {\n        n = arr.size();\n        for (int i = 0; i < n; ++i) t[n + i] = arr[i];\n        build();\n    }\n};\n\nclass NumArray {\npublic:\n    SegmentTree* seg;\n    NumArray(vector<int>& nums) {\n        seg = new SegmentTree(nums);\n    }\n\n    void update(int index, int val) {\n        seg->modify(index, val);\n    }\n\n    int sumRange(int left, int right) {\n        return seg->query(left, right + 1);\n    }\n};","compare_result":"111111111111111","title_slug":"range-sum-query-mutable"}