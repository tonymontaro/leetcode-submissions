{"id":407642766,"lang":"java","time":"8 months, 3 weeks","timestamp":1602478595,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/407642766/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"44.9 MB","code":"class NumArray {\n        SegTree segTree;\n        public NumArray(int[] nums) {\n            segTree = new SegTree(0, nums.length - 1, nums);\n        }\n\n        public void update(int i, int val) {\n            segTree.pointUpdate(i, val);\n        }\n\n        public int sumRange(int i, int j) {\n            return segTree.rangeSum(i, j);\n        }\n    \n    \n       class SegTree {\n        int leftmost, rightmost;\n        SegTree lChild, rChild;\n        int sum;\n\n        public SegTree(int leftmost, int rightmost, int[] arr) {\n            if (arr.length <= 0) return;\n            this.leftmost = leftmost;\n            this.rightmost = rightmost;\n            if (leftmost == rightmost) {\n                sum = arr[leftmost];\n            } else {\n                int mid = (leftmost + rightmost) / 2;\n                this.lChild = new SegTree(leftmost, mid, arr);\n                this.rChild = new SegTree(mid + 1, rightmost, arr);\n                reCalculate();\n            }\n        }\n\n        public void reCalculate() {\n            if (leftmost == rightmost) return;\n            sum = lChild.sum + rChild.sum;\n        }\n\n        public void pointUpdate(int idx, int newVal) {\n            if (idx < leftmost || idx > rightmost) return;\n            if (leftmost == rightmost) sum = newVal;\n            else {\n                lChild.pointUpdate(idx, newVal);\n                rChild.pointUpdate(idx, newVal);\n            }\n            reCalculate();\n        }\n\n        public int rangeSum(int l, int r) {\n            if (l > rightmost || r < leftmost) return 0;\n\n            if (l <= leftmost && r >= rightmost) return sum;\n\n            return lChild.rangeSum(l, r) + rChild.rangeSum(l, r);\n        }\n    }\n\n}\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray obj = new NumArray(nums);\n * obj.update(i,val);\n * int param_2 = obj.sumRange(i,j);\n */","compare_result":"1111111111","title_slug":"range-sum-query-mutable"}