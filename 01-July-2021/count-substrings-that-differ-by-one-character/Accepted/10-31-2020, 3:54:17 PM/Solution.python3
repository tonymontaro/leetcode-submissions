// https://leetcode.com/problems/count-substrings-that-differ-by-one-character

class Solution:
    def countSubstrings(self, s: str, t: str) -> int:
        def oneDiff(a, b):
            if len(a) != len(b):
                return False
            return len(a) - sum(x == y for x, y in zip(a, b)) == 1

        n = len(s)
        ans = 0
        seen = {}
        for i in range(1, n + 1):
            for j in range(i, n + 1):
                st = s[j - i:j]
                if st in seen:
                    ans += seen[st]
                else:
                    rs = 0
                    for k in range(i, len(t) + 1):
                        tt = t[k - i:k]
                        if oneDiff(st, tt):
                            rs += 1
                    ans += rs
                    seen[st] = rs
        return ans