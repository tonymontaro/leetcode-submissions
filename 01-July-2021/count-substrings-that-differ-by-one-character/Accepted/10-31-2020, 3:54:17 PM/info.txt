{"id":415232234,"lang":"python3","time":"8Â months","timestamp":1604156057,"status_display":"Accepted","runtime":"3188 ms","url":"/submissions/detail/415232234/","is_pending":"Not Pending","title":"Count Substrings That Differ by One Character","memory":"14.3 MB","code":"class Solution:\n    def countSubstrings(self, s: str, t: str) -> int:\n        def oneDiff(a, b):\n            if len(a) != len(b):\n                return False\n            return len(a) - sum(x == y for x, y in zip(a, b)) == 1\n\n        n = len(s)\n        ans = 0\n        seen = {}\n        for i in range(1, n + 1):\n            for j in range(i, n + 1):\n                st = s[j - i:j]\n                if st in seen:\n                    ans += seen[st]\n                else:\n                    rs = 0\n                    for k in range(i, len(t) + 1):\n                        tt = t[k - i:k]\n                        if oneDiff(st, tt):\n                            rs += 1\n                    ans += rs\n                    seen[st] = rs\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-substrings-that-differ-by-one-character"}