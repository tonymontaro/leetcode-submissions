{"id":451416805,"lang":"python3","time":"4 months, 3 weeks","timestamp":1612341202,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/451416805/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"17.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: ListNode) -> bool:\n        slow = fast = head\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n            if slow == fast:\n                return True\n        return False","compare_result":"11111111111111111","title_slug":"linked-list-cycle"}