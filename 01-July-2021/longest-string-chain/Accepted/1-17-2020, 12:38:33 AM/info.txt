{"id":294860023,"lang":"python3","time":"1 year, 5 months","timestamp":1579217913,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/294860023/","is_pending":"Not Pending","title":"Longest String Chain","memory":"13.1 MB","code":"class Solution:\n    def longestStrChain(self, words) -> int:\n        \"\"\"O(n^2) time | O(n) space\"\"\"\n        self.cache = {}\n        self.words = set(words)\n        best = 0\n        for word in words:\n            best = max(best, self.solve(word))\n        return best\n    \n    def solve(self, word):\n\n        if word not in self.cache:\n            if len(word) == 1:\n                self.cache[word] = [1, None]\n            else:\n                result = 0\n                self.cache[word] = [1, None]\n                for i in range(len(word)):\n                    new_word = word[:i] + word[i+1:]\n                    if new_word in self.words:\n                        rs = self.solve(new_word)\n                        if rs > result:\n                            result = rs\n                            self.cache[word] = [rs+1, i]\n        return self.cache[word][0]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain"}